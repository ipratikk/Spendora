%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Multicultural people standing together.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 6/30/2020
%%BoundingBox: 0 0 3800 2000
%%HiResBoundingBox: 0 0 3800 2000
%%CropBox: 0 0 3800 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Multicultural people standing together</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Multicultural people standing together isolated flat vector illustration. Cartoon diverse characters of multinational community members. Society and public concept</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>people</rdf:li>
               <rdf:li>diverse</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>crowd</rdf:li>
               <rdf:li>person</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>society</rdf:li>
               <rdf:li>multicultural</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>standing</rdf:li>
               <rdf:li>member</rdf:li>
               <rdf:li>portrait</rdf:li>
               <rdf:li>boy</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>community</rdf:li>
               <rdf:li>kid</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>old</rdf:li>
               <rdf:li>smiling</rdf:li>
               <rdf:li>together</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>young</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>child</rdf:li>
               <rdf:li>civil</rdf:li>
               <rdf:li>cute</rdf:li>
               <rdf:li>different</rdf:li>
               <rdf:li>group</rdf:li>
               <rdf:li>multinational</rdf:li>
               <rdf:li>multiracial</rdf:li>
               <rdf:li>public</rdf:li>
               <rdf:li>various</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>male</rdf:li>
               <rdf:li>female</rdf:li>
               <rdf:li>handicapped</rdf:li>
               <rdf:li>waving</rdf:li>
               <rdf:li>association</rdf:li>
               <rdf:li>united</rdf:li>
               <rdf:li>unity</rdf:li>
               <rdf:li>solidarity</rdf:li>
               <rdf:li>disabled</rdf:li>
               <rdf:li>girl</rdf:li>
               <rdf:li>population</rdf:li>
               <rdf:li>guy</rdf:li>
               <rdf:li>diversity</rdf:li>
               <rdf:li>social</rdf:li>
               <rdf:li>multiethnic</rdf:li>
               <rdf:li>adult</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-06-30T22:42:03+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-06-30T22:42:04+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-06-30T22:42:04+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>136</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAiAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FVk88UERllbjGtKtuepoOnucBNMoxMjQdBPFPEJYm5RtWjbjoaHr8sQbWUT&#xA;E0VzuqIzsaKoqT12HywkoAs0siuIpWZUNSmzbGg3Pf6P864AbTKBHNUqK074WKAnN0LmoPwCvFRy&#xA;5E1Uim4qNvizCyGfH5fHy/BciPDwqmqarYaVYvfajMLe1ip6kxBIHIhR9kE9TmfjhKZoc3FlIRFl&#xA;dpuo2epWEF/ZyCW1uUWSJx3VhXcdj4jtjOBiSDzCYyBFhE5FLsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdiq15YkpzdVr0qQP15GUwOZSIk8m0kRxVGDDxBr+rDGQPJSCOaFuRqaS&#xA;+pbGOaL9q3kqjdP2ZBX8V+kZJpnxg2KI7v2qes6a2o2qQBwnGVJGqqsCENafErf5+22VZIcQpzdN&#xA;n8OV+RVNKsFsNPgtAeRiUBmAAq3c7BcMI8IpjqMviTMu9ETRCRONaEbqamlR0qARUe2SItrjKigt&#xA;K0Ow0wMLZAoYkiu5FaV+I1benjT2yEMQjyb8+qnl+ot6ppjXRS4tpTb30NBDMCwUrzVmR1Ujkp49&#xA;DloLr82Hi3BqQ/G6OTnwXmQXoORUUFe9Aa4G4XW6F1bSNO1exksNRhFxaS05xMSAaGo6EHY75PHk&#xA;lA3HmiURIUV2mabZ6ZYQWFlEIra3QJGigDYDqadSepPfBOZkbPNMYgCghZtUnGsJZRRho/h9WoYN&#xA;8QJLKenFdvp269bo4R4fEWs5DxUvl0aOTWYdTM8oaFCqwcv3e4IrT6cwzjuXFbnR1JGI46G/Xqjm&#xA;kKsqhGavUilB7kmmSMqNU44DbHipNK0FaDCTQUIO1muLxUlZDbqjHkhJ5EjanQbZi4cksoBI4aLd&#xA;OMYbc0VNPBAheaRYkHVnIUfecy3GlIAWTS/Fk7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq0zon2mC/M&#xA;0wGQHNIBLYIIqDUeIwgoQs1s5u1nCq4C0Ck0oQevQ5jTxHj4ubbGY4abtLaSJ5HJVVc19JdwPDfb&#xA;DhxGJJ7+i5JggIDVNQv4Nd0m0hFbe6MvrgcakRqD1PQCtclOZE4gdXIwYYSwzkecar4pxlzhOxVJ&#xA;tJv9SbWNQ0+9KMISJYGXYmN9lAHtTf3ynHKXEQXO1GKAxRnC99j7wnOXOC1JIkaM7niigliewGCU&#xA;hEWeSQCTQQNjrVpe3L28VQ6LzHKm4rStPpzF0+sjlJAB2b8umlCPEUfmW47sVdirsVdirgQeh6dc&#xA;VdiqA1jSINTgjjk4BopBJGzxrKoI2IKPsaqSPxwgtGfAMgAPQ91q9haNaWy25medUqI2kpyCfsrU&#xA;AV4jap3wFnihwxq7RGLY7FXYq7FXYq7FXYq7FXYq7FXYq7FUk1W0ujK7gMysRRl6geHtmp1eGfET&#xA;vTm4MkaprRVullCkkqK86+Havvg0ImJV0TqDEhPM27gpR5l80adoFtFJdBpbi6f0rO0ioZJX6mlS&#xA;AFUbsxNAPowgbEnkExBkREcyxrSfOFtrnmqxDW8ljPZ+rDNBMVPxyJyUo6FgysKU6fLMeZHHEg2C&#xA;HZ48Mo6fICNwQgdc/Ny70D8xYfLuraX/ALg9QlittN1WB+T+u4jDiWPsokk4+NN9+2XjjGYNH1R5&#xA;h1OQThRkPTLkXoN/qenafCJr+6hs4SQoknkWJSx6CrkCuQjEnkkkDmxzzLNJpms2Gvw/vLRlFvc8&#xA;TUFGJYHbrUGo+WYme4SEvg7jQgZsUsR58wxvzn+b99aeaIfLHlOyg1K/WNZ7+6nZhBAjgFRRCpJ4&#xA;sGO/cDc9MsmMYcUjs6eMJzy+HAerr5Mw0nzJYarojy6g8dk4ka0uVZwqeqFDfAz8a8kIYf2ZWMfj&#xA;QoAniDbk/czoneJYbdeZLPQDqOpfWEaaNHj06NjUzSOaIQB+wv2m9s1mGPg3f8O3xd/PH4sIRHKV&#xA;E+5f5R8y6xFqWmJqGptfLqkjRygkMhZ42dGi2HEKVA2oN+nTLcGeXFRPNr1ujxjGTEUYvQNX1eLT&#xA;o4mZGkeZwiIorXcV/DM3JkEXUafTnKTvVJXrn5h+UtFuprK+v1Gow2z3j2KBnl9ONC+9BxVmA+EM&#xA;RXbxy4QJFuMZAWO5IPy//MbzN5n124tr7y8dK0owNcWVy8oaUhXVQsibULB6+3vgMocgbKRjygXK&#xA;PDE8mXaz5p8u6JLbRatqENnLeNwtY5Go0hFK8V60FRU9MREndF70h9JdbbVri2E3rW96ou7J6hlI&#xA;YktxI6/0zGh6ZmJ67ufm/eYozA3jsf0InWvM/l3Qwh1fUbexMoJjWaRVZgvUqp3P0ZlwxylyFuvl&#xA;IDm4eaPLo0201KTUreGxvlV7S4nkWFZAwqOPqFd9+nXAYEGuq8Yq7TMEEAg1B3BGRZIS+tby4KLD&#xA;dtbRAEShFBZqkdGP2dgemW45xjzFlhOJPI0rWlsttAsSsz0JJdzVmLEsSTt3OQnLiNpjGhSrkWTs&#xA;VdirsVdirsVdirsVdirsVdirXBefOnxEUJ8Rg4Rdpvam8KHkP5w22sHzt5Vuo6JpsQmX1SQAHJBm&#xA;Vv8AWjC0+nJzywjgkJc5cm/R4ZzzxMeUdy80vNc16x8y3ErXQRryjWjxbcVhc+mF22YA1rkMEcWX&#xA;CDEfQd/eerHtvLqtLKW4rIP9jvt+t6Jb6npWqavpGpa3A81xayxzyW0fEo10qFRKQaDiHYOBXZgP&#xA;DK4Y5RyEjkQ4P8uYZ6WEZX4glyH391b/ADY/P53l8z/mJe3/ANWk/RmnW0ttZr9rhwepk/lDyiuw&#xA;9h2zI7QgIYBGxxE3+Pc7PscmeYy4SYiPOuv6yhIPznXQfJEul3mmyXFzcX8yWlrMSqQWfwSFa/aq&#xA;jPRB0HyFMszYI5I1GQPp5jv73Clqp4Ml8JhLiuj0Cff4V0XVdWsPOejSmJpbc+okQAWdZE4oWHZk&#xA;77HoPDOYhq544nDk7/k7vT4oSzRzg9Pnfewax0nzSNdmsdRkZ7iC8kvJpBy9IcmVfVQHoHWNAvtQ&#xA;Z3fZMsZwRlD+L8U8prRk8SXHztGQW8mq3c11eliisUjStKU/Z+QzmRj8fJKc+93PbHa50OOGHB9X&#xA;DZPPb9v2BkloyQ3mkTWURa605l+rp8R5PUfDRTVuVKZZj0gEiT8HU6n2myzhCMN5GNTBHM+X7G/z&#xA;S88eZj5c1PU2n/RqIkEWkw27skySswE0pkARg5qeND8KjxJyzGYzzRiOl27XAZjRyyy9JmAAPj+l&#xA;59+Xd1fr5W1m6uLcXF5qM6W6Xc3xSyC4HAtIXqXRalt+u4y7W4+LNAXtz+SNFn8HSZZkWftN/oZ/&#xA;qvmjVtH8vvB5TePTr/gEt551E7xwQ0rEhcFf5auyn5VNcq0+IRmTLe3X6ntrxcOPgiRGPpP9by72&#xA;Ffl8fO+peYdQ8yeYLWfUpEgaOC8uaB/WQ0WK3ZqKAylh8Pw5LtHLj4RCMt73Hl5uy7EBlMzIscOx&#xA;8/J9AW2k3tj5L0i4jWuo6ZbLcSRxgvUsnqSxxqtajlsqjtsMozxsCUejkaTIBIwnsJ8/IsAuPNnl&#xA;jznqcF1d2q2+ppEbR4LmkkRiDl+aMRT9o8wRWnSu+Y0tbIxAB4d3a4+yhikSQJivwKRnnaG8tfMt&#xA;/pS6U1xYR6PCukpEq+kyR80a3/lRnkPwim4HsMyNT/Cb6/guq0EwPEjw36bH6lD8hfPc0CnyL5iW&#xA;7ttdjllk0yG7Vh/oojDiEM551Ti7Copx6HMyYBHFE2HT4JkHhkKL2vKnKdirsVdirsVdirsVdirs&#xA;VdirsVQ9/BcT2kkVvL6MrU4yb7UNe1MWvLEyjQNFZbf6DYRLeTgsgCtK21Se3vglIBlgxSoR5lJP&#xA;zE1DUrHyxNNp9w1m7SxRz30aqzwQs4DuoZXFT9gbGla9sSaF82yEBKQBNA9WPflHeeYpLjWbW6vL&#xA;jU9Dh+ryaZqF47STF5kLTR+qyj1FGx6/DWnyYyMogkUVy4xDIYxNx2r4hJPz6ZpbzRYI25sqzkxL&#xA;uQSY9yB4jNfrjuHe9jQNSNc6YnB+XOq+YpV1v1Y4NL0mJnuakmRnhHqmNFG3xCg5E7e+ZnY+cQxS&#xA;HUn9Dg+1kCZA92M/pRDpNIjRwErNICkbDqGYUFMzYmi+aYzUgfNL9D0TVfL1rJY30X1a75Osygq1&#xA;RWh3Un+XND2rm485I5cn2vsLCI6aII35oDzh+XfmPWtHtLvT7cz3EYmuIbRCDJLFIx5mNf2mX0/s&#xA;9T2qcyuy8hgeGXKW4dN7R4Y5oicPqgSJe78fenX5GXOpRaPqGj38E0DWM4eJZkdCFmB5IAwHRkLU&#xA;/wArMTt3EBOMx/EPudd2PkPAYHofvel6tHEvle4lCD1ZLpI2fvxVOQH4nNn7MDn8f0MO2pGgPx1Y&#xA;bd6ZA9sjwrwZWMjmOg5MakhhTuTvmVIROomJkw39I6H+37XH1mkE9JGcIxyS4KlLmR/Zy60ET5Ig&#xA;WbzVp6MoYB2eh8Y0ZwfoK4Jcnk+zo3nizL8w/wAr/J/neS2j1iee1u4v7t7SZIpHXegZJFkVqVND&#xA;xqN6HHHkMNw9bkgJCiXmHmvyn9Xs59A0ppDfeXnjWxdyA80ChXjBYBVYgEV2+2vbKoZRjzXL6MnP&#xA;yP4+x2gxyy6cCO2THVeY6fjvCN1XTJ308wQool9J6v8ADXm4pReTJX6SMxdPmFmUj/Y6/tXsyREM&#xA;OGIjij6iSQLkeg/Fcu5mnk2Gb9CwGWze1SJRBGH9OkhjC8pECPL8JetKmuaqeEiZmTfF+PJ2lcER&#xA;CuHh6fi/1s30udBpgkc0SL1A3sEdh+oZt9Maxhws8D4lDrTwK8htrjV7nUxCBc3MjyGnjIxJoBtX&#xA;fNFOZkT5vfYsQhEDuFM1u/P2iadaafFrYl/SsNpbM8IjZnr6QPIk8VqSxPXN3h7Oz6j1AenYWT5P&#xA;DanV48E5RvmTy96aGbTf03p+vQwxvdxWqsZmSsq2k7KSFJ2H2u2+57ZjwM8RMTyB3+5ycWmhlhxk&#xA;bnaJ+Fst1rzFaaZaQzhTcPc/7zxoQOQAqWqeiio398zMucQF87cXTaOWWRHLh5rPLnmW21uKfhG0&#xA;FxbMFngY8iA1SrBhsQ1DgwZxkB6EJ1uilgIs2JcijP0tZfpIacGLXPHkQBsNq0J8cn4g4uHq0/l5&#xA;eHx/wozLGh2KuxV2KuxV2KuxV2KuxVAa9aR3Wk3KMvIrG0kfiGQVFMqzRuJcnSZDDID5sL83+aox&#xA;oFjZWUnGeUL9ZVa/CiLQofHkfww4TGca8nWdt58mlmDE1IysfBZ5bk8w6pbW9raaxLYqkZdgEikD&#xA;gEDjV0Zl/wBiwzIEYgEV7nF7P1eTJIGZ4upvqxz8y7PVPL1jatJcLcT3skkf1kqC9FAY8qgfE38M&#xA;189GZA09TLt3HgomMq8q5/MbKXknzfOPJHmCwv5E9G0jRoJG+EgXUnpMGbZaBmFK77/dfpcEoek/&#xA;Y6TtbtTFqoTljEuKt7+W1EoTQm56nbyw8JTDKjkEgioNVB+ZGX55GA5bnk892R2fPNmBqoQ3ke4J&#xA;D53/ADC0qy853elXrSyW2mKY7iWBFd5rwmsw5MycVQ0TpuVPSuYk+zeOAP8AE9zh9oBiySFfuxyF&#xA;d3xD07yLqemXui+X9dt24PPO1vcWzuGaJH9SKMAdv3vA1/ysjDGIEb7ssuollEhVRq/uP3Izzv5s&#xA;httWWwERlFugMjA0o770pTf4aYNZoTnqjVPPy7bjpshhw8XLqxPVfPVmvl3UDcRulvBdQlVWjMSV&#xA;4sR0/nXM7sTF4GQwJuxbfqNR+b0wzRFVPh+yx+lhE/5iwTK8WlxypNT+/kCgLv2WrV+nOlnihmHD&#xA;IWHW4suTCeKBorLL8yNQ03XdJ1K64LBaXCm69JeLPCQVlrvQ/Ax+nMI9m48cTw3v3uTk1pyyEpCN&#xA;x6gbqXl7zFJqzeaPNPmCxlj1GWZbmKdoWYpEEP1eOBitQYuGxH+Sc0usvjhGB+373ddmHH4WSWQb&#xA;jvHTpTI/Od1rmrRWnmDTv9x10khkKOT9iWJS/JWB/aX7PTMfHqcEJTEwTE/eO7d2H5PUZMeMwIjO&#xA;Iv4EddufklcvmnSokE09yTJtyPByS33Zto6OfCCBt8HzbPp88spMt5Wd7esa5580+2uorSK39SKK&#xA;GNg0RAQGRQ9FHgARnNa7LU+H+a+maDsyeXEMhO8kBcedobLynqdxOHSPUYjLp6/ab965t3Wo2BBU&#xA;sMy9FhnlHhx5yGzVqxDCY5ZbjHICVfMUwXyjreg3vmiwsb5mhtpjIWmchVBjiZ13qe6jJnsLJiHH&#xA;kMaHc5GT2khl/d4Yy4pd9frTvzZpbR2sF8I7YSTI08AvByLQxmlfh35UpT55HSy4PqMxA/zTu1av&#xA;NE+kDGckSPrG3w872Zx+XdjpF3orM8SPfqpt710L8CGAPwK1KL9HbLzggCaBo9/N0uLtmeoFg/Se&#xA;gpK/MNvc2+q2ejxVkESyzB2bZIGIAJ2/acUA9jmqyQlASlM+mJqPnf6hz8/e7nT60Gew+r6vKvx+&#xA;Kd5Ju79k1JLEKt7NdvbPITyVRbsVBCgfD9omprk7linGMdzkjGV9wI2+XUozamGfeQqGMkV3/wBv&#xA;czzSNJi0+3419W5clp5z9pmPXc70zZYsYiPN1mo1ByHuj0CPyxx3Yq7FXYq7FXYq7FXYqlnmfX7X&#xA;y95e1DW7pS8GnwPO0a7M5UfCgJ7s1AMlCPEaYylQt48//OTyNHt5ZJ5DdXvQNj1rSBszx2eepcb8&#xA;15JX5fmhvtDtdQu7mSV5UUS/EzMZlULIwDEhAWUnioA8MwMkDCZhAAV1cbUYoZI+Pq5yIvhjGPP7&#xA;eT0b8rr2yvp7w2pb07IegQw35M1T+rLJ6fJjiDMjfucrDDTiV4RICv4kt/5yHhP+GdGuVrWHVYlb&#xA;fbjLBMn/ABKmRx9fc19oC8bzd7cxflZ5hvONfrF3ZWyt4emxkan/AAS5k6T+8Dg6OPokfcgfI95d&#xA;HXtHsllZLW6vrT1kWg5fvkzcanDAxMyPVGJr5ORhzzj6AfTIi3nnnQk+cdeJNSdRuySf+M75qo8g&#xA;1ZPqPve4fkpol55j0ay1W3kSG30y6W2nEhb1C8CxykoACKESAbkZoMvZ8hl4rFXb22n7dxy0vBwy&#xA;4uHh6Vy9/wChM/PjqnmjUnbZVZST7CNc2keT5n2iP38vx0Yxrdxa2f5ZRXdxGZJdVvrqMAECgMaD&#xA;luD9lovxyWLTnJlEga4XpOy9UMOllAixN5lpzvHdxgqRHOJFR+xaPixA+QbN/jnU+FwZo7U7NvSt&#xA;bqZSbJ5WhdgK7qFZh9Kth1BvYc6TiHU8nonnGCOS/vZFkEcF/aEhywUGSJyYyPE0cdPDOR7Ozxx4&#xA;4ifOMvvG7u+2tFmyThPCCfT6q6196E1DVru50hJJZOck6qvFWDKGcVYDiSvj0zT5o1lIHIEvb6af&#xA;+DxkfqMRfvrdgmrE/Vh7uK/cc9JlHhgB3PlvFxSJ72a2Oqmfy9BeE1eO3SIk7nlEohBP0rnn3aeP&#xA;h1Mh538930zsfNejgfKvkaZ15qtdNX8mtPQvEb6CG2mVCyeqFncM1BXlQ+pXN72OYjJEbXX7Xku1&#xA;xkPGaPBxfDbZ4lJeNZarY3ZUslvIsvEGnIKwLLX3Apm/1MRMGB7vvdJp5SxkTHQ7fB7Z+aeoNPDo&#xA;N9Hp8lpYBZYoWneLjJFKkZSgheYqoC13zl7IBFbef4LldoYIzlE8Z4724Y2b+PD96bfk7qEMGn6o&#xA;L2Rbcw+i7NKwUekQ/FizU8KHIwyempbV9zbh00fEnLF6oyPT+cPqHu6jyKZ3V9YajfTajZukscwV&#xA;FmQhgyR14io/1iae+c7rtSck/wCiOX483fYMHhjf6urX5f8Alq+sdd1nUpHcafckfUom2BklPqXD&#xA;geHIIoPsc6LS5RkwQJHqA4b8o7B1OaBjkkL2u/iebPMtYOxV2KuxV2KuxV2KuxV2KvNv+chr02/5&#xA;YXsINDe3Frb/AEGdZD+EeZOkF5A0ag+h4Xo3lD6zoen6vcWk728+oPbvMk0CxmIQNQCP4puSyjk2&#xA;1CooNzm0MycnCHCIqNrvKstsbKSePWHhsNNnluL0QrJG55xx+mnNo46UML9BXcLWprhlCMh6t6ce&#xA;cRI2RyTLyx+eNroV0YbXTpo7CRgXnEoMtK1LemVYHr0Z2+eUznGWxGzbDKYnZ69+YEieb/ym1K5s&#xA;2Ek1tDHqVtIg2cW5E4ZQf5kVhTxzBnj4JjuLlyPiYy8JbzBqNz5NltomYabdyLLJAwqomiIBZT4j&#xA;ofbr2y3TDhyOqwylA8P8JV/JGoWtrrmjXtyaW9pdwSTMP2VikUk/QBXN1MGWIgc6LkRNTBPe9Y80&#xA;/k55Eu/Nbn6gyPfq9xIVnmo00nNiwBc05P2G2chk1OQTEQej0mDs/BLEZyG9958mW/lVoOjeX/Ld&#xA;zaaahggN088wdy3xGNFLVYnbigw4c0sguXNGs0sMEqjtGrYH5knj1M+YNZNfq0an0/cyuIYQfoPL&#xA;6MyuTxO2XJPJ0H9ged+aNYn1ax8veVdPiM0lkJCyoCWkuruUsFH+rHwHzrmy0cOGJkertMJ/dxiE&#xA;y/M/y/B5Xs/JHl08W1aCO7utQlQ9Tcsm3uB6bKD/AJOR0+QzzcQbdRHhAHVOodHsJfyL1m8vSUeL&#xA;UFnsnpX94oihFB/leo6n7+2X6iZ/MAD+b+tlij+6JPe15et9Y1HynY3Etkt9aSrx5yuV3RzCKN8R&#xA;B5LTOb7Rw4xkIBAP693b9ldp58ZMZwlPH/DwgE+fUIvV9Bktbvy9aTWq2s+oX1DBG3qKqB4lUdFq&#xA;SZG2zXCMbFc7ehw6yWWEyQYxiNgavl1qx070g8s+XbbVLXzZbyn4bTSriaBiKkSW8scqH6fS4n2O&#xA;d5rMvDGJ/pfoeE0+PiJHkl3l31l8iyiMg3V/qIsrTkKhI4kS5nkp/kfB/wAFmk1ujjPPxS5cI+O5&#xA;/Z8HfaDtCUMAxx+rikfdsP2/Gnpnm38vdF0j8vpNQlmll1NIomDyyu3J5HWoVOXAUqfsrSnbL9Dl&#xA;gMkRGIA/H4/S4Os8SYkZSMj+Px+h5RrdsE8o2rzhD6krz2Mqn41IYRTROtafGAroevwNmxnEeMSO&#xA;6i4IyXjET05M11/X4dT8heUNISWOW+jhiDKWHqseDIiRrWrcUSslPs1WvXNHq4/vJWPSNy5lHw48&#xA;G+WR4Y+V7GX6Pt6JFc/pDXNSla3iMNqzOUjAPFEBLEeLEU6DNPPjy71y6/j+16TTjTaCsQIEpnYd&#xA;Se8/t2HId5lHnTyXH5Q0LTL/AEzUZ5Z7pys9zG/po3JOacAprTbbc4NRp4xiOrfpNWc2SQkAAOj1&#xA;/wAk30N95R0m5iZmDW0ayF6lvUjHCXkT1b1Fap8c2cMfBER8nns0+Kcj5lO8k1uxV2KuxV2KuxV2&#xA;KuxV2KvH/wA972DU0svLE9heARzR6gL6PgIaKksQBf4wBVjXnx6Zn6TET6hKN9xcfLOPKQNeTB7C&#xA;9hj0LT/Lhh53VpcyXcU/qrIgt4/WJJEIZjJ/pNAnzPbNgISExy/FODOYINMM8raNM8PmHyrLLEmp&#xA;zMyW4SQcXaNwz0FedA8Cjp9kse2R5ghhVsfi8i+bpNS+oLpN19aLcCpjYIDWleZ+CnvXMfglypi+&#xA;uPy68tnT/KEOm3REiC0jtJGH2XCKwcrXtWQj6Mx9XLcDu/Z+p2Omh6WDflp+Vk95+VN1ouuQC11C&#xA;W9uJ7KXmshjLRxxg1QuOLGOjKPn1zG8cGXFErPQyjHhmKmN3nWgeVLyWDzLprLXVNBYTmNTUNFE7&#xA;RXPGnX9hgfAe+b3HqADE/wAMnGnhO46xe0eStW/T0fly6Y8riG39G5J687YuKn3YAN9Oc72hh4dT&#xA;Xxeg0OW9HI+dfcmWoE6TZ+ZYB8MbwgxdqCYlBT/kZT6MowR4ZkNPbOa9IJ9aI/QxfzDY2+mflRJ6&#xA;7hLvVJopY0P2mUOCoHyQcvpzM5l5rFg4NIT1lR/U78lPy3Foz+bdUjrd3PL9FxMP7uFtvW/1pB9n&#xA;/J+eZGfP6RAfF2OjxVEE9zzX827641v839SaGsltodvHbs38qKAr/wDJe4IzJ7PFSHxaNSbmfJl/&#xA;m+A6f/zj/pURFGvLqN27V9R5ZV+fwqMlxcWpPk3VWEMostAns/y+0nRoUpczw2gZd/hlnZZXr8nY&#xA;1zlu0rnnlXUvSdjSGPhlLlEE/YU/13y2JtT0Qgl2069gnV23LIDRv+GofoyPhcGUBjj1Fwkf5wLz&#xA;ryjo2o2v+Ly9pLClxE9lbySoyK3qzUZFZqBjw3zo+1dTE4RwEE+RdX2TpiNQBMEDzDHNK8t6rp3k&#xA;ew1S/tZII7HWLqK5V1KlIby3tkE5r0VXg4k++TyZoTl6TfL7L/W1Ycc8f1Cvf8Hqv5i6NoHmby82&#xA;qmWVb/T7aVrO2jYUZnUELwKsT0G6Ur3qNsjpzLFOjXDe5/a1ZIjINr4u79jye88rTar5ZS2sfrEl&#xA;zpNtJfarCx+CKQuywxBKVV3Vi1PAE9GzJyZYRmZ3tLz25D9TXHHMgQrceW/X4sgm8tw3X5ZaXo8l&#xA;jLNqJkt7yK4kjaKOGQcgyCZuK8gBuFbvv0zC1erF3e3L3so6TLIcOMHju/cnelQelBYWV1IttrPl&#xA;qZLbUI3JBaIPWOYEblZFo4b/ACj3wZ6A4gNmqejlnyxINTj3ov8ANPRLS08m6XpejK0tvbXZKIGM&#xA;hAdJG2PhU9s1vaHFMCRHV6PsYxhMi+n6WceQNLu9M8o6fa3ieldsJbieH/fb3Uz3DR/7Ay8fozMz&#xA;EGRrl+p1cLrdkGVMnYq7FXYq7FXYq7FXYq7FVk8EM8MkE8aywSqUlicBkZGFGVlOxBHUYqx6H8t/&#xA;IcOnnT4dCtI7Qy/WOCRhSJaU5hx8QNDTr026ZPxZXdtfhRqqTuy0zT7Gxj0+zto7exiXhHbRqFjC&#xA;ncjiNt675HiN2zERVKQ0PSw3L0B4cCzFKeHAnj+GW/mJ97DwY9yte6faXtv9WuFYwd40d4wQOx4F&#xA;aj2zHnASFFyMWWWM3Hn7h+lSttKtLDT5LPT4hFGQ5WPm4HJh/PVnHzGCGOMRQ5MsuonklxSNyYDp&#xA;X5febNM8z3Wv2n6FhnuLc2pijjvApWihedZWDbopb4QWp1GXiQERAXwjpt/a0TlOcjKVGR67/rr7&#xA;FTyH5L87aHrEb38ejw6WPWaZbBrkyNJIKKUWVAqjYVqxyGT1y4yST5tkM0hj8MRjGPWr3KcebdL1&#xA;+71u0FtZxXWj3MaQXhDASxsspcuwegKcaU471+jMbLCVgxcnTyxmEoZQDHmARe6A/M/yfc6vHplz&#xA;YWZujZF457aNljZoGAIAqV+yybAeOXTJETXN1/5WGTJAS+jr7vh50yTyre3cumxW1zpc+mPaRpEq&#xA;TFGVlUcRwZGbsO/45HHMkbii5efDCB9BBj9zzOw/LTVY7jzFPc6C80/mKZZ55pL6FvTZZjMVUIsb&#xA;cWZt/i7DMmGacdwaI8nWEGyfDu++fP5AUyTzD5Tvtc8pafod1og9LTZYWigF0oVkhheJfjDBujU3&#xA;wDLMHiEvUeZpnxyr+627uP8AT5e5N9GuPNF/rkcmpaE2j2METMHee3n5yD4FQCF2Kji5b7P7PXfM&#xA;Y4Bx8dudHL+74evXuV/Oy+aEtILny7ai9vI3Ktaloo9moRJ6kpCjgVpxoa8vbDPCJkG6pceXhuxY&#xA;IY15Q/KLyzClrrN9pE2ma6X9a7tkvJni9VWO+00ysprUVbvmROV7cw4cMIBv+JHWf5J/l/ZSTvZ2&#xA;1zB9ZFJkS8ueDCtQGUyEMB25VwGZKRgiOV/Mqh/J7ycbX6kDfLp7AiSwW9uFgZW6qYw4FPlln5md&#xA;UV8CKYaX+WXkfS9Ou9NsdMEen368Ly1aWeSOQAg/Eruwrt9rrlZmSyjiiBQDtJ/LLyHpAcafo8MI&#xA;ehYEySA09nZsqywE/qFuRp8s8IIxkxvuRnmLyZ5c8w8G1S0Ek8Q4xXUbPDMorWgkjKtSu9CaZbHI&#xA;QK6dzVW9jY96TXH5P+Rr2JI9Wt7nV/SNYmvry5mKdqL+8AH0DLDqJ9Nvg1nDE892VaVpdjpWnwaf&#xA;YxmKztl4QRl3k4rWtOTlmoO2+Uk2bbAKRWBLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:62BD27B809BBEA11ABBD9F5C18876EC6</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:62BD27B809BBEA11ABBD9F5C18876EC6</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:2266760d-bc6d-4849-868c-8ba560697f83</stRef:instanceID>
            <stRef:documentID>xmp.did:ABDC41D8FEA8EA11A287E2775BBECA3C</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:eec0b9b6-9468-e049-a837-558fddaeee4a</stEvt:instanceID>
                  <stEvt:when>2020-06-04T00:19:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:df053a70-a509-a740-b58f-2580d928da8c</stEvt:instanceID>
                  <stEvt:when>2020-06-07T21:05:27+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ABDC41D8FEA8EA11A287E2775BBECA3C</stEvt:instanceID>
                  <stEvt:when>2020-06-07T23:59:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2266760d-bc6d-4849-868c-8ba560697f83</stEvt:instanceID>
                  <stEvt:when>2020-06-17T19:42:45+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge 2019 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:62BD27B809BBEA11ABBD9F5C18876EC6</stEvt:instanceID>
                  <stEvt:when>2020-06-30T22:42:04+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3800.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=117 B=117</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>117</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=53 G=83 B=137</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>52</xmpG:red>
                           <xmpG:green>82</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=150 G=217 B=201</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>149</xmpG:red>
                           <xmpG:green>216</xmpG:green>
                           <xmpG:blue>200</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=60 G=143 B=124</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>59</xmpG:red>
                           <xmpG:green>142</xmpG:green>
                           <xmpG:blue>124</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=204 B=127</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=140 B=127</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>140</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=156 B=141</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>140</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=183 G=87 B=66</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>182</xmpG:red>
                           <xmpG:green>86</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=116 B=88</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>116</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=164 B=145</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>163</xmpG:green>
                           <xmpG:blue>144</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=224 B=178</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>223</xmpG:green>
                           <xmpG:blue>177</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=204 B=127 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=150 G=217 B=201 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>149</xmpG:red>
                           <xmpG:green>216</xmpG:green>
                           <xmpG:blue>200</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=80 G=191 B=165</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>80</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>165</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=60 G=143 B=124 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>59</xmpG:red>
                           <xmpG:green>142</xmpG:green>
                           <xmpG:blue>124</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=24 G=70 B=85 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>24</xmpG:red>
                           <xmpG:green>70</xmpG:green>
                           <xmpG:blue>84</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=19 G=55 B=91</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>19</xmpG:red>
                           <xmpG:green>54</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=155 G=193 B=249</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>154</xmpG:red>
                           <xmpG:green>193</xmpG:green>
                           <xmpG:blue>249</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=134 G=177 B=242 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>133</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=53 G=83 B=137 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>52</xmpG:red>
                           <xmpG:green>82</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=70 G=110 B=182 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>70</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>182</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3800 2000 li
3800 0 li
cp
clp
3800 2000 mo
0 2000 li
0 0 li
3800 0 li
3800 2000 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1175.02 553.432 mo
1168.25 542.58 li
1155.32 544.199 li
1148.6 531.496 li
1135.35 537.477 li
1127.11 523.448 li
1114.24 527.448 li
1104.11 515.254 li
1108.72 511.402 li
1116.29 520.52 li
1129.88 516.298 li
1137.8 529.784 li
1151.26 523.702 li
1158.69 537.721 li
1171.31 536.14 li
1177.58 546.198 li
1185.66 543.421 li
1187.59 549.108 li
1175.02 553.432 li
cp
.313726 .74902 .647059 rgb
f
2475 553.056 mo
2460.44 549.691 li
2456.58 560.067 li
2442.09 557.246 li
2436.84 566.711 li
2425.69 565.99 li
2425.64 570.467 li
2440.55 571.432 li
2445.53 562.462 li
2460.6 565.396 li
2464.39 555.19 li
2477.59 558.241 li
2475 553.056 li
cp
.968627 .8 .498039 rgb
f
1658.47 1549.85 mo
1658.47 1549.85 1648 1560.33 1647.77 1564.17 cv
1647.53 1568.02 1646.84 1609.22 1651.11 1613.07 cv
1655.38 1616.91 1667.93 1619.64 1663.9 1623.97 cv
1660.85 1627.24 1637.39 1626.54 1621.85 1625.66 cv
1617.31 1625.4 1611.62 1588.24 1609.82 1582.78 cv
1607.21 1574.85 1597.81 1557.58 1600.18 1552.05 cv
1601.34 1549.36 1609.92 1543.22 1617.72 1538.05 cv
1625.92 1532.62 1633.76 1520.52 1633.76 1520.52 cv
1658.47 1549.85 li
cp
.956863 .54902 .498039 rgb
f
1798.44 1575.59 mo
1789.07 1602.81 li
1788.37 1607.11 1785.63 1617.74 1785.63 1621.65 cv
1785.63 1636.34 1850.18 1609.18 1835.71 1602.67 cv
1834.4 1602.08 1830.3 1597.37 1829.87 1592.37 cv
1829.2 1584.67 1835.3 1575.01 1835.3 1575.01 cv
1798.44 1575.59 li
cp
.968627 .643137 .568627 rgb
f
1906.21 1062.21 mo
1906.21 1062.21 1911.07 1107.13 1911.07 1107.86 cv
1911.07 1186.59 1920.15 1340.39 1917.26 1355.19 cv
1910.2 1391.3 1833.16 1587.81 1833.16 1587.81 cv
1793.24 1582.04 li
1846.71 1349.93 li
1827.03 1261.17 li
1799.19 1085.71 li
1906.21 1062.21 li
cp
.0941176 .27451 .333333 rgb
f
1755.75 1101.51 mo
1747.96 1147.64 li
1726.89 1337.5 li
1623.77 1530.17 li
1623.77 1530.17 1639.27 1554.28 1655.92 1558.07 cv
1802.29 1363.34 li
1881.62 1119.56 li
1878.83 1065.4 li
1755.75 1101.51 li
cp
.207843 .32549 .537255 rgb
f
1909.84 942.568 mo
1852.94 948.531 li
1852.94 948.531 1850.33 900.648 1850.33 877.808 cv
1850.33 850.097 1853.38 814.815 1856.64 815.583 cv
1865.79 817.739 1877.36 822.513 1884.7 832.86 cv
1910.08 868.664 1909.84 942.568 1909.84 942.568 cv
cp
.27451 .431373 .713726 rgb
f
1699.4 1172.56 mo
1690.72 1158.14 1688.77 1160.19 1687.7 1158.31 cv
1686.44 1156.09 1687.84 1121.78 1687.84 1121.78 cv
1687.84 1121.78 1691.32 1020.63 1691.7 1015.18 cv
1736.15 921.797 li
1697.72 885.139 li
1697.72 885.139 1651.97 988.101 1650.48 993.93 cv
1649 999.76 1659.58 1137.23 1660.14 1149.36 cv
1660.14 1149.36 1655.68 1164.02 1653.17 1173.33 cv
1650.67 1182.64 1652.28 1192.68 1651.96 1195.41 cv
1651.91 1195.82 1651.37 1205.01 1653.58 1216.54 cv
1655.5 1226.48 1658.04 1216.19 1658.04 1216.19 cv
1658.04 1216.19 1657.66 1197.14 1659.11 1197.39 cv
1660.22 1197.58 1659.84 1207.98 1661.85 1219 cv
1662.36 1221.83 1662.88 1224.63 1663.38 1227.19 cv
1664.68 1233.92 1669 1235.05 1668.72 1227.79 cv
1668.61 1225.23 1668.34 1220.98 1667.74 1217.97 cv
1667.09 1214.72 1667.49 1211.53 1667.35 1208.72 cv
1667.05 1203.13 1666.77 1199.06 1667 1199.17 cv
1667.29 1199.32 1667.99 1198.18 1668.62 1201.17 cv
1669.39 1204.77 1669.4 1212.76 1670.92 1217.96 cv
1671.78 1220.91 1673.22 1227.18 1673.22 1227.18 cv
1673.22 1227.18 1677.09 1236.26 1677.67 1236.21 cv
1680.83 1235.93 1679.85 1228.97 1678.18 1225.12 cv
1678.32 1222.11 1676.63 1215.55 1676.63 1215.55 cv
1676.63 1215.55 1676.05 1201.52 1677.95 1201.43 cv
1678.76 1201.39 1680.1 1209.96 1682.69 1218.16 cv
1685.08 1225.78 1688.69 1233.07 1690.2 1232.82 cv
1692.77 1232.4 1690.97 1223.66 1690.97 1223.66 cv
1690.97 1223.66 1689.4 1217.6 1689.02 1215.55 cv
1688.58 1213.15 1687.79 1205.85 1687.79 1205.85 cv
1687.79 1205.85 1686.17 1180.31 1687.98 1180.38 cv
1689.79 1180.46 1694.39 1182.57 1695.01 1184.12 cv
1695.64 1185.67 1695.36 1189.13 1695.99 1190.68 cv
1696.62 1192.23 1698.7 1193.71 1700.58 1193.08 cv
1702.46 1192.44 1702.19 1183.77 1702.19 1183.77 cv
1702.19 1183.77 1701.91 1176.72 1699.4 1172.56 cv
cp
.972549 .643137 .572549 rgb
f
1881.89 872.92 mo
1883.08 881.368 1911.14 1107.89 1911.14 1107.89 cv
1807.52 1159.25 1739.95 1143.84 1739.95 1143.84 cv
1739.95 1143.84 1747.56 958.917 1743.49 936.963 cv
1740.8 922.438 1737.45 825.923 1746.62 823.219 cv
1758.39 819.75 1771.88 816.066 1786.59 814.5 cv
1799.14 813.162 1847.91 812.387 1856.64 815.395 cv
1856.64 815.395 1876.87 837.39 1881.89 872.92 cv
cp
.52549 .694118 .94902 rgb
f
1672.66 920.669 mo
1721.96 954.64 li
1721.96 954.64 1749.74 912.204 1764.66 897.096 cv
1783.34 878.17 1757.85 820.193 1745.81 823.473 cv
1718.89 830.81 1672.66 920.669 1672.66 920.669 cv
cp
.27451 .431373 .713726 rgb
f
1618.23 1537.79 mo
1618.23 1537.79 1642.34 1607.48 1651.78 1610.85 cv
1654.29 1611.74 1666.32 1614.01 1668.59 1619.47 cv
1669.27 1621.11 1668.59 1626.61 1668.59 1626.61 cv
1618.32 1626.61 li
1618.32 1626.61 1611.96 1595.9 1609.45 1582.41 cv
1609.45 1582.41 1596.14 1549.44 1597.62 1546.45 cv
1599.1 1543.45 1618.23 1537.79 1618.23 1537.79 cv
cp
.235294 .560784 .486275 rgb
f
1781.96 1626.5 mo
1789.35 1602.53 li
1789.35 1602.53 1804.88 1609.27 1812.64 1608.15 cv
1820.4 1607.02 1835.55 1602.53 1835.55 1602.53 cv
1866.53 1613 1891.92 1618.08 1887.3 1626.5 cv
1781.96 1626.5 li
cp
f
1983.61 1132.51 mo
1988.9 1137.15 1994.71 1139.05 2001.48 1137.64 cv
1995.15 1142.45 1986.33 1138.77 1983.61 1132.51 cv
cp
.996078 .529412 .368627 rgb
f
1800.36 767.337 mo
1792.74 815.174 li
1792.74 815.174 1820.65 876.042 1837.32 870.917 cv
1851.31 866.618 1842.7 814.34 1842.7 814.34 cv
1842.7 814.34 1835.08 786.266 1837.36 772.217 cv
1839.65 758.168 1800.36 767.337 1800.36 767.337 cv
cp
.968627 .643137 .568627 rgb
f
1837.36 772.217 mo
1839.65 758.168 1800.36 767.337 1800.36 767.337 cv
1799.73 771.453 li
1800.88 774.206 1802.28 776.563 1803.99 778.369 cv
1812.77 787.666 1826.48 793.249 1838.34 793.671 cv
1837.16 786.097 1836.43 777.978 1837.36 772.217 cv
cp
.956863 .454902 .345098 rgb
f
1793.92 697.137 mo
1792.81 696.739 1785.02 753.652 1799.8 769.312 cv
1814.58 784.971 1843.39 790.096 1853.72 777.763 cv
1865.15 764.121 1864.57 702.953 1841.59 686.845 cv
1818.6 670.736 1793.92 697.137 1793.92 697.137 cv
cp
.968627 .643137 .568627 rgb
f
1799.34 675.208 mo
1791.27 676.146 1780.31 680.535 1768.98 698.987 cv
1755.06 721.676 1765.34 746.814 1781.55 759.147 cv
1797.75 771.48 1797.46 785.606 1797.46 785.606 cv
1800.09 778.358 li
1801.98 772.776 1802.75 766.856 1802.12 761.001 cv
1801.74 757.488 1800.98 753.689 1799.5 750.566 cv
1795.6 742.33 1807.87 736.857 1811.31 730.005 cv
1813.96 724.728 1814.09 712.657 1818.26 703.935 cv
1823.25 697.276 li
1823.25 697.276 1834.75 688.467 1846 690.953 cv
1857.25 693.438 1843.43 639.406 1799.34 675.208 cv
cp
.968627 .8 .498039 rgb
f
1810.56 740.133 mo
1810.67 747.076 1807.47 752.761 1803.39 752.829 cv
1799.32 752.897 1795.92 747.324 1795.81 740.38 cv
1795.69 733.437 1798.9 727.752 1802.97 727.684 cv
1807.04 727.615 1810.44 733.189 1810.56 740.133 cv
cp
.968627 .643137 .568627 rgb
f
2951.81 1487.33 mo
2951.81 1487.33 2954.49 1514.52 2961.37 1519.51 cv
2968.26 1524.5 2977.43 1542.97 2972.85 1552.96 cv
2968.26 1562.94 2948.98 1559.45 2948.98 1559.45 cv
2948.98 1559.45 2937.51 1548.96 2936.47 1526.87 cv
2935.44 1504.78 2928.56 1493.55 2928.56 1493.55 cv
2951.81 1487.33 li
.968627 .643137 .568627 rgb
f
2842.81 1498.19 mo
2842.81 1498.19 2840.64 1525.62 2842.4 1534.54 cv
2843.34 1539.31 2848.59 1549.14 2846.18 1553.63 cv
2843.77 1558.13 2841.02 1559.25 2841.02 1559.25 cv
2771.14 1560.37 li
2771.14 1560.37 2771.3 1551.56 2804.53 1542.03 cv
2808.76 1540.81 2813.36 1536.65 2817.12 1532.48 cv
2821.6 1527.5 2821.99 1503.34 2821.99 1503.34 cv
2842.81 1498.19 li
cp
f
2792.91 1133.49 mo
2792.91 1133.49 2784.94 1178.04 2790.18 1207.24 cv
2795.41 1236.45 2817.31 1508.59 2817.31 1508.59 cv
2850.61 1508.94 li
2850.61 1508.94 2856.73 1397.52 2855.68 1381.8 cv
2854.63 1366.07 2847.35 1341.8 2847.35 1341.8 cv
2846.69 1246.56 li
2811.47 1126.62 li
2792.91 1133.49 li
cp
.235294 .560784 .486275 rgb
f
2874.95 1124.12 mo
2874.95 1124.12 2896.93 1156.7 2902.16 1183.66 cv
2907.39 1210.61 2898.32 1293.46 2908.39 1328.79 cv
2913.84 1347.91 2940.43 1375.15 2943.57 1399.86 cv
2946.71 1424.57 2959.86 1492.26 2959.86 1492.26 cv
2925.19 1497.04 li
2860.34 1335.38 li
2809.48 1189.27 li
2796.46 1114.01 li
2874.95 1124.12 li
.313726 .74902 .647059 rgb
f
2939.32 1542.74 mo
2954.33 1545.47 2964.31 1536.71 2969.5 1530.16 cv
2973.31 1537.58 2975.65 1546.86 2972.85 1552.96 cv
2968.26 1562.94 2948.98 1559.45 2948.98 1559.45 cv
2948.98 1559.45 2943.04 1554.02 2939.32 1542.74 cv
.956863 .454902 .345098 rgb
f
2804.53 1542.03 mo
2805.73 1541.68 2806.96 1541.1 2808.19 1540.35 cv
2824.71 1544.58 2836.92 1541.71 2843.74 1538.96 cv
2845.5 1543.94 2847.95 1549.81 2847.42 1553.59 cv
2846.79 1558.16 2844.74 1559.82 2844.74 1559.82 cv
2771.14 1560.37 li
2771.14 1560.37 2771.3 1551.56 2804.53 1542.03 cv
cp
f
2699.02 1211.42 mo
2699.02 1211.42 2702.32 1207.89 2703.32 1206.63 cv
2704.5 1205.16 2707.67 1200.47 2707.67 1200.47 cv
2707.67 1200.47 2717.96 1183.66 2716.64 1183.02 cv
2715.32 1182.38 2711.92 1184.31 2710.92 1185.13 cv
2709.91 1185.95 2708.66 1186.81 2707.65 1187.64 cv
2706.65 1188.46 2705.2 1188.41 2704.08 1187.26 cv
2702.96 1186.11 2706.24 1181.98 2707.67 1180.78 cv
2712.1 1177.03 2726 1169.32 2727.44 1168.45 cv
2729.14 1167.41 2741.54 1135.05 2746.68 1124.29 cv
2746.68 1124.28 li
2754.56 1106.42 2761.76 1087.68 2762.59 1085.79 cv
2772.52 1003.12 li
2804.77 994.726 li
2804.77 994.726 2795.06 1086.62 2794.04 1091.16 cv
2793.55 1093.32 2772.02 1133.34 2772 1133.34 cv
2760.13 1152.39 2749.63 1169.16 2747.71 1172.43 cv
2747.71 1172.43 2744.62 1183.74 2743.09 1191.04 cv
2741.56 1198.35 2737.16 1204.49 2736.41 1206.48 cv
2736.3 1206.77 2734.09 1213.76 2728.38 1220.79 cv
2723.45 1226.84 2725.31 1218.85 2725.31 1218.85 cv
2725.31 1218.85 2732.39 1206 2731.26 1205.61 cv
2730.4 1205.32 2726.95 1212.57 2721.57 1219.32 cv
2720.19 1221.06 2718.82 1222.77 2717.55 1224.33 cv
2714.21 1228.43 2710.7 1227.56 2713.5 1222.71 cv
2714.49 1221 2716.21 1218.2 2717.71 1216.38 cv
2719.34 1214.41 2720.19 1212.08 2721.31 1210.21 cv
2723.52 1206.51 2725.17 1203.84 2724.97 1203.83 cv
2724.7 1203.82 2724.62 1202.78 2723.09 1204.58 cv
2721.25 1206.74 2718.39 1212.19 2715.44 1215.17 cv
2713.77 1216.85 2710.49 1220.58 2710.49 1220.58 cv
2710.49 1220.58 2704.51 1226.06 2704.11 1225.8 cv
2701.95 1224.41 2705.09 1219.28 2707.67 1217.28 cv
2708.65 1215.18 2712.21 1211.35 2712.21 1211.35 cv
2712.21 1211.35 2717.64 1201.99 2716.31 1201.2 cv
2715.22 1200.55 2697.82 1220.46 2695.75 1218.91 cv
2694.07 1217.64 2699.02 1211.42 2699.02 1211.42 cv
cp
.956863 .54902 .498039 rgb
f
2731.3 1182.17 mo
2731.3 1182.17 2721.83 1187.53 2716.79 1183.13 cv
2716.79 1183.13 2718.67 1186.7 2722.83 1186.74 cv
2727 1186.79 2731.3 1182.17 2731.3 1182.17 cv
cp
.956863 .454902 .345098 rgb
f
2856.34 835.553 mo
2860.99 848.279 2873.14 850.055 2885.49 855.678 cv
2893.78 859.452 2896.51 874.731 2893.7 885.383 cv
2886.59 912.363 2908.98 904.157 2924.17 918.697 cv
2960.77 953.719 2900.22 986.645 2891.57 992.193 cv
2882.92 997.741 2850.36 1008.23 2844.6 1009.06 cv
2827.24 1011.54 2804.67 1002.26 2790.32 982.267 cv
2775.96 962.275 2788.46 947.877 2786.19 934.85 cv
2783.93 921.823 2767.75 922.49 2768.68 896.541 cv
2769.69 868.467 2778.36 845.722 2790.93 834.021 cv
2811.72 814.662 2841.31 818.579 2850.75 827.38 cv
2853.56 830.002 2855.33 832.775 2856.34 835.553 cv
cp
.094118 .27451 .333333 rgb
f
2799.98 939.6 mo
2799.98 939.6 2790.37 944.034 2777.35 970.362 cv
2765.23 994.887 2763.25 1051.88 2763.25 1051.88 cv
2763.25 1051.88 2782.53 1058.01 2793.6 1055.9 cv
2804.68 1053.79 2799.98 939.6 2799.98 939.6 cv
cp
.968627 .8 .498039 rgb
f
2836.37 931.344 mo
2836.37 931.344 2842.8 931.88 2875.48 938.845 cv
2880.79 939.977 2889.14 946.076 2892.36 951.791 cv
2909.07 981.496 2923.77 1034.69 2923.77 1034.69 cv
2923.77 1034.69 2896.47 1043.62 2886.98 1043.62 cv
2875.75 1008.22 li
2875.75 1008.22 2862.98 1082.89 2868.25 1095.54 cv
2873.52 1108.2 2886.73 1140.28 2886.73 1140.28 cv
2886.73 1140.28 2886.52 1147.12 2836.62 1152.37 cv
2816.59 1154.48 2791.64 1150.19 2791.64 1150.19 cv
2791.64 1150.19 2796.18 1101.7 2792.15 1080.62 cv
2785.58 1046.3 2772.79 1005.2 2772.14 999.969 cv
2771.08 991.533 2790.52 943.794 2800.57 939.291 cv
2803.16 938.13 2807.46 935.714 2811.28 934.826 cv
2822.85 932.141 2836.37 931.344 2836.37 931.344 cv
cp
.980392 .878431 .698039 rgb
f
2832.02 897.509 mo
2832.02 897.509 2833.07 921.401 2836.1 930.198 cv
2839.14 938.995 2829.72 970.903 2810.68 975.558 cv
2793.51 979.754 2805.9 949.944 2808.28 937.243 cv
2808.54 935.853 2805.21 891.611 2805.21 891.611 cv
2832.02 897.509 li
cp
.968627 .643137 .568627 rgb
f
2806.49 905.517 mo
2805 897.971 2803.6 891.713 2803.6 891.713 cv
2832.02 897.509 li
2832.02 897.509 2832.23 902.395 2832.75 908.561 cv
2822.09 913.487 2812.99 911.283 2806.49 905.517 cv
cp
.956863 .454902 .345098 rgb
f
2823.43 832.503 mo
2823.43 832.503 2834.59 835.613 2841.02 846.599 cv
2847.46 857.584 2850.67 889.134 2826.98 902.596 cv
2803.29 916.059 2786.48 894.489 2787.19 874.311 cv
2787.91 854.132 2793.58 827.44 2823.43 832.503 cv
cp
.968627 .643137 .568627 rgb
f
2785.13 867.482 mo
2786.84 872.446 2790.57 875.66 2793.46 874.662 cv
2796.36 873.664 2797.31 868.831 2795.6 863.866 cv
2793.88 858.903 2790.15 855.688 2787.26 856.687 cv
2784.37 857.686 2783.41 862.519 2785.13 867.482 cv
cp
f
2842.85 874.39 mo
2840.92 879.548 2842.18 884.785 2845.67 886.088 cv
2849.16 887.391 2853.55 884.266 2855.47 879.107 cv
2857.4 873.949 2856.14 868.712 2852.65 867.409 cv
2849.16 866.106 2844.77 869.232 2842.85 874.39 cv
cp
f
2790.55 1152.55 mo
2871.98 1138.98 li
2854.48 1025.76 li
2768.74 1042.57 li
2790.55 1152.55 li
cp
.27451 .431373 .713726 rgb
f
2778.32 1090.31 mo
2778.44 1089.84 2785.19 1091.69 2789.84 1089.69 cv
2790.76 1089.29 2786.62 1087.03 2785.97 1086.25 cv
2785.89 1086.15 2777.83 1082.99 2777.83 1079.78 cv
2777.83 1076.56 2784.39 1077.37 2784.39 1077.37 cv
2784.39 1077.37 2803.41 1082.06 2806.35 1084.06 cv
2809.3 1086.07 2810.7 1087.74 2810.9 1087.93 cv
2812.04 1088.06 2813.01 1088.12 2813.72 1088.08 cv
2830.18 1087.05 2855.71 1078.33 2894.48 1064.33 cv
2890.48 1043.35 li
2899.05 1042.22 2913.54 1037.9 2920.21 1035.82 cv
2922.94 1051.88 2928.49 1079.59 2926.09 1085.54 cv
2924.41 1089.71 2903.79 1096.28 2880.65 1102.6 cv
2851.17 1110.66 2843 1110.46 2816.67 1113.66 cv
2808.68 1114.6 2798.34 1119.09 2794.24 1119.9 cv
2788.14 1121.12 2786.13 1122.21 2782.42 1119.6 cv
2779.3 1117.4 2778.32 1110.68 2777.96 1106.47 cv
2777.27 1098.51 2776.95 1095.47 2778.32 1090.31 cv
cp
.956863 .54902 .498039 rgb
f
811.175 1202.97 mo
725.764 1202.97 li
718.712 1202.97 712.995 1208.68 712.995 1215.74 cv
712.995 1263.68 li
727.277 1263.68 li
727.277 1218.23 li
811.175 1218.23 li
811.175 1202.97 li
cp
.07451 .215686 .356863 rgb
f
827.5 1170.59 mo
801.026 1142.66 li
801.026 1142.66 772.688 1158.25 739.654 1173.14 cv
730.572 1157.33 715.751 1105.33 714.954 1102.86 cv
714.154 1100.37 732.313 1069.13 728.252 1068.35 cv
724.189 1067.57 718.915 1085.03 714.621 1083.26 cv
710.328 1081.49 699.287 1040.98 696.703 1043.19 cv
691.868 1047.33 702.511 1068.39 699.962 1069.92 cv
697.413 1071.46 690.948 1046.58 686.025 1047.64 cv
681.104 1048.7 694.337 1070.29 692.886 1072.36 cv
691.433 1074.44 677.602 1054.18 674.744 1058.88 cv
673.192 1061.42 687.503 1076.51 684.56 1078.2 cv
681.616 1079.89 668.719 1070.38 667.179 1073.46 cv
665.64 1076.54 679.213 1079.75 682.981 1087.54 cv
686.75 1095.33 693.603 1098.36 695.876 1113.09 cv
698.146 1127.81 704.366 1206.55 720.417 1212.88 cv
734.431 1218.4 827.5 1170.59 827.5 1170.59 cv
cp
.968627 .643137 .568627 rgb
f
1071.7 1533.6 mo
1073.79 1518.75 1073.63 1491.33 1072.56 1462.4 cv
1085.52 1461.75 1096.48 1460.92 1109.43 1460.07 cv
1104.04 1497.01 1100.41 1535.06 1100.41 1535.06 cv
1101.3 1542.36 li
1101.77 1564 li
1028.45 1564.55 li
1028.45 1564.55 1043.91 1557.7 1065.52 1544.16 cv
1067.12 1543.16 1070.8 1539.97 1071.7 1533.6 cv
cp
f
1103.75 1568.65 mo
1026.44 1569.57 li
1023.64 1569.32 1022.95 1567.05 1023.92 1565.66 cv
1025.92 1562.79 1034.75 1560.68 1044.68 1556.1 cv
1062.09 1557.92 1098.51 1546.02 1101.25 1542.02 cv
1102.84 1550.03 1105.3 1568.31 1103.75 1568.65 cv
cp
.956863 .454902 .345098 rgb
f
1203.07 1518.3 mo
1197.02 1504.58 1182.42 1481.36 1166.27 1457.34 cv
1176.94 1449.95 1187.51 1442.43 1198.06 1434.88 cv
1212.95 1469.12 1228.23 1504.41 1228.23 1504.41 cv
1232.84 1510.15 li
1244.65 1528.29 li
1182.63 1567.4 li
1182.63 1567.4 1192.15 1553.43 1203.38 1530.53 cv
1204.21 1528.84 1205.66 1524.18 1203.07 1518.3 cv
cp
.968627 .643137 .568627 rgb
f
1247.88 1532.83 mo
1183.56 1572.72 li
1181.05 1573.99 1179.27 1572.42 1179.36 1570.72 cv
1179.55 1567.23 1185.94 1560.78 1191.96 1551.66 cv
1207.71 1544.03 1232.24 1514.54 1232.47 1509.69 cv
1238.04 1515.66 1249.02 1531.72 1247.88 1532.83 cv
cp
.956863 .454902 .345098 rgb
f
1172.91 914.408 mo
1178.64 886.452 1160.66 858.734 1135.44 848.329 cv
1135.61 832.42 1130.46 812.268 1119.6 801.376 cv
1098.17 779.89 1057.27 772.36 1041.51 799.75 cv
1020.7 811.527 1004.32 837.029 1010.53 860.262 cv
990.356 881.155 998.02 918.959 1027.43 936.812 cv
1026.97 960.254 1039.36 983.553 1059.86 993.571 cv
1064.78 995.976 1072.48 999.327 1073.45 1000.37 cv
1072.17 999.154 1088.64 1045.01 1139.79 1024.02 cv
1191.99 1002.61 1206.93 942.333 1172.91 914.408 cv
cp
.207843 .32549 .537255 rgb
f
1070.35 1512.63 mo
1076.7 1477.41 1054.64 1390.09 1041.19 1351.7 cv
1027.2 1311.76 1018.3 1142.78 1018.3 1142.78 cv
1034.16 1124.23 li
1098.9 1120.35 li
1098.9 1120.35 1071.36 1204.99 1071.36 1234.07 cv
1071.36 1263.15 1084.76 1338.22 1100.5 1377.29 cv
1115.02 1413.32 1108.99 1488.88 1104.59 1513.72 cv
1092.89 1515.62 1081.79 1514.93 1070.35 1512.63 cv
cp
.094118 .27451 .333333 rgb
f
1115.27 1128.21 mo
1118.24 1131.17 1135.63 1151.78 1135.63 1166.18 cv
1135.63 1180.59 1102.84 1310.21 1110.71 1318.07 cv
1118.58 1325.93 1147.69 1345.6 1166.27 1373 cv
1181.92 1396.09 1217.82 1462.85 1224.67 1478.73 cv
1211.14 1488.13 1199.4 1492.42 1185.85 1496.96 cv
1183.68 1485.14 1077.65 1368.26 1065.54 1343.82 cv
1053.43 1319.38 1046.87 1207.65 1040.75 1192.81 cv
1034.63 1177.97 1018.3 1140.27 1018.3 1140.27 cv
1115.27 1128.21 li
cp
.235294 .560784 .486275 rgb
f
1020.82 1032.68 mo
1020.82 1032.68 980.852 1078.29 936.617 1095.46 cv
929.702 1098.14 923.755 1103.39 923.755 1103.39 cv
923.755 1108.04 933.079 1102.51 933.079 1102.51 cv
933.079 1102.51 929.274 1109.21 930.731 1114.73 cv
932.189 1120.26 941.834 1116.59 947.081 1116.59 cv
949.484 1116.59 961.816 1102.79 978.47 1094.67 cv
998.178 1085.07 1021.43 1075.68 1024.28 1072.84 cv
1029.52 1067.6 1022.37 1031.01 1020.82 1032.68 cv
cp
.968627 .611765 .552941 rgb
f
1102.11 904.306 mo
1102.11 904.306 1061.89 900.232 1040.9 913.617 cv
1019.91 927.002 1006.5 974.722 1006.5 995.09 cv
1006.5 1015.46 1021.63 1122.54 1015.82 1142.91 cv
1015.82 1142.91 1082.29 1140 1105.03 1140 cv
1127.76 1140 1132.43 1131.27 1132.43 1131.27 cv
1132.43 1131.27 1085.2 1084.71 1085.2 1064.34 cv
1085.2 1043.97 1102.11 904.306 1102.11 904.306 cv
cp
.717647 .341176 .258824 rgb
f
610.394 1451.02 mo
560.449 1451.02 li
561.355 1437 572.053 1425.9 585.076 1425.9 cv
610.394 1425.9 li
610.394 1451.02 li
cp
552.837 1452.95 mo
552.837 1522.71 li
560.385 1522.71 li
560.385 1459.29 li
610.394 1459.29 li
610.394 1481.06 li
591.061 1483.13 575.954 1500.99 575.954 1522.71 cv
575.954 1545.83 593.063 1564.57 614.168 1564.57 cv
635.273 1564.57 652.382 1545.83 652.382 1522.71 cv
652.382 1500.99 637.275 1483.13 617.942 1481.06 cv
617.942 1459.29 li
628.321 1459.29 li
628.321 1451.02 li
617.942 1451.02 li
617.942 1425.9 li
628.321 1425.9 li
628.321 1417.63 li
617.942 1417.63 li
617.942 1389.69 li
754.758 1389.69 li
754.758 1377.29 li
679.165 1377.29 li
679.165 1306.25 li
679.165 1287.27 696.607 1266.05 719.949 1266.05 cv
784.951 1266.05 li
784.951 1253.65 li
719.949 1253.65 li
692.191 1253.65 667.842 1278.23 667.842 1306.25 cv
667.842 1377.29 li
617.942 1377.29 li
617.942 1337.44 li
610.394 1337.44 li
610.394 1417.63 li
585.076 1417.63 li
567.299 1417.63 552.837 1433.47 552.837 1452.95 cv
cp
.07451 .215686 .356863 rgb
f
582.467 1463.9 mo
583.999 1490.86 li
584.559 1494.27 586.763 1502.71 586.763 1505.82 cv
586.763 1517.48 534.864 1495.92 546.495 1490.75 cv
547.549 1490.28 553.541 1483.82 555.045 1480.13 cv
557.725 1473.56 558.897 1460.68 558.897 1460.68 cv
582.467 1463.9 li
cp
.956863 .54902 .498039 rgb
f
546.625 1490.64 mo
546.625 1490.64 558.809 1494.21 565.05 1495.1 cv
571.29 1495.99 579.518 1488.48 583.932 1490.51 cv
588.79 1492.74 589.07 1513.25 589.07 1513.25 cv
589.07 1513.25 523.837 1515.42 504.885 1512.64 cv
497.318 1511.53 521.714 1498.95 546.625 1490.64 cv
cp
.27451 .431373 .713726 rgb
f
842.28 1406.44 mo
856.617 1406.44 li
856.617 1133.3 li
856.617 1124.08 865.638 1116.59 876.729 1116.59 cv
1005.7 1116.59 li
1009.14 1116.59 1011.93 1113.92 1011.93 1110.63 cv
1011.93 1107.34 1009.14 1104.67 1005.7 1104.67 cv
876.729 1104.67 li
857.734 1104.67 842.28 1117.52 842.28 1133.3 cv
842.28 1406.44 li
cp
.07451 .215686 .356863 rgb
f
775.065 1349.14 mo
822.846 1349.14 861.581 1388.22 861.581 1436.43 cv
861.581 1484.64 822.846 1523.72 775.065 1523.72 cv
727.285 1523.72 688.55 1484.64 688.55 1436.43 cv
688.55 1388.22 727.285 1349.14 775.065 1349.14 cv
cp
f
679.699 1436.43 mo
679.699 1383.29 722.396 1340.21 775.065 1340.21 cv
827.734 1340.21 870.432 1383.29 870.432 1436.43 cv
870.432 1489.57 827.734 1532.65 775.065 1532.65 cv
722.396 1532.65 679.699 1489.57 679.699 1436.43 cv
cp
669.717 1436.43 mo
669.717 1495.13 716.883 1542.72 775.065 1542.72 cv
833.248 1542.72 880.414 1495.13 880.414 1436.43 cv
880.414 1377.73 833.248 1330.14 775.065 1330.14 cv
716.883 1330.14 669.717 1377.73 669.717 1436.43 cv
cp
f
844.233 1315.32 mo
886.56 1315.32 li
886.56 1151.33 li
844.233 1151.33 li
844.233 1315.32 li
cp
.27451 .431373 .713726 rgb
f
634.57 1522.71 mo
642.765 1522.71 li
642.765 1452.95 li
642.765 1438.03 654.789 1425.9 669.569 1425.9 cv
716.518 1425.9 li
716.518 1417.63 li
669.569 1417.63 li
650.271 1417.63 634.57 1433.47 634.57 1452.95 cv
634.57 1522.71 li
cp
.52549 .694118 .94902 rgb
f
690.568 1325.87 mo
579.255 1325.87 li
579.255 1344.97 li
690.568 1344.97 li
690.568 1325.87 li
cp
.07451 .215686 .356863 rgb
f
638.667 1459.29 mo
716.518 1459.29 li
716.518 1451.02 li
638.667 1451.02 li
638.667 1459.29 li
cp
.52549 .694118 .94902 rgb
f
701.153 1389.69 mo
853.781 1389.69 li
853.781 1377.29 li
701.153 1377.29 li
701.153 1389.69 li
cp
f
886.56 1325.58 mo
687.836 1325.58 li
687.836 1344.97 li
886.56 1344.97 li
886.56 1325.58 li
cp
.07451 .215686 .356863 rgb
f
880.414 1421.05 mo
892.707 1421.05 li
892.707 1147.91 li
892.707 1138.7 900.441 1131.2 909.95 1131.2 cv
1025.87 1131.2 li
1025.87 1119.29 li
909.95 1119.29 li
893.665 1119.29 880.414 1132.13 880.414 1147.91 cv
880.414 1421.05 li
cp
.52549 .694118 .94902 rgb
f
655.026 1522.71 mo
655.026 1545.83 675.678 1564.57 701.153 1564.57 cv
726.628 1564.57 747.279 1545.83 747.279 1522.71 cv
747.279 1499.59 726.628 1480.85 701.153 1480.85 cv
675.678 1480.85 655.026 1499.59 655.026 1522.71 cv
cp
.094118 .27451 .333333 rgb
f
673.066 1522.71 mo
673.066 1536.79 685.641 1548.2 701.153 1548.2 cv
716.665 1548.2 729.239 1536.79 729.239 1522.71 cv
729.239 1508.63 716.665 1497.22 701.153 1497.22 cv
685.641 1497.22 673.066 1508.63 673.066 1522.71 cv
cp
.607843 .756863 .976471 rgb
f
701.408 1544.59 mo
701.409 1544.59 li
707.349 1544.59 712.165 1539.77 712.165 1533.83 cv
712.165 1504.8 li
690.653 1504.8 li
690.653 1533.83 li
690.653 1539.77 695.469 1544.59 701.408 1544.59 cv
cp
.52549 .694118 .94902 rgb
f
588.662 1253.65 mo
602 1240.31 787.902 1246.74 787.902 1246.74 cv
787.902 1246.74 630.41 1285.17 621.214 1290.19 cv
612.019 1295.2 577.795 1464.34 577.756 1466.55 cv
568.255 1464.29 562.503 1466 552.837 1464.02 cv
554.383 1434.63 567.17 1275.14 588.662 1253.65 cv
cp
.07451 .215686 .356863 rgb
f
606.781 1464.72 mo
608.313 1491.68 li
608.872 1495.09 611.076 1503.53 611.076 1506.64 cv
611.076 1518.3 559.178 1496.74 570.809 1491.57 cv
571.862 1491.1 579.013 1484.92 579.358 1480.95 cv
579.892 1474.83 579.61 1465.1 579.61 1465.1 cv
606.781 1464.72 li
cp
.968627 .643137 .568627 rgb
f
570.938 1491.46 mo
570.938 1491.46 583.122 1495.02 589.363 1495.92 cv
595.604 1496.81 603.831 1489.3 608.245 1491.33 cv
613.104 1493.56 613.383 1514.07 613.383 1514.07 cv
613.383 1514.07 548.15 1516.24 529.197 1513.46 cv
521.631 1512.35 546.028 1499.77 570.938 1491.46 cv
cp
.27451 .431373 .713726 rgb
f
816.887 1284.92 mo
816.887 1284.92 815.282 1327.12 801.236 1327.62 cv
787.189 1328.12 697.056 1330.14 646.288 1325.58 cv
612.13 1476.55 li
572.018 1472.68 li
572.018 1472.68 584.1 1371.86 588.396 1333.51 cv
592.622 1295.78 604.806 1264.12 626.136 1263.36 cv
647.466 1262.59 787.692 1240.89 787.692 1240.89 cv
816.887 1284.92 li
cp
.207843 .32549 .537255 rgb
f
854.694 1087.91 mo
854.694 1087.91 877.452 1093.68 874.366 1138.13 cv
871.28 1182.58 846.696 1317.06 801.236 1327.62 cv
755.776 1338.18 726.165 1242.45 726.165 1242.45 cv
726.165 1242.45 754.848 1233.02 766.791 1188.53 cv
775.065 1157.7 797.246 1088.14 802.8 1084.79 cv
816.591 1076.48 854.694 1087.91 854.694 1087.91 cv
cp
.313726 .74902 .647059 rgb
f
759.423 1386.83 mo
771.715 1386.83 li
771.715 1306.25 li
771.715 1287.27 790.651 1266.05 815.992 1266.05 cv
886.56 1266.05 li
886.56 1253.65 li
815.992 1253.65 li
785.857 1253.65 759.423 1278.23 759.423 1306.25 cv
759.423 1386.83 li
cp
.52549 .694118 .94902 rgb
f
787.198 1447.95 mo
787.198 1503.31 831.684 1548.2 886.56 1548.2 cv
941.437 1548.2 985.922 1503.31 985.922 1447.95 cv
985.922 1392.58 941.437 1347.69 886.56 1347.69 cv
831.684 1347.69 787.198 1392.58 787.198 1447.95 cv
cp
.607843 .756863 .976471 rgb
f
777.033 1447.95 mo
777.033 1386.91 826.07 1337.44 886.56 1337.44 cv
947.05 1337.44 996.087 1386.91 996.087 1447.95 cv
996.087 1508.98 947.05 1558.46 886.56 1558.46 cv
826.07 1558.46 777.033 1508.98 777.033 1447.95 cv
cp
765.568 1447.95 mo
765.568 1515.37 819.738 1570.02 886.56 1570.02 cv
953.382 1570.02 1007.55 1515.37 1007.55 1447.95 cv
1007.55 1380.53 953.382 1325.87 886.56 1325.87 cv
819.738 1325.87 765.568 1380.53 765.568 1447.95 cv
cp
f
804.612 1447.95 mo
804.612 1493.61 841.301 1530.63 886.56 1530.63 cv
931.819 1530.63 968.508 1493.61 968.508 1447.95 cv
968.508 1402.28 931.819 1365.26 886.56 1365.26 cv
841.301 1365.26 804.612 1402.28 804.612 1447.95 cv
cp
.094118 .27451 .333333 rgb
f
868.121 1447.95 mo
868.121 1458.22 876.377 1466.55 886.56 1466.55 cv
896.743 1466.55 904.999 1458.22 904.999 1447.95 cv
904.999 1437.67 896.743 1429.34 886.56 1429.34 cv
876.377 1429.34 868.121 1437.67 868.121 1447.95 cv
cp
.07451 .215686 .356863 rgb
f
521.07 1535.42 mo
646.179 1535.42 li
646.179 1513.75 li
521.07 1513.75 li
521.07 1535.42 li
cp
.207843 .32549 .537255 rgb
f
575.158 1535.42 mo
646.179 1535.42 li
646.179 1513.75 li
575.158 1513.75 li
575.158 1535.42 li
cp
.52549 .694118 .94902 rgb
f
697.056 1535.42 mo
705.25 1535.42 li
705.25 1344.74 li
697.056 1344.74 li
697.056 1535.42 li
cp
f
696.287 1525.14 mo
696.287 1527.96 698.552 1530.25 701.345 1530.25 cv
704.138 1530.25 706.402 1527.96 706.402 1525.14 cv
706.402 1522.33 704.138 1520.04 701.345 1520.04 cv
698.552 1520.04 696.287 1522.33 696.287 1525.14 cv
cp
.07451 .215686 .356863 rgb
f
840.955 968.913 mo
840.955 968.913 856.897 958.135 863.637 977.013 cv
863.585 976.864 869.266 976.919 870.033 977.179 cv
873.312 978.287 876.479 981.703 879.402 983.574 cv
889.813 990.238 894.613 1003.19 895.18 1015.08 cv
895.868 1029.51 889.903 1040.06 880.413 1050.48 cv
877.617 1053.55 874.628 1056.55 870.967 1058.51 cv
866.549 1060.88 863.057 1059 858.905 1060.01 cv
855.409 1060.85 854.181 1064.55 850.058 1063.21 cv
844.277 1061.35 838.209 1054.11 831.043 1055.18 cv
823.887 1056.25 807.359 1049.81 807.316 1049.79 cv
786.084 1041.51 800.421 1000.42 804.491 985.838 cv
808.317 972.125 827.82 963.952 840.955 968.913 cv
cp
.094118 .27451 .333333 rgb
f
821.773 1062.28 mo
816.257 1077.33 li
813.285 1085.74 li
813.285 1085.74 813.079 1100.79 816.589 1104.69 cv
822.629 1111.41 847.476 1086.53 847.476 1086.53 cv
855.345 1039.2 li
821.773 1062.28 li
cp
.968627 .643137 .568627 rgb
f
852.792 1054.54 mo
843.343 1069.18 827.063 1075.88 816.205 1077.47 cv
821.773 1062.28 li
855.345 1039.2 li
852.792 1054.54 li
cp
.956863 .454902 .345098 rgb
f
848.892 990.574 mo
836.241 982.836 819.638 988.709 814.431 1002.36 cv
812.168 1008.3 809.643 1015.83 807.626 1024.23 cv
802.778 1044.43 808.919 1066.5 818.131 1068.53 cv
827.343 1070.56 855.701 1063.05 862.982 1034.46 cv
867.479 1016.8 862.168 998.692 848.892 990.574 cv
cp
.968627 .643137 .568627 rgb
f
855.692 1035.24 mo
854.704 1039.71 856.87 1044 860.529 1044.8 cv
864.188 1045.61 867.956 1042.64 868.944 1038.16 cv
869.933 1033.69 867.767 1029.41 864.107 1028.6 cv
860.448 1027.79 856.681 1030.76 855.692 1035.24 cv
cp
f
827.243 1043.62 mo
827.243 1043.62 839.383 1047.58 840.374 1052.04 cv
841.365 1056.5 839.878 1062.95 833.932 1067.9 cv
827.986 1072.86 815.268 1069.8 811.799 1067.08 cv
808.331 1064.35 805.688 1052.79 809.156 1046.35 cv
812.625 1039.9 827.243 1043.62 827.243 1043.62 cv
cp
.094118 .27451 .333333 rgb
f
831.207 1052.95 mo
831.207 1052.95 831.134 1057.92 829.473 1058.82 cv
827.862 1059.68 825.825 1060.41 823.939 1060.59 cv
820.884 1060.88 818.126 1059.58 816.52 1057.22 cv
816.361 1056.99 816.217 1056.75 816.094 1056.5 cv
814.854 1054.03 814.607 1049.65 814.607 1049.65 cv
814.607 1049.65 819.728 1048.41 822.7 1048.91 cv
825.673 1049.4 831.207 1052.95 831.207 1052.95 cv
cp
.968627 .643137 .568627 rgb
f
962.486 1110.9 mo
967.296 1106.1 989.595 1098.68 1006.5 1086.46 cv
1013.98 1081.05 1028.35 1073.94 1042.34 1066.2 cv
1052.56 1071.86 1061.8 1078.97 1068.7 1087.47 cv
1043.39 1099.11 1015.92 1110.8 1011.75 1114.97 cv
1003.88 1122.83 990.179 1140.58 986.972 1140.58 cv
983.766 1140.58 959.426 1133.45 955.782 1129.81 cv
952.139 1126.17 957.677 1115.7 962.486 1110.9 cv
cp
.968627 .611765 .552941 rgb
f
1042.34 1066.2 mo
1059.98 1056.44 1077 1045.69 1078.79 1036.12 cv
1082 1018.95 1067.42 944.751 1075.58 930.494 cv
1083.75 916.236 1102.11 904.306 1102.11 904.306 cv
1105.03 904.306 1115.52 910.708 1118.43 923.511 cv
1121.35 936.313 1116.1 1051.54 1113.19 1062.01 cv
1111.82 1066.93 1091.87 1086.51 1069.46 1096.81 cv
1062.56 1088.31 1052.56 1071.86 1042.34 1066.2 cv
cp
.956863 .454902 .345098 rgb
f
860.615 1221.6 mo
790.278 1240.03 li
790.278 1240.03 769.6 1254.94 760.299 1257.9 cv
750.999 1260.86 739.634 1271.11 741.862 1274.25 cv
744.09 1277.4 755.774 1266.72 757.672 1267.04 cv
759.57 1267.37 750.806 1280.01 749.383 1288.3 cv
747.959 1296.59 745.113 1304.63 749.865 1303.98 cv
754.617 1303.33 758.066 1284.66 758.066 1284.66 cv
758.066 1284.66 765.373 1270.55 766.553 1272.22 cv
767.732 1273.88 761.672 1283.57 761.672 1283.57 cv
761.672 1283.57 760.234 1294.05 759.602 1297.73 cv
759.13 1300.48 761.66 1308.73 763.817 1305.7 cv
765.084 1303.92 764.487 1297.11 765.959 1293.22 cv
768.979 1285.25 773.913 1278.93 773.913 1278.93 cv
773.913 1278.93 768.629 1302.8 771.95 1303.37 cv
775.271 1303.94 778.708 1284.16 778.708 1284.16 cv
778.708 1284.16 786.824 1267.69 790.366 1266.22 cv
793.907 1264.75 803.646 1258.48 811.177 1255.86 cv
818.708 1253.25 849.841 1261.86 863.731 1262.04 cv
877.621 1262.23 900.161 1253.63 902.031 1242.73 cv
902.602 1239.41 900.525 1235.73 897.363 1232.22 cv
888.178 1222.04 873.89 1218.12 860.615 1221.6 cv
cp
.968627 .643137 .568627 rgb
f
854.694 1087.91 mo
854.694 1087.91 875.974 1084.13 895.237 1118.78 cv
914.5 1153.43 902.031 1242.73 902.031 1242.73 cv
860.615 1221.6 li
854.694 1087.91 li
cp
.588235 .85098 .788235 rgb
f
960.34 1105.89 mo
960.34 1105.89 951.957 1117.82 949.46 1117.82 cv
946.963 1117.82 933.859 1118.64 931.801 1116.59 cv
929.744 1114.53 939.204 1099.04 942.593 1099.04 cv
945.981 1099.04 938.579 1109.27 939.472 1110.16 cv
940.363 1111.05 947.676 1093.96 951.421 1095.56 cv
955.167 1097.17 944.109 1109.1 945.357 1110.34 cv
946.605 1111.59 954.454 1096.81 957.486 1096.81 cv
960.518 1096.81 950.354 1110.17 951.421 1111.23 cv
952.488 1112.3 958.913 1104.47 960.34 1105.89 cv
cp
.956863 .54902 .498039 rgb
f
1081.22 868.398 mo
1081.22 868.398 1076.74 893.023 1077.64 902.737 cv
1078.54 912.451 1074.22 943.757 1054.88 943.86 cv
1035.53 943.963 1048.68 911.356 1050.5 901.837 cv
1052.32 892.318 1055.28 855.555 1055.28 855.555 cv
1081.22 868.398 li
cp
.968627 .643137 .568627 rgb
f
1054.09 869.495 mo
1054.39 861.435 1055.84 855.026 1055.84 855.026 cv
1081.22 868.398 li
1081.22 868.398 1080.31 873.434 1079.39 879.849 cv
1068.03 882.274 1059.01 876.965 1054.09 869.495 cv
cp
.956863 .454902 .345098 rgb
f
1081.77 796.862 mo
1081.77 796.862 1092.68 800.744 1098.61 812.596 cv
1104.54 824.447 1106.49 857.623 1082.58 870.368 cv
1058.67 883.112 1042.9 859.606 1044.38 838.544 cv
1045.87 817.481 1052.5 789.885 1081.77 796.862 cv
cp
.968627 .643137 .568627 rgb
f
1037.28 832.676 mo
1036.65 838.136 1038.58 842.794 1041.59 843.08 cv
1044.6 843.366 1047.56 839.171 1048.19 833.711 cv
1048.82 828.251 1046.89 823.593 1043.87 823.307 cv
1040.86 823.021 1037.91 827.216 1037.28 832.676 cv
cp
f
1096.5 841.867 mo
1094.4 847.153 1095.44 852.702 1098.84 854.261 cv
1102.23 855.819 1106.68 852.798 1108.79 847.513 cv
1110.89 842.227 1109.84 836.678 1106.45 835.119 cv
1103.06 833.561 1098.6 836.582 1096.5 841.867 cv
cp
f
2583.77 1194.18 mo
2583.77 1194.18 2580.61 1190.56 2579.65 1189.27 cv
2578.53 1187.76 2575.52 1182.98 2575.52 1182.98 cv
2575.52 1182.98 2565.81 1165.84 2567.13 1165.22 cv
2568.46 1164.61 2571.77 1166.62 2572.74 1167.47 cv
2573.71 1168.31 2574.92 1169.21 2575.89 1170.06 cv
2576.86 1170.91 2578.3 1170.89 2579.44 1169.75 cv
2580.58 1168.62 2577.44 1164.4 2576.07 1163.16 cv
2571.78 1159.29 2558.25 1151.24 2556.86 1150.33 cv
2555.21 1149.25 2543.84 1116.42 2539.05 1105.48 cv
2539.05 1105.47 li
2531.74 1087.33 2525.14 1068.32 2524.38 1066.39 cv
2516.82 982.976 li
2485.17 973.85 li
2485.17 973.85 2492.25 1066.54 2493.14 1071.14 cv
2493.56 1073.33 2513.75 1114.06 2513.77 1114.05 cv
2524.98 1133.48 2534.9 1150.58 2536.71 1153.91 cv
2536.71 1153.91 2539.45 1165.35 2540.77 1172.74 cv
2542.08 1180.13 2546.26 1186.4 2546.95 1188.42 cv
2547.05 1188.72 2549.04 1195.8 2554.5 1202.99 cv
2559.2 1209.19 2557.58 1201.11 2557.58 1201.11 cv
2557.58 1201.11 2550.94 1188.02 2552.06 1187.66 cv
2552.92 1187.38 2556.13 1194.75 2561.26 1201.66 cv
2562.58 1203.44 2563.89 1205.19 2565.11 1206.79 cv
2568.3 1210.98 2571.79 1210.18 2569.15 1205.24 cv
2568.22 1203.5 2566.6 1200.65 2565.16 1198.78 cv
2563.6 1196.76 2562.83 1194.39 2561.78 1192.49 cv
2559.69 1188.72 2558.13 1186 2558.33 1186 cv
2558.59 1185.99 2558.71 1184.94 2560.17 1186.78 cv
2561.92 1189 2564.61 1194.55 2567.44 1197.6 cv
2569.05 1199.34 2572.18 1203.16 2572.18 1203.16 cv
2572.18 1203.16 2577.95 1208.8 2578.35 1208.55 cv
2580.52 1207.19 2577.55 1201.96 2575.06 1199.9 cv
2574.16 1197.76 2570.74 1193.83 2570.74 1193.83 cv
2570.74 1193.83 2565.63 1184.3 2566.96 1183.53 cv
2568.06 1182.9 2584.71 1203.3 2586.8 1201.78 cv
2588.5 1200.55 2583.77 1194.18 2583.77 1194.18 cv
cp
.956863 .54902 .498039 rgb
f
2263.56 1017.22 mo
2263.21 1016.89 2262.06 1015.04 2260.91 1013.69 cv
2259.33 1011.83 2257.69 1010.4 2257.69 1010.4 cv
2257.69 1010.4 2257.73 1009.13 2257.23 1007.18 cv
2257.02 1006.36 2256.33 1005.32 2256.1 1004.41 cv
2255.87 1003.47 2255.97 1002.42 2255.74 1001.55 cv
2255.1 999.278 2254.01 997.601 2252.72 997.811 cv
2251.64 997.981 2253.55 1011.95 2253.55 1011.95 cv
2260.53 1020.62 2263.51 1033.25 2292.86 1042.6 cv
2307.17 1049.95 2379.8 1083.06 2386.68 1079.31 cv
2390.54 1077.2 2409.54 1047.53 2423.56 1024.52 cv
2416.78 1021.11 2402.4 1013.85 2394.53 1009.65 cv
2386.9 1025.62 2376.09 1045.94 2373.48 1046.86 cv
2372.8 1047.1 2371.29 1047.18 2316.16 1029.71 cv
2314.78 1029.26 2313.35 1028.82 2311.9 1028.37 cv
2308.03 1027.13 2303.88 1025.81 2299.49 1024.41 cv
2291.88 1012.8 li
2291.88 1012.8 2276.9 996.819 2274.56 997.885 cv
2273.5 998.383 2274.2 1000.15 2275.36 1002.08 cv
2275.4 1002.13 li
2275.57 1002.41 2275.75 1002.69 2275.92 1002.97 cv
2275.95 1003.01 li
2277.25 1005.05 2278.81 1007.04 2279.03 1007.65 cv
2279.28 1008.34 2279.75 1009.77 2279.86 1011.22 cv
2266.93 1004.19 2269.14 1003.74 2266.5 1000.06 cv
2265.85 999.127 2264.84 998.404 2264.23 997.52 cv
2263.19 996.002 2263.11 994.179 2262.28 993.023 cv
2261.05 991.348 2259.25 990.652 2258.71 990.613 cv
2258.03 990.544 2258.06 991.68 2258.55 993.53 cv
2261.67 1004.57 2268.53 1010.21 2269.77 1012.81 cv
2270.6 1014.55 2267.89 1012.34 2264.95 1007.83 cv
2264.21 1006.72 2262.73 1005.67 2261.94 1004.04 cv
2261.4 1002.96 2261.31 1001.65 2260.8 1000.57 cv
2260.33 999.576 2259.62 998.744 2259.19 997.939 cv
2258.61 996.888 2258.27 995.053 2257.76 994.257 cv
2255.86 991.302 2254.31 990.368 2253.81 990.271 cv
2252.74 990.101 2258.05 1006.25 2258.05 1006.25 cv
2258.05 1006.25 2263.75 1015.72 2265.29 1017.61 cv
2265.29 1017.61 2265.71 1019.16 2263.56 1017.22 cv
cp
f
2509.66 877.737 mo
2512.92 862.941 2516.11 848.052 2507.52 831.797 cv
2500.58 818.643 2488.58 811.074 2474.68 809.425 cv
2435.32 804.755 2431.85 839.933 2394.46 855.331 cv
2378.48 861.908 2362.1 860.026 2347.82 868.529 cv
2322.05 883.882 2308.36 926.959 2325.45 967.082 cv
2367.31 1065.33 2466 1001.02 2478.69 981.676 cv
2488.13 967.285 2507.57 887.262 2509.66 877.737 cv
cp
.0745098 .215686 .356863 rgb
f
2499.38 942.657 mo
2478.26 949.256 2421.07 967.768 2418.21 967.073 cv
2366.1 925.6 li
2334.04 953.738 li
2334.04 953.738 2405.57 1006.71 2409.63 1008.65 cv
2412.64 1010.08 2475.62 977.632 2505.32 963.114 cv
2504.9 953.451 2504.12 951.114 2499.38 942.657 cv
cp
.956863 .54902 .498039 rgb
f
2404.03 948.827 mo
2371.37 991.109 li
2371.37 991.109 2336.95 964.651 2324.26 950.417 cv
2308.86 933.148 2292.02 896.072 2294.5 894.716 cv
2301.48 890.91 2316.53 887.86 2326.91 890.18 cv
2362.83 898.205 2404.03 948.827 2404.03 948.827 cv
cp
.235294 .560784 .486275 rgb
f
2490.28 1014.98 mo
2523.32 996.126 li
2523.32 996.126 2508.32 932.882 2481.56 930.854 cv
2490.28 1014.98 li
cp
.968627 .8 .498039 rgb
f
2352.23 1498.34 mo
2352.23 1498.34 2349.43 1526.8 2342.22 1532.02 cv
2335.01 1537.25 2325.41 1556.58 2330.21 1567.04 cv
2331.71 1570.3 2334.71 1572.19 2338.13 1573.24 cv
2348.26 1576.36 2359.03 1571.11 2363.34 1561.43 cv
2365.75 1556.03 2367.86 1548.82 2368.28 1539.73 cv
2369.36 1516.61 2376.57 1504.85 2376.57 1504.85 cv
2352.23 1498.34 li
cp
.968627 .643137 .568627 rgb
f
2462.96 1509.98 mo
2462.96 1509.98 2465.24 1538.7 2463.39 1548.04 cv
2462.41 1553.03 2456.91 1563.32 2459.43 1568.03 cv
2461.95 1572.73 2464.83 1573.9 2464.83 1573.9 cv
2530.2 1574.96 li
2533.76 1575.01 2531.41 1572.72 2528.54 1570.62 cv
2523.84 1567.17 2520.04 1564.89 2505.03 1557.64 cv
2504.06 1557.17 2500.49 1554.91 2499.21 1554.13 cv
2495.95 1552.14 2492.67 1549.01 2489.85 1545.88 cv
2485.16 1540.67 2484.75 1515.38 2484.75 1515.38 cv
2462.96 1509.98 li
cp
f
2514.05 1128.24 mo
2514.05 1128.24 2522.28 1174.87 2516.88 1205.44 cv
2511.48 1236.01 2485.54 1519.36 2485.54 1519.36 cv
2456.71 1520.99 li
2456.71 1520.99 2450.67 1402.62 2451.75 1386.16 cv
2452.83 1369.7 2461.38 1342.16 2461.38 1342.16 cv
2458.51 1246.59 li
2494.89 1121.05 li
2514.05 1128.24 li
cp
.717647 .341176 .258824 rgb
f
2429.33 1118.44 mo
2429.33 1118.44 2406.63 1152.53 2401.23 1180.75 cv
2395.82 1208.97 2405.19 1295.69 2394.8 1332.67 cv
2389.17 1352.68 2367.84 1383.59 2364.6 1409.46 cv
2361.35 1435.33 2348.63 1503.08 2348.63 1503.08 cv
2377.45 1508.78 li
2444.41 1339.57 li
2496.94 1186.63 li
2510.4 1107.86 li
2429.33 1118.44 li
cp
.956863 .454902 .345098 rgb
f
2447.7 924.44 mo
2447.7 924.44 2432.14 927.009 2420.55 938.355 cv
2395.69 962.688 2435.16 1056.52 2437.32 1072.98 cv
2439.48 1089.44 2419.6 1127.84 2419.6 1127.84 cv
2419.6 1127.84 2493.88 1141.57 2514.05 1128.24 cv
2514.05 1128.24 2516.43 996.171 2514.26 984.413 cv
2512.1 972.655 2487.92 936.369 2483.59 931.666 cv
2479.27 926.962 2447.7 924.44 2447.7 924.44 cv
cp
.980392 .878431 .698039 rgb
f
2457.71 884.363 mo
2457.71 884.363 2457.55 885.247 2457.27 886.75 cv
2455.93 893.961 2450.77 917.881 2447.29 924.458 cv
2443.08 932.405 2461.71 957.751 2479.65 954.658 cv
2484.99 953.737 2475.13 931.369 2475.61 929 cv
2476.51 924.464 2477.74 918.276 2479 911.933 cv
2479.71 908.353 2480.43 904.725 2481.1 901.314 cv
2483.02 891.622 2484.58 883.694 2484.58 883.694 cv
2457.71 884.363 li
cp
.968627 .643137 .568627 rgb
f
2457.27 886.75 mo
2457.55 885.247 2457.71 884.363 2457.71 884.363 cv
2484.58 883.694 li
2484.58 883.694 2483.02 891.622 2481.1 901.314 cv
2480.43 904.706 2479.72 908.313 2479.01 911.873 cv
2474.86 911.263 2470.53 909.25 2466.18 905.452 cv
2461.44 901.312 2458.33 896.336 2456.46 891.025 cv
2456.79 889.329 2457.07 887.868 2457.27 886.75 cv
cp
.956863 .454902 .345098 rgb
f
2473.88 820.487 mo
2473.88 820.487 2462.92 822.007 2454.97 832.256 cv
2447.03 842.506 2438.48 874.201 2458.2 891.434 cv
2477.93 908.667 2497.42 889.16 2500.31 868.479 cv
2503.2 847.797 2502.61 819.74 2473.88 820.487 cv
cp
.968627 .643137 .568627 rgb
f
2506.62 861.411 mo
2504.26 865.979 2500.31 868.508 2497.79 867.061 cv
2495.27 865.612 2495.14 860.735 2497.49 856.168 cv
2499.85 851.6 2503.8 849.071 2506.32 850.519 cv
2508.84 851.966 2508.97 856.843 2506.62 861.411 cv
cp
f
2477.22 820.007 mo
2477.22 820.007 2460.29 850.148 2448.18 851.542 cv
2436.08 852.934 2434.49 868.95 2434.49 868.95 cv
2434.49 868.95 2438.82 832.045 2450.8 824.928 cv
2462.79 817.812 2477.22 820.007 2477.22 820.007 cv
cp
.0745098 .215686 .356863 rgb
f
2452.14 858.723 mo
2453.13 864.076 2451.15 868.984 2447.72 869.687 cv
2444.29 870.39 2440.72 866.62 2439.73 861.268 cv
2438.75 855.915 2440.73 851.006 2444.16 850.303 cv
2447.58 849.601 2451.16 853.37 2452.14 858.723 cv
cp
.968627 .643137 .568627 rgb
f
2365.3 1556.34 mo
2349.6 1559.2 2339.15 1550.03 2333.71 1543.17 cv
2329.72 1550.94 2327.27 1560.65 2330.21 1567.04 cv
2332.8 1572.66 2339.84 1574.2 2345.79 1574.42 cv
2352.08 1574.65 2357.96 1571.36 2361.08 1565.9 cv
2362.54 1563.34 2364.04 1560.16 2365.3 1556.34 cv
cp
.235294 .560784 .486275 rgb
f
2499.2 1554.12 mo
2481.91 1558.55 2469.13 1555.54 2461.98 1552.66 cv
2460.14 1557.88 2457.69 1564.42 2458.99 1568.19 cv
2460.58 1572.81 2462.84 1573.85 2464.83 1573.9 cv
2480.62 1574.32 2522.67 1574.88 2534.71 1575.04 cv
2536.4 1575.06 2537.32 1573.1 2536.24 1571.81 cv
2533.25 1568.25 2500.49 1554.91 2499.2 1554.12 cv
cp
f
2385.3 1024.42 mo
2431.52 1029.98 li
2431.52 1029.98 2448.65 984.5 2445.47 960.604 cv
2442.28 936.707 2433.3 934.279 2428.28 934.446 cv
2414.37 934.912 2401.13 953.445 2392.08 982.41 cv
2383.04 1011.38 2385.3 1024.42 2385.3 1024.42 cv
cp
.968627 .8 .498039 rgb
f
2382.73 1517.59 mo
2381.2 1544.46 li
2380.65 1547.86 2378.45 1556.27 2378.45 1559.37 cv
2378.45 1570.99 2430.17 1549.5 2418.58 1544.34 cv
2417.53 1543.88 2412.04 1540.35 2411.69 1536.39 cv
2411.16 1530.3 2409.81 1517.96 2409.81 1517.96 cv
2382.73 1517.59 li
cp
.968627 .643137 .568627 rgb
f
2418.45 1544.23 mo
2418.45 1544.23 2406.31 1547.79 2400.09 1548.68 cv
2393.87 1549.57 2385.67 1542.08 2381.27 1544.1 cv
2376.43 1546.33 2377.37 1572.56 2377.37 1572.56 cv
2377.37 1572.56 2445.11 1577.85 2463.42 1571.96 cv
2470.68 1569.62 2443.28 1552.52 2418.45 1544.23 cv
cp
.094118 .27451 .333333 rgb
f
2268.77 1517.59 mo
2267.24 1544.46 li
2266.68 1547.86 2264.49 1556.27 2264.49 1559.37 cv
2264.49 1570.99 2316.21 1549.5 2304.62 1544.34 cv
2303.57 1543.88 2296.44 1537.72 2296.1 1533.76 cv
2295.57 1527.66 2295.85 1517.96 2295.85 1517.96 cv
2268.77 1517.59 li
cp
.968627 .643137 .568627 rgb
f
2304.49 1544.23 mo
2304.49 1544.23 2292.35 1547.79 2286.13 1548.68 cv
2279.91 1549.57 2271.71 1542.08 2267.31 1544.1 cv
2262.47 1546.33 2261.22 1572 2261.22 1572 cv
2261.22 1572 2333.1 1578.66 2349.4 1573.94 cv
2356.72 1571.82 2329.32 1552.52 2304.49 1544.23 cv
cp
.094118 .27451 .333333 rgb
f
2350.74 1130.54 mo
2372.61 1139.97 li
2418.61 1359.66 li
2416.75 1524.35 li
2379.87 1525.2 li
2379.87 1525.2 2362.72 1381.14 2362.72 1369.98 cv
2362.72 1358.81 2283.27 1174.6 2283.27 1174.6 cv
2350.74 1130.54 li
cp
.207843 .32549 .537255 rgb
f
2333.86 1142.63 mo
2333.86 1142.63 2327.75 1309.28 2327.75 1337.81 cv
2327.75 1366.34 2319.04 1526.74 2319.04 1526.74 cv
2267.72 1528.42 li
2267.72 1528.42 2265.05 1479.75 2261.09 1408.14 cv
2260.47 1396.93 2261.89 1374.3 2261.09 1362.69 cv
2255.34 1279.18 2243.97 1200.57 2249.4 1169.41 cv
2250.27 1164.4 2251.92 1151.28 2255.12 1147.97 cv
2279.32 1122.93 2333.86 1142.63 2333.86 1142.63 cv
cp
.27451 .431373 .713726 rgb
f
2272.98 889.497 mo
2272.98 889.497 2247.47 893.044 2240.76 897.974 cv
2233.19 903.526 2224.81 915.95 2224.81 915.95 cv
2224.81 915.95 2256.12 1063.98 2256.18 1088.89 cv
2256.22 1108.17 2249.4 1155.48 2249.4 1155.48 cv
2249.4 1155.48 2344.03 1161.46 2379.87 1147.31 cv
2379.87 1147.31 2368.56 1091.03 2368.56 1076.25 cv
2368.56 1061.48 2355.02 927.099 2351.94 917.714 cv
2349.14 909.199 2344.03 893.899 2326.74 890.126 cv
2309.45 886.354 2272.98 889.497 2272.98 889.497 cv
cp
.313726 .74902 .647059 rgb
f
2338.02 1040.08 mo
2338.63 1043.61 li
2338.95 1045.42 2340.67 1046.64 2342.49 1046.32 cv
2415.64 1033.66 li
2417.46 1033.34 2418.67 1031.61 2418.36 1029.8 cv
2417.75 1026.27 li
2417.43 1024.45 2415.71 1023.24 2413.89 1023.55 cv
2340.74 1036.22 li
2338.92 1036.53 2337.71 1038.26 2338.02 1040.08 cv
cp
.07451 .215686 .356863 rgb
f
2234.33 908.559 mo
2242.91 908.311 2250.5 964.919 2245.06 970.503 cv
2239.62 976.087 2238.58 1045.81 2238.58 1045.81 cv
2319.54 1043.8 li
2319.55 1043.82 li
2321.13 1042.77 2338.09 1031.38 2340.52 1028.88 cv
2343.06 1026.27 2355.42 1027.58 2358.69 1031.17 cv
2361.96 1034.76 2351.42 1031.82 2348.51 1033.78 cv
2345.61 1035.74 2350.7 1040.64 2350.7 1040.64 cv
2350.7 1040.64 2371.21 1043.62 2375.21 1039.37 cv
2379.21 1035.13 2389.9 1027.94 2391.35 1032.19 cv
2392.1 1034.38 2386.59 1041.01 2383.49 1043.8 cv
2387.36 1040.9 2392 1037.82 2393.59 1038.35 cv
2396.5 1039.33 2395.29 1043.03 2393.71 1044.12 cv
2392.14 1045.21 2375.85 1057.64 2373.3 1058.52 cv
2370.82 1059.37 2332.93 1060.3 2326.39 1061.75 cv
2326.39 1061.75 2219.62 1086.06 2213.55 1084.55 cv
2208.23 1083.21 2202.9 1049.04 2202.9 1022.87 cv
2202.9 996.688 2207.51 909.336 2234.33 908.559 cv
cp
.968627 .643137 .568627 rgb
f
2245.46 895.645 mo
2245.46 895.645 2230.52 899.084 2215.09 916.42 cv
2201.06 932.187 2192.23 1020.48 2192.23 1020.48 cv
2240.67 1028.31 li
2244.54 985.601 li
2257.48 966.065 li
2245.46 895.645 li
cp
.313726 .74902 .647059 rgb
f
2479.05 929.386 mo
2479.05 929.386 2482.43 925.705 2488.74 926.152 cv
2495.05 926.599 2503.32 934.582 2504.47 937.442 cv
2505.06 938.914 2501.1 950.542 2499.38 953.102 cv
2498.36 954.615 2496.02 955.368 2495.2 954.571 cv
2494.66 954.048 2495.22 951.404 2495.37 950.835 cv
2495.67 949.727 2497.76 942.537 2497.76 942.537 cv
2497.76 942.537 2493.68 949.785 2491.79 950.222 cv
2489.89 950.659 2488.84 949.122 2488.95 948.52 cv
2489.53 945.452 2492.7 939.555 2492.7 939.555 cv
2492.7 939.555 2487.92 946.564 2485.58 945.83 cv
2483.23 945.095 2484.21 942.598 2484.56 941.754 cv
2484.91 940.91 2488.17 936.071 2488.17 936.071 cv
2488.17 936.071 2483 943.239 2481.98 940.671 cv
2481.37 939.109 2484.75 932.316 2484.75 932.316 cv
2479.05 929.386 li
cp
.968627 .643137 .568627 rgb
f
2267.83 853.775 mo
2271.8 893.808 li
2271.8 893.808 2291.17 919.412 2303.28 913.746 cv
2313.45 908.992 2308.66 893.118 2308.66 893.118 cv
2308.66 893.118 2306.9 886.027 2304.45 877.881 cv
2302.75 872.188 2301.33 866.022 2301.43 861.498 cv
2301.69 850.499 2267.83 853.775 2267.83 853.775 cv
cp
f
2304.39 877.664 mo
2302.71 872.032 2301.33 865.964 2301.43 861.498 cv
2301.69 850.499 2267.83 853.775 2267.83 853.775 cv
2268.32 858.725 li
2268.52 859.275 2268.75 859.8 2269.01 860.297 cv
2276.14 874.13 2293.12 881.415 2304.39 877.664 cv
cp
.956863 .454902 .345098 rgb
f
2326.73 792.729 mo
2326.73 792.729 2330.68 815.362 2325.09 830.502 cv
2319.49 845.642 2311.95 854.344 2311.95 854.344 cv
2294.17 793.365 li
2326.73 792.729 li
cp
.094118 .27451 .333333 rgb
f
2330.28 829.175 mo
2328.54 834.573 2324.59 838.131 2321.45 837.122 cv
2318.31 836.112 2317.17 830.918 2318.91 825.52 cv
2320.65 820.121 2324.6 816.563 2327.74 817.572 cv
2330.88 818.582 2332.01 823.776 2330.28 829.175 cv
cp
.956863 .54902 .498039 rgb
f
2278.96 795.223 mo
2278.18 794.666 2259.45 837.664 2267.47 853.229 cv
2275.49 868.793 2296 876.069 2306.79 868.658 cv
2318.72 860.461 2332.67 815.381 2318.36 797.653 cv
2304.06 779.926 2278.96 795.223 2278.96 795.223 cv
cp
.968627 .643137 .568627 rgb
f
2287.47 767.199 mo
2274.31 771.37 2267.04 775.443 2254.12 787.443 cv
2238.23 802.199 2245.65 827.95 2255.52 841.216 cv
2265.39 854.481 2269.1 866.421 2269.1 866.421 cv
2269.1 866.421 2267.79 851.347 2267.71 848.104 cv
2267.64 845.219 2267.63 835.439 2267.18 832.66 cv
2265.98 825.328 2265.79 823.772 2269.99 819.147 cv
2273.23 815.585 2275.63 805.663 2280.83 799.73 cv
2300.21 803.669 li
2300.21 803.669 2312.46 805.859 2320.89 801.854 cv
2345.08 790.354 2322.36 755.763 2287.47 767.199 cv
cp
.094118 .27451 .333333 rgb
f
2272.15 825.924 mo
2272.26 831.594 2269.68 836.246 2266.39 836.314 cv
2263.09 836.382 2260.33 831.841 2260.21 826.171 cv
2260.09 820.501 2262.67 815.849 2265.97 815.781 cv
2269.26 815.713 2272.03 820.254 2272.15 825.924 cv
cp
.968627 .643137 .568627 rgb
f
2228.18 954.816 mo
2232.3 936.073 li
2232.3 936.073 2245.78 944.63 2253.65 956.854 cv
2261.51 969.078 2265.26 1001.67 2267.51 1002.9 cv
2269.76 1004.12 2294.64 965.773 2299 959.729 cv
2304.38 952.253 2306.39 943.672 2309.76 937.152 cv
2313.13 930.633 2325 928.413 2329.5 929.228 cv
2333.99 930.043 2323.32 949.112 2323.32 949.112 cv
2323.32 949.112 2296.35 995.971 2287.36 1021.64 cv
2278.37 1047.31 2250.28 1059.54 2245.78 1055.87 cv
2241.29 1052.2 2228.18 954.816 2228.18 954.816 cv
cp
.956863 .54902 .498039 rgb
f
2310.06 940.74 mo
2310.06 940.74 2311.18 935.807 2314.21 934.797 cv
2317.24 933.788 2322.51 934.685 2322.84 934.797 cv
2323.18 934.909 2329.01 931.77 2329.01 931.77 cv
2324.19 940.74 li
2324.19 940.74 2314.77 951.842 2311.63 947.692 cv
2308.49 943.544 2310.06 940.74 2310.06 940.74 cv
cp
.968627 .643137 .568627 rgb
f
2330.69 932.181 mo
2330.69 932.181 2334.09 949.487 2333.24 953.112 cv
2332.37 956.749 2330.2 954.8 2329.8 954.01 cv
2328.12 950.757 2326.96 939.656 2326.96 939.656 cv
2330.69 932.181 li
cp
.956863 .54902 .498039 rgb
f
2323.37 946.571 mo
2323.37 946.571 2324.99 957.305 2326.66 958.569 cv
2327.74 959.392 2329.12 958.906 2329.57 956.738 cv
2330.02 954.57 2327.4 941.339 2327.4 941.339 cv
2323.37 946.571 li
cp
f
2313.45 977.027 mo
2307.81 974.275 li
2331.79 925.087 li
2334.9 926.606 2336.2 930.365 2334.68 933.482 cv
2313.45 977.027 li
cp
.094118 .27451 .333333 rgb
f
2253.2 877.74 mo
2256.59 862.358 2259.9 846.878 2250.98 829.979 cv
2243.76 816.303 2231.28 808.434 2216.84 806.72 cv
2175.91 801.864 2184.66 840.071 2127.46 848.342 cv
2109.68 850.912 2093.17 853.382 2078.33 862.222 cv
2051.53 878.184 2041.42 903.788 2059.19 945.501 cv
2102.7 1047.64 2209.51 960.932 2222.71 940.819 cv
2232.52 925.857 2251.03 887.643 2253.2 877.74 cv
cp
.0745098 .215686 .356863 rgb
f
2089.53 1522.94 mo
2089.53 1522.94 2086.62 1552.53 2079.13 1557.96 cv
2071.63 1563.39 2061.64 1583.5 2066.64 1594.36 cv
2068.2 1597.76 2071.32 1599.72 2074.88 1600.82 cv
2085.4 1604.06 2096.6 1598.6 2101.08 1588.54 cv
2103.58 1582.92 2105.78 1575.42 2106.22 1565.98 cv
2107.34 1541.93 2114.84 1529.71 2114.84 1529.71 cv
2089.53 1522.94 li
cp
.968627 .643137 .568627 rgb
f
2204.66 1535.05 mo
2204.66 1535.05 2207.02 1564.91 2205.1 1574.61 cv
2204.07 1579.81 2198.36 1590.5 2200.98 1595.39 cv
2203.6 1600.28 2206.6 1601.5 2206.6 1601.5 cv
2274.56 1602.6 li
2278.26 1602.66 2275.81 1600.28 2272.83 1598.09 cv
2267.94 1594.5 2264 1592.13 2248.39 1584.6 cv
2247.38 1584.11 2243.67 1581.76 2242.33 1580.94 cv
2238.94 1578.88 2235.54 1575.63 2232.61 1572.37 cv
2227.73 1566.95 2227.31 1540.66 2227.31 1540.66 cv
2204.66 1535.05 li
cp
f
2257.77 1138.18 mo
2257.77 1138.18 2266.33 1186.65 2260.71 1218.43 cv
2255.09 1250.22 2228.12 1544.8 2228.12 1544.8 cv
2198.15 1546.49 li
2198.15 1546.49 2191.87 1423.43 2192.99 1406.32 cv
2194.12 1389.21 2203.01 1360.57 2203.01 1360.57 cv
2200.03 1261.22 li
2237.85 1130.7 li
2257.77 1138.18 li
cp
.717647 .341176 .258824 rgb
f
2169.69 1127.98 mo
2169.69 1127.98 2146.09 1163.43 2140.47 1192.77 cv
2134.85 1222.1 2144.59 1312.26 2133.79 1350.7 cv
2127.94 1371.51 2105.76 1403.65 2102.39 1430.54 cv
2099.02 1457.43 2085.79 1527.87 2085.79 1527.87 cv
2115.75 1533.8 li
2185.37 1357.88 li
2239.98 1198.87 li
2253.97 1116.98 li
2169.69 1127.98 li
cp
.956863 .454902 .345098 rgb
f
2188.79 926.295 mo
2188.79 926.295 2168.13 928.64 2155.76 942.086 cv
2143.4 955.531 2175.75 1063.61 2177.99 1080.73 cv
2180.24 1097.84 2159.57 1137.76 2159.57 1137.76 cv
2159.57 1137.76 2236.79 1152.03 2257.77 1138.18 cv
2257.77 1138.18 2260.02 1015.12 2257.77 1002.9 cv
2255.52 990.674 2236.79 940.963 2232.3 936.073 cv
2227.8 931.183 2188.79 926.295 2188.79 926.295 cv
cp
.207843 .32549 .537255 rgb
f
2159.57 952.232 mo
2161.56 946.21 2168.39 943.31 2174.21 945.826 cv
2182.19 949.276 2193.2 955.823 2198.58 967.041 cv
2207.57 985.784 2239.04 1050.16 2248.78 1052.61 cv
2258.52 1055.05 2298.23 985.784 2298.23 985.784 cv
2298.23 985.784 2297.1 973.56 2300.47 966.633 cv
2303.84 959.706 2313.96 952.372 2315.46 954.816 cv
2316.96 957.261 2309.84 963.373 2309.84 964.596 cv
2309.84 965.818 2312.83 966.633 2316.96 964.188 cv
2321.08 961.743 2323.31 956.799 2323.31 956.799 cv
2323.31 956.799 2330.07 969.078 2322.95 980.08 cv
2315.83 991.081 2312.83 995.563 2312.83 995.563 cv
2312.83 995.563 2266.76 1097.84 2249.9 1099.06 cv
2234.21 1100.2 2143.79 999.92 2159.57 952.232 cv
cp
.968627 .643137 .568627 rgb
f
2199.19 884.629 mo
2199.19 884.629 2199.03 885.547 2198.74 887.11 cv
2197.35 894.606 2191.98 919.476 2188.36 926.313 cv
2183.98 934.574 2203.35 960.926 2222 957.71 cv
2227.55 956.753 2217.31 933.498 2217.8 931.035 cv
2218.74 926.319 2220.02 919.886 2221.33 913.291 cv
2222.06 909.569 2222.81 905.797 2223.51 902.251 cv
2225.51 892.175 2227.13 883.934 2227.13 883.934 cv
2199.19 884.629 li
cp
.968627 .643137 .568627 rgb
f
2198.74 887.11 mo
2199.03 885.547 2199.19 884.629 2199.19 884.629 cv
2227.13 883.934 li
2227.13 883.934 2225.51 892.175 2223.51 902.251 cv
2222.82 905.777 2222.07 909.527 2221.34 913.229 cv
2217.02 912.595 2212.52 910.502 2208 906.554 cv
2203.07 902.249 2199.84 897.077 2197.89 891.554 cv
2198.24 889.792 2198.52 888.272 2198.74 887.11 cv
cp
.956863 .454902 .345098 rgb
f
2216 818.22 mo
2216 818.22 2204.6 819.801 2196.35 830.456 cv
2188.09 841.112 2179.2 874.064 2199.7 891.979 cv
2220.21 909.895 2240.47 889.616 2243.48 868.114 cv
2246.48 846.613 2245.87 817.443 2216 818.22 cv
cp
.968627 .643137 .568627 rgb
f
2250.04 860.766 mo
2247.59 865.515 2243.48 868.145 2240.86 866.64 cv
2238.24 865.134 2238.1 860.064 2240.55 855.315 cv
2243 850.566 2247.11 847.938 2249.73 849.442 cv
2252.35 850.947 2252.49 856.018 2250.04 860.766 cv
cp
f
2219.47 817.722 mo
2219.47 817.722 2201.88 849.058 2189.29 850.506 cv
2176.7 851.954 2175.05 868.604 2175.05 868.604 cv
2175.05 868.604 2179.55 830.237 2192.01 822.838 cv
2204.47 815.438 2219.47 817.722 2219.47 817.722 cv
cp
.0745098 .215686 .356863 rgb
f
2193.41 857.972 mo
2194.43 863.537 2192.37 868.64 2188.81 869.371 cv
2185.24 870.101 2181.53 866.182 2180.5 860.617 cv
2179.48 855.052 2181.54 849.949 2185.1 849.219 cv
2188.66 848.488 2192.38 852.407 2193.41 857.972 cv
cp
.968627 .643137 .568627 rgb
f
2103.12 1583.25 mo
2086.79 1586.22 2075.93 1576.69 2070.28 1569.55 cv
2066.13 1577.63 2063.59 1587.72 2066.64 1594.36 cv
2069.33 1600.21 2076.65 1601.81 2082.83 1602.04 cv
2089.37 1602.28 2095.49 1598.86 2098.73 1593.18 cv
2100.25 1590.52 2101.81 1587.22 2103.12 1583.25 cv
cp
.235294 .560784 .486275 rgb
f
2242.32 1580.94 mo
2224.35 1585.54 2211.07 1582.41 2203.63 1579.42 cv
2201.72 1584.84 2199.18 1591.64 2200.52 1595.56 cv
2202.17 1600.36 2204.52 1601.45 2206.6 1601.5 cv
2223.01 1601.93 2266.73 1602.52 2279.25 1602.68 cv
2281 1602.7 2281.96 1600.67 2280.84 1599.33 cv
2277.73 1595.63 2243.66 1581.75 2242.32 1580.94 cv
cp
f
2834.74 1154.8 mo
2834.74 1154.8 2834.56 1154.67 2834.25 1154.46 cv
2832.72 1153.42 2828 1150.36 2824.64 1150.01 cv
2820.58 1149.59 2816.1 1150.22 2816.1 1150.22 cv
2823.08 1158.14 li
2834.74 1154.8 li
cp
.968627 .643137 .568627 rgb
f
2841.44 1451.74 mo
2838 1451.74 2835.22 1448.95 2835.22 1445.52 cv
2835.22 1362.89 2902.44 1295.67 2985.07 1295.67 cv
3020.48 1295.67 3054.85 1308.25 3081.84 1331.1 cv
3084.46 1333.32 3084.79 1337.25 3082.57 1339.87 cv
3080.35 1342.49 3076.42 1342.81 3073.8 1340.6 cv
3049.06 1319.64 3017.54 1308.11 2985.07 1308.11 cv
2909.3 1308.11 2847.66 1369.75 2847.66 1445.52 cv
2847.66 1448.95 2844.87 1451.74 2841.44 1451.74 cv
cp
.956863 .454902 .345098 rgb
f
2744.93 1442.68 mo
2743.11 1442.68 2741.35 1441.73 2740.4 1440.03 cv
2626.06 1235.56 li
2624.66 1233.06 2625.55 1229.91 2628.05 1228.51 cv
2630.55 1227.11 2633.71 1228.01 2635.1 1230.5 cv
2753.59 1434.4 li
2754.99 1436.9 2749.95 1440.63 2747.45 1442.02 cv
2746.65 1442.47 2745.78 1442.68 2744.93 1442.68 cv
cp
.717647 .341176 .258824 rgb
f
2749 1442.38 mo
2578.13 1440.44 li
2664.28 1292.08 li
2865.74 1254.89 li
2749 1442.38 li
cp
2881.52 1247.97 mo
2881.52 1247.97 li
2881.72 1244.61 2878.71 1241.95 2875.4 1242.56 cv
2657.71 1282.75 li
2557.34 1455.67 2562.64 1444.13 2564.58 1447.88 cv
2567.33 1453.23 2562.21 1449.46 2754.71 1452.8 cv
2883.33 1246.24 2881.36 1250.6 2881.52 1247.97 cv
cp
f
2982.87 1535.54 mo
2979.05 1535.54 2975.29 1535.3 2971.6 1534.84 cv
2971.01 1533.31 2970.34 1531.81 2969.61 1530.37 cv
2973.93 1531.05 2978.36 1531.4 2982.87 1531.4 cv
2995.32 1531.4 3007.33 1528.79 3018.56 1523.65 cv
3018.84 1523.52 3019.13 1523.46 3019.42 1523.46 cv
3020.21 1523.46 3020.96 1523.91 3021.31 1524.67 cv
3021.79 1525.71 3021.33 1526.94 3020.29 1527.42 cv
3008.51 1532.81 2995.92 1535.54 2982.87 1535.54 cv
2936.18 1522.46 mo
2910.22 1506.65 2892.84 1478.07 2892.84 1445.52 cv
2892.84 1437.9 2893.76 1430.46 2895.6 1423.26 cv
2898.35 1430.13 li
2897.44 1435.15 2896.99 1440.29 2896.99 1445.52 cv
2896.99 1475.42 2912.35 1501.8 2935.59 1517.18 cv
2935.82 1518.86 2936.02 1520.62 2936.18 1522.46 cv
.729412 .827451 .972549 rgb
f
2966.09 1533.97 mo
2955.32 1531.94 2945.23 1527.98 2936.18 1522.46 cv
2936.02 1520.62 2935.82 1518.86 2935.59 1517.18 cv
2945.59 1523.8 2957.04 1528.38 2969.36 1530.33 cv
2968.42 1531.51 2967.33 1532.75 2966.09 1533.97 cv
.717647 .670588 .784314 rgb
f
2898.35 1430.13 mo
2895.6 1423.26 li
2897.25 1416.76 2899.64 1410.45 2902.77 1404.38 cv
2903.14 1403.67 2903.86 1403.26 2904.61 1403.26 cv
2904.93 1403.26 2905.26 1403.33 2905.56 1403.49 cv
2906.58 1404.01 2906.98 1405.26 2906.46 1406.28 cv
2902.55 1413.87 2899.84 1421.85 2898.35 1430.13 cv
.435294 .717647 .819608 rgb
f
2971.6 1534.84 mo
2969.74 1534.61 2967.91 1534.32 2966.09 1533.97 cv
2967.33 1532.75 2968.42 1531.51 2969.36 1530.33 cv
2969.45 1530.35 2969.53 1530.36 2969.61 1530.37 cv
2970.34 1531.81 2971.01 1533.31 2971.6 1534.84 cv
.709804 .592157 .690196 rgb
f
2982.87 1329.43 mo
2918.85 1329.43 2866.78 1381.51 2866.78 1445.52 cv
2866.78 1509.53 2918.85 1561.61 2982.87 1561.61 cv
3046.88 1561.61 3098.95 1509.53 3098.95 1445.52 cv
3098.95 1381.51 3046.88 1329.43 2982.87 1329.43 cv
2982.87 1578.19 mo
2909.71 1578.19 2850.19 1518.67 2850.19 1445.52 cv
2850.19 1372.36 2909.71 1312.84 2982.87 1312.84 cv
3056.02 1312.84 3115.54 1372.36 3115.54 1445.52 cv
3115.54 1518.67 3056.02 1578.19 2982.87 1578.19 cv
.207843 .32549 .537255 rgb
f
2982.87 1548.48 mo
2979.89 1548.48 2976.94 1548.35 2974.03 1548.1 cv
2974.13 1546.77 2974.09 1545.37 2973.93 1543.93 cv
2976.87 1544.2 2979.85 1544.33 2982.87 1544.33 cv
3037.35 1544.33 3081.68 1500 3081.68 1445.52 cv
3081.68 1391.03 3037.35 1346.7 2982.87 1346.7 cv
2962.45 1346.7 2943.46 1352.93 2927.69 1363.58 cv
2926.96 1362.4 2926.22 1361.23 2925.48 1360.07 cv
2941.89 1349.02 2961.64 1342.56 2982.87 1342.56 cv
3039.64 1342.56 3085.83 1388.75 3085.83 1445.52 cv
3085.83 1502.29 3039.64 1548.48 2982.87 1548.48 cv
2938.04 1538.2 mo
2903.66 1521.5 2879.91 1486.23 2879.91 1445.52 cv
2879.91 1431.11 2882.88 1417.39 2888.24 1404.93 cv
2890.47 1410.48 li
2886.32 1421.37 2884.05 1433.19 2884.05 1445.52 cv
2884.05 1483.49 2905.57 1516.52 2937.06 1533.06 cv
2937.32 1534.87 2937.65 1536.58 2938.04 1538.2 cv
.729412 .827451 .972549 rgb
f
2949.39 1542.89 mo
2945.49 1541.55 2941.71 1539.98 2938.04 1538.2 cv
2937.65 1536.58 2937.32 1534.87 2937.06 1533.06 cv
2943.17 1536.27 2949.66 1538.86 2956.44 1540.74 cv
2954.29 1541.72 2951.94 1542.47 2949.39 1542.89 cv
.717647 .670588 .784314 rgb
f
2890.47 1410.48 mo
2888.24 1404.93 li
2896.12 1386.65 2909.14 1371.08 2925.48 1360.07 cv
2926.22 1361.23 2926.96 1362.4 2927.69 1363.58 cv
2910.91 1374.92 2897.77 1391.28 2890.47 1410.48 cv
.435294 .717647 .819608 rgb
f
2974.03 1548.1 mo
2965.48 1547.37 2957.22 1545.59 2949.39 1542.89 cv
2951.94 1542.47 2954.29 1541.72 2956.44 1540.74 cv
2962.09 1542.31 2967.93 1543.39 2973.93 1543.93 cv
2974.09 1545.37 2974.13 1546.77 2974.03 1548.1 cv
.709804 .592157 .690196 rgb
f
2985.07 1450.7 mo
2983.24 1450.7 2981.47 1449.73 2980.52 1448.01 cv
2840.96 1194.03 li
2839.62 1191.59 2838.92 1188.85 2838.92 1186.07 cv
2838.92 1169.6 li
2838.92 1166.37 2838.18 1163.04 2837.24 1162.51 cv
2836.31 1161.98 2832.38 1162.66 2829.61 1164.33 cv
2805.31 1178.91 li
2802.85 1180.39 2799.67 1179.59 2798.2 1177.14 cv
2796.72 1174.68 2797.52 1171.5 2799.98 1170.03 cv
2824.28 1155.45 li
2829.44 1152.34 2837.93 1151 2843.18 1153.97 cv
2848.43 1156.94 2849.28 1163.58 2849.28 1169.6 cv
2849.28 1186.07 li
2849.28 1187.11 2849.55 1188.13 2850.04 1189.03 cv
2989.61 1443.02 li
2990.99 1445.53 2990.07 1448.68 2987.56 1450.06 cv
2986.77 1450.49 2985.92 1450.7 2985.07 1450.7 cv
cp
.717647 .341176 .258824 rgb
f
2740.78 1061.57 mo
2737.51 1054.74 2728.9 1022.19 2728.9 1022.19 cv
2674.84 1025.63 li
2674.84 1025.63 2700.46 1081.88 2705.78 1092.82 cv
2720.73 1106.23 2781.4 1147.09 2787.06 1151.65 cv
2789.57 1153.68 2793.73 1157.42 2795.63 1160.79 cv
2799.84 1168.29 2801.09 1171.89 2805 1179.23 cv
2809.45 1187.59 2835.68 1174.67 2835.68 1167.3 cv
2835.68 1162.23 2825.38 1153.95 2817.21 1147.22 cv
2813.52 1144.18 2743.72 1067.71 2740.78 1061.57 cv
cp
.968627 .643137 .568627 rgb
f
2694.35 928.301 mo
2680.69 932.719 2671.43 942.445 2675.29 982.502 cv
2679.16 1022.56 2688.18 1052.3 2688.18 1052.3 cv
2688.18 1052.3 2727.46 1058.43 2750.62 1042.73 cv
2750.62 1042.73 2741.34 913.109 2694.35 928.301 cv
cp
.717647 .341176 .258824 rgb
f
2569.19 1329.43 mo
2505.17 1329.43 2453.1 1381.51 2453.1 1445.52 cv
2453.1 1509.53 2505.17 1561.61 2569.19 1561.61 cv
2633.2 1561.61 2685.28 1509.53 2685.28 1445.52 cv
2685.28 1381.51 2633.2 1329.43 2569.19 1329.43 cv
cp
2569.19 1578.19 mo
2496.03 1578.19 2436.51 1518.67 2436.51 1445.52 cv
2436.51 1372.36 2496.03 1312.84 2569.19 1312.84 cv
2642.34 1312.84 2701.86 1372.36 2701.86 1445.52 cv
2701.86 1518.67 2642.34 1578.19 2569.19 1578.19 cv
cp
.207843 .32549 .537255 rgb
f
2569.19 1346.7 mo
2514.7 1346.7 2470.37 1391.03 2470.37 1445.52 cv
2470.37 1500 2514.7 1544.33 2569.19 1544.33 cv
2623.67 1544.33 2668 1500 2668 1445.52 cv
2668 1391.03 2623.67 1346.7 2569.19 1346.7 cv
cp
2569.19 1548.48 mo
2512.42 1548.48 2466.23 1502.29 2466.23 1445.52 cv
2466.23 1388.75 2512.42 1342.56 2569.19 1342.56 cv
2625.96 1342.56 2672.15 1388.75 2672.15 1445.52 cv
2672.15 1502.29 2625.96 1548.48 2569.19 1548.48 cv
cp
.52549 .694118 .94902 rgb
f
2569.19 1535.54 mo
2519.55 1535.54 2479.16 1495.16 2479.16 1445.52 cv
2479.16 1431.02 2482.5 1417.18 2489.09 1404.38 cv
2489.61 1403.36 2490.86 1402.96 2491.88 1403.49 cv
2492.9 1404.01 2493.3 1405.26 2492.78 1406.28 cv
2486.49 1418.49 2483.31 1431.69 2483.31 1445.52 cv
2483.31 1492.87 2521.83 1531.4 2569.19 1531.4 cv
2581.64 1531.4 2593.65 1528.79 2604.88 1523.65 cv
2605.93 1523.17 2607.16 1523.63 2607.63 1524.67 cv
2608.11 1525.71 2607.65 1526.94 2606.61 1527.42 cv
2594.83 1532.81 2582.24 1535.54 2569.19 1535.54 cv
cp
f
2633.38 1387.47 mo
2632.83 1387.47 2632.28 1387.25 2631.87 1386.82 cv
2615.69 1369.55 2592.84 1359.64 2569.19 1359.64 cv
2568.04 1359.64 2567.11 1358.71 2567.11 1357.57 cv
2567.11 1356.42 2568.04 1355.49 2569.19 1355.49 cv
2593.99 1355.49 2617.93 1365.88 2634.9 1383.98 cv
2635.68 1384.82 2635.63 1386.13 2634.8 1386.91 cv
2634.4 1387.29 2633.89 1387.47 2633.38 1387.47 cv
cp
f
2661.94 1342.07 mo
2660.52 1342.07 2659.09 1341.58 2657.92 1340.6 cv
2633.18 1319.64 2601.66 1308.11 2569.19 1308.11 cv
2541.78 1308.11 2515.33 1316.15 2492.67 1331.36 cv
2489.82 1333.28 2485.96 1332.52 2484.04 1329.67 cv
2482.13 1326.82 2482.89 1322.95 2485.74 1321.04 cv
2510.45 1304.44 2539.31 1295.67 2569.19 1295.67 cv
2604.6 1295.67 2638.97 1308.25 2665.96 1331.1 cv
2668.58 1333.32 2668.91 1337.25 2666.69 1339.87 cv
2665.46 1341.32 2663.7 1342.07 2661.94 1342.07 cv
cp
.956863 .454902 .345098 rgb
f
2569.18 1431.7 mo
2568.34 1431.7 2567.63 1431.03 2567.59 1430.17 cv
2567.55 1429.29 2568.23 1428.54 2569.11 1428.5 cv
2751.78 1420.04 li
2752.63 1419.99 2753.41 1420.68 2753.45 1421.56 cv
2753.49 1422.44 2752.81 1423.19 2751.93 1423.23 cv
2569.26 1431.7 li
2569.18 1431.7 li
cp
.094118 .27451 .333333 rgb
f
2754.44 1471 mo
2754.37 1470.99 li
2569.11 1462.53 li
2568.23 1462.49 2567.55 1461.75 2567.59 1460.86 cv
2567.63 1459.98 2568.4 1459.27 2569.26 1459.34 cv
2754.52 1467.8 li
2755.4 1467.84 2756.08 1468.59 2756.04 1469.47 cv
2756 1470.33 2755.29 1471 2754.44 1471 cv
cp
f
2722.08 1445.52 mo
2722.08 1461.96 2735.41 1475.29 2751.85 1475.29 cv
2768.3 1475.29 2781.63 1461.96 2781.63 1445.52 cv
2781.63 1429.07 2768.3 1415.74 2751.85 1415.74 cv
2735.41 1415.74 2722.08 1429.07 2722.08 1445.52 cv
cp
.52549 .694118 .94902 rgb
f
2794.35 1518.33 mo
2793.66 1518.33 2792.98 1517.98 2792.58 1517.35 cv
2750.09 1448.68 li
2749.49 1447.71 2749.79 1446.43 2750.76 1445.83 cv
2751.74 1445.22 2753.01 1445.53 2753.61 1446.5 cv
2796.11 1515.17 li
2796.71 1516.14 2796.41 1517.42 2795.44 1518.02 cv
2795.1 1518.23 2794.72 1518.33 2794.35 1518.33 cv
cp
f
2771.54 1523.77 mo
2769.52 1523.77 2767.75 1522.29 2767.44 1520.23 cv
2767.11 1517.97 2768.67 1515.86 2770.94 1515.53 cv
2816.55 1508.79 li
2818.81 1508.45 2820.92 1510.02 2821.25 1512.29 cv
2821.59 1514.55 2820.02 1516.66 2817.76 1516.99 cv
2772.15 1523.73 li
2771.95 1523.76 2771.74 1523.77 2771.54 1523.77 cv
cp
.094118 .27451 .333333 rgb
f
2602.08 1223.19 mo
2642.51 1223.19 li
2645.51 1223.19 2647.94 1225.62 2647.94 1228.62 cv
2647.94 1235.12 li
2647.94 1238.12 2645.51 1240.55 2642.51 1240.55 cv
2591.46 1240.55 li
2587.48 1240.55 2584.76 1236.36 2586.53 1232.8 cv
2589.38 1227.1 2595.27 1223.19 2602.08 1223.19 cv
cp
f
2569.19 1467.66 mo
2556.98 1467.66 2547.05 1457.72 2547.05 1445.52 cv
2547.05 1433.31 2556.98 1423.38 2569.19 1423.38 cv
2581.39 1423.38 2591.33 1433.31 2591.33 1445.52 cv
2591.33 1457.72 2581.39 1467.66 2569.19 1467.66 cv
cp
f
2550.25 1445.52 mo
2550.25 1455.98 2558.73 1464.46 2569.19 1464.46 cv
2579.65 1464.46 2588.13 1455.98 2588.13 1445.52 cv
2588.13 1435.06 2579.65 1426.58 2569.19 1426.58 cv
2558.73 1426.58 2550.25 1435.06 2550.25 1445.52 cv
cp
.27451 .431373 .713726 rgb
f
2574.54 1445.52 mo
2574.54 1448.48 2572.15 1450.88 2569.19 1450.88 cv
2566.23 1450.88 2563.83 1448.48 2563.83 1445.52 cv
2563.83 1442.56 2566.23 1440.16 2569.19 1440.16 cv
2572.15 1440.16 2574.54 1442.56 2574.54 1445.52 cv
cp
.356863 .811765 .968627 rgb
f
2963.92 1445.52 mo
2963.92 1455.98 2972.41 1464.46 2982.87 1464.46 cv
2993.33 1464.46 3001.81 1455.98 3001.81 1445.52 cv
3001.81 1435.06 2993.33 1426.58 2982.87 1426.58 cv
2972.41 1426.58 2963.92 1435.06 2963.92 1445.52 cv
cp
.27451 .431373 .713726 rgb
f
2988.22 1445.52 mo
2988.22 1448.48 2985.82 1450.88 2982.87 1450.88 cv
2979.91 1450.88 2977.51 1448.48 2977.51 1445.52 cv
2977.51 1442.56 2979.91 1440.16 2982.87 1440.16 cv
2985.82 1440.16 2988.22 1442.56 2988.22 1445.52 cv
cp
.356863 .811765 .968627 rgb
f
2832.97 1152.59 mo
2832.97 1152.59 2827.27 1146.34 2818.44 1147.04 cv
2809.61 1147.74 2813.91 1154.62 2813.91 1154.93 cv
2813.91 1155.25 2828.91 1162.43 2828.91 1162.43 cv
2828.91 1162.43 2826.09 1155.12 2828.13 1153.92 cv
2830.14 1152.72 2832.97 1152.59 2832.97 1152.59 cv
cp
.968627 .643137 .568627 rgb
f
2715.4 1512.96 mo
2713.83 1540.64 li
2713.25 1544.14 2710.99 1552.81 2710.99 1556 cv
2710.99 1567.98 2764.28 1545.83 2752.34 1540.52 cv
2751.26 1540.04 2745.59 1536.41 2745.24 1532.33 cv
2744.69 1526.05 2743.3 1513.34 2743.3 1513.34 cv
2715.4 1512.96 li
cp
f
2752.21 1540.41 mo
2752.21 1540.41 2739.7 1544.07 2733.29 1544.99 cv
2726.88 1545.9 2718.43 1538.19 2713.9 1540.28 cv
2708.91 1542.57 2709.41 1565.15 2709.41 1565.15 cv
2709.41 1565.15 2776.2 1569.08 2795.07 1563.01 cv
2802.54 1560.6 2777.79 1548.94 2752.21 1540.41 cv
cp
.094118 .27451 .333333 rgb
f
2597.99 1515.61 mo
2596.42 1543.29 li
2595.84 1546.79 2593.58 1555.46 2593.58 1558.65 cv
2593.58 1570.63 2646.87 1548.48 2634.93 1543.17 cv
2633.85 1542.69 2626.5 1536.35 2626.15 1532.27 cv
2625.6 1525.99 2625.89 1515.99 2625.89 1515.99 cv
2597.99 1515.61 li
cp
.968627 .643137 .568627 rgb
f
2634.79 1543.06 mo
2634.79 1543.06 2622.28 1546.72 2615.88 1547.64 cv
2609.47 1548.55 2601.02 1540.84 2596.49 1542.93 cv
2591.5 1545.22 2591.3 1565.86 2591.3 1565.86 cv
2591.3 1565.86 2662.7 1571.04 2679.49 1566.18 cv
2687.03 1563.99 2660.37 1551.59 2634.79 1543.06 cv
cp
.094118 .27451 .333333 rgb
f
2682.44 1116.84 mo
2692.34 1131.88 li
2752.37 1352.89 li
2750.45 1522.57 li
2712.45 1523.45 li
2712.45 1523.45 2694.78 1375.03 2694.78 1363.53 cv
2694.78 1352.03 2612.93 1162.24 2612.93 1162.24 cv
2682.44 1116.84 li
cp
.207843 .32549 .537255 rgb
f
2680.85 1131.19 mo
2680.85 1131.19 2648.45 1303.68 2648.45 1333.07 cv
2648.45 1362.47 2634.99 1526.99 2634.99 1526.99 cv
2596.91 1526.77 li
2596.91 1526.77 2594.16 1476.62 2590.08 1402.85 cv
2589.44 1391.29 2590.9 1367.98 2590.08 1356.02 cv
2584.16 1269.99 2572.44 1208.28 2578.03 1176.18 cv
2578.93 1171.01 2592.22 1136.84 2595.52 1133.43 cv
2620.46 1107.63 2680.85 1131.19 2680.85 1131.19 cv
cp
.27451 .431373 .713726 rgb
f
2683.75 896.403 mo
2683.75 896.403 2677.65 885.621 2672.34 880.309 cv
2667.02 874.996 2659.84 859.839 2662.02 842.338 cv
2664.21 824.837 2677.65 817.962 2685 815.93 cv
2692.34 813.899 2719.89 814.003 2729.11 818.535 cv
2738.33 823.066 2733.59 858.12 2733.59 858.12 cv
2718.9 885.152 li
2683.75 896.403 li
cp
.207843 .32549 .537255 rgb
f
2718.47 930.486 mo
2719.1 931.114 2736.61 969.376 2733.28 996.877 cv
2727.19 1047.13 2701.57 1129.1 2692.34 1131.88 cv
2618.38 1154.18 2591.29 1137.51 2591.29 1137.51 cv
2591.29 1137.51 2620.61 984.967 2637.54 950.417 cv
2644.59 936.042 2653.21 923.797 2669.52 921.248 cv
2673.25 920.666 2704.1 916.11 2718.47 930.486 cv
cp
.956863 .454902 .345098 rgb
f
2715.15 901.56 mo
2718.43 931.718 li
2718.43 931.718 2719.2 940.126 2715 943.453 cv
2707.78 949.177 2680.85 920.259 2680.85 920.259 cv
2683.8 872.812 li
2715.15 901.56 li
cp
.968627 .643137 .568627 rgb
f
2682.91 887.082 mo
2689.57 906.348 2707.3 915.606 2716.83 917.02 cv
2715.15 901.56 li
2683.8 872.812 li
2682.91 887.082 li
cp
.956863 .454902 .345098 rgb
f
2698.57 825.001 mo
2712.61 819.372 2728.31 828.106 2731.22 842.726 cv
2732.49 849.081 2733.75 857.088 2734.34 865.882 cv
2735.78 887.032 2725.85 908.179 2716.24 908.657 cv
2706.62 909.135 2679.38 896.753 2676.92 866.748 cv
2675.4 848.223 2683.83 830.908 2698.57 825.001 cv
cp
.968627 .643137 .568627 rgb
f
2684.12 868.772 mo
2684.35 873.441 2681.44 877.381 2677.63 877.571 cv
2673.81 877.761 2670.52 874.129 2670.29 869.459 cv
2670.06 864.79 2672.97 860.851 2676.78 860.661 cv
2680.6 860.471 2683.89 864.102 2684.12 868.772 cv
cp
f
2676.78 860.661 mo
2676.78 860.661 2674.68 850.62 2675.62 840.932 cv
2676.56 831.243 2684.58 817.649 2694.42 815.618 cv
2704.27 813.586 2727.22 817.336 2730.19 811.086 cv
2733.16 804.836 2733.16 805.461 2734.18 804.484 cv
2736.49 802.26 2750.26 811.503 2749.63 827.91 cv
2749.01 844.317 2734.53 843.744 2731.72 844.213 cv
2728.9 844.682 2703.28 833.9 2695.46 834.369 cv
2687.65 834.837 2676.78 860.661 2676.78 860.661 cv
cp
.207843 .32549 .537255 rgb
f
2552.23 749.628 mo
2550.51 763.087 2548.39 762.233 2548.22 763.965 cv
2548.01 766.014 2560.32 790.712 2560.32 790.712 cv
2560.32 790.712 2596.12 863.74 2598.19 867.617 cv
2661.88 921.324 li
2645.37 960.99 li
2645.37 960.99 2577.58 900.689 2574.56 896.909 cv
2571.54 893.126 2534.26 788.784 2530.69 779.702 cv
2530.69 779.702 2522.56 770.427 2517.64 764.433 cv
2512.72 758.438 2510.62 750.542 2509.49 748.64 cv
2509.32 748.359 2505.9 741.801 2503.76 732.605 cv
2501.91 724.68 2507.18 731.382 2507.18 731.382 cv
2507.18 731.382 2513.16 745.474 2514.15 744.815 cv
2514.91 744.306 2511.21 736.802 2509.08 728.053 cv
2508.54 725.804 2508 723.582 2507.53 721.537 cv
2506.29 716.169 2509.13 713.9 2511.3 719.318 cv
2512.06 721.231 2513.26 724.439 2513.8 726.846 cv
2514.38 729.446 2515.73 731.653 2516.55 733.767 cv
2518.16 737.962 2519.29 741.042 2519.42 740.881 cv
2519.59 740.673 2520.48 741.281 2519.97 738.876 cv
2519.36 735.984 2516.74 730.117 2516.16 725.797 cv
2515.83 723.349 2514.84 718.269 2514.84 718.269 cv
2514.84 718.269 2514.74 710.324 2515.19 710.169 cv
2517.62 709.326 2519.18 714.752 2519.21 718.134 cv
2520.3 720.294 2521.2 725.666 2521.2 725.666 cv
2521.2 725.666 2525.37 736.148 2526.82 735.583 cv
2527.43 735.344 2525.61 728.612 2524.84 721.738 cv
2524.12 715.357 2524.4 708.804 2525.6 708.483 cv
2527.65 707.94 2529.18 714.95 2529.18 714.95 cv
2529.18 714.95 2530 719.915 2530.4 721.544 cv
2530.86 723.455 2532.67 729.072 2532.67 729.072 cv
2532.67 729.072 2539.86 748.338 2541.18 747.684 cv
2542.5 747.03 2545.22 743.951 2545.17 742.604 cv
2545.13 741.258 2543.79 738.816 2543.74 737.47 cv
2543.7 736.124 2544.76 734.343 2546.37 734.184 cv
2547.97 734.024 2550.61 740.479 2550.61 740.479 cv
2550.61 740.479 2552.72 745.743 2552.23 749.628 cv
cp
.972549 .643137 .572549 rgb
f
2628.69 890.194 mo
2631.19 889.592 2698.36 930.643 2699.18 946.605 cv
2700.01 962.568 2676.99 987.93 2657.78 977.67 cv
2638.56 967.41 2599.34 926.17 2599.34 926.17 cv
2599.34 926.17 2620.59 892.144 2628.69 890.194 cv
cp
.72549 .282353 .219608 rgb
f
1344.36 1554.49 mo
1358.42 1588.36 li
1359.03 1592.1 1361.43 1601.34 1361.43 1604.74 cv
1361.43 1617.52 1305 1593.9 1317.65 1588.24 cv
1318.79 1587.73 1322.38 1583.63 1322.76 1579.29 cv
1323.34 1572.59 1318.01 1564.19 1318.01 1564.19 cv
1344.36 1554.49 li
cp
.968627 .643137 .568627 rgb
f
1364.64 1608.96 mo
1364.64 1608.96 1363.32 1589.81 1358.58 1587.55 cv
1354.13 1585.44 1346.08 1593.98 1339.8 1593 cv
1333.51 1592.03 1319.35 1586.74 1319.35 1586.74 cv
1294.27 1595.84 1275.61 1601.63 1279.35 1608.96 cv
1364.64 1608.96 li
cp
.094118 .27451 .333333 rgb
f
1257.96 1564.69 mo
1266.15 1588.36 li
1266.76 1592.1 1269.16 1601.34 1269.16 1604.74 cv
1269.16 1617.52 1212.73 1593.9 1225.38 1588.24 cv
1226.52 1587.73 1230.11 1583.63 1230.49 1579.29 cv
1231.07 1572.59 1225.73 1564.19 1225.73 1564.19 cv
1257.96 1564.69 li
cp
.968627 .643137 .568627 rgb
f
1180.09 1116.49 mo
1159.66 1169.78 li
1159.66 1169.78 1146.33 1296.94 1154.09 1373.06 cv
1157.34 1404.9 1227.61 1575.32 1227.61 1575.32 cv
1262.51 1570.3 li
1226.29 1370.66 li
1232.96 1291.31 li
1257.31 1138.76 li
1180.09 1116.49 li
cp
.207843 .32549 .537255 rgb
f
1204.57 1122.8 mo
1192.06 1178.48 li
1192.06 1178.48 1197.25 1306.24 1215.94 1380.44 cv
1223.75 1411.47 1317.91 1569.95 1317.91 1569.95 cv
1351.72 1559.93 li
1287.03 1367.62 li
1293.07 1178.12 li
1284.2 1133.68 li
1204.57 1122.8 li
cp
.27451 .431373 .713726 rgb
f
1272.37 1608.96 mo
1272.37 1608.96 1271.01 1589.98 1265.95 1587.7 cv
1261.15 1585.54 1252.33 1593.98 1245.55 1593 cv
1238.76 1592.03 1225.52 1588.12 1225.52 1588.12 cv
1198.43 1597.22 1176.25 1601.63 1180.28 1608.96 cv
1272.37 1608.96 li
cp
.094118 .27451 .333333 rgb
f
1164.94 674.164 mo
1157.15 685.354 1155.56 683.581 1154.61 685.043 cv
1153.47 686.772 1153.61 714.681 1153.61 714.681 cv
1153.61 714.681 1153.46 796.922 1153.61 801.367 cv
1188.39 879.675 li
1154.74 907.189 li
1154.74 907.189 1119.15 821.038 1118.07 816.224 cv
1116.99 811.41 1130.15 700.522 1130.99 690.717 cv
1130.99 690.717 1127.67 678.563 1125.83 670.867 cv
1123.99 663.173 1125.66 655.125 1125.48 652.886 cv
1125.45 652.556 1125.27 645.071 1127.5 635.845 cv
1129.42 627.895 1131.26 636.388 1131.26 636.388 cv
1131.26 636.388 1130.36 651.812 1131.59 651.698 cv
1132.54 651.609 1132.53 643.147 1134.57 634.326 cv
1135.09 632.058 1135.62 629.822 1136.12 627.771 cv
1137.42 622.39 1141.12 621.721 1140.65 627.589 cv
1140.49 629.661 1140.13 633.095 1139.53 635.5 cv
1138.88 638.098 1139.12 640.711 1138.91 642.985 cv
1138.49 647.5 1138.13 650.785 1138.32 650.704 cv
1138.58 650.6 1139.13 651.566 1139.76 649.178 cv
1140.52 646.306 1140.77 639.821 1142.22 635.69 cv
1143.03 633.349 1144.45 628.345 1144.45 628.345 cv
1144.45 628.345 1147.63 620.497 1148.12 620.573 cv
1150.78 620.983 1150.12 627.279 1148.59 630.308 cv
1148.61 632.756 1146.98 637.976 1146.98 637.976 cv
1146.98 637.976 1146.06 649.321 1147.67 649.506 cv
1148.99 649.66 1156.45 623.015 1159.09 623.616 cv
1161.25 624.107 1159.37 632.228 1159.37 632.228 cv
1159.37 632.228 1157.85 637.049 1157.47 638.691 cv
1157.02 640.616 1156.13 646.492 1156.13 646.492 cv
1156.13 646.492 1153.98 667.11 1155.52 667.156 cv
1157.05 667.203 1161.01 665.753 1161.58 664.53 cv
1162.16 663.309 1162.03 660.49 1162.61 659.267 cv
1163.19 658.046 1165 656.965 1166.57 657.589 cv
1168.14 658.212 1167.64 665.231 1167.64 665.231 cv
1167.64 665.231 1167.19 670.935 1164.94 674.164 cv
cp
.956863 .54902 .498039 rgb
f
1180.99 851.739 mo
1133.64 880.943 li
1133.64 880.943 1151.7 924.549 1163.96 940.169 cv
1178.84 959.119 1205.99 967.943 1207.82 965.658 cv
1212.95 959.243 1223.12 951.375 1222.61 940.339 cv
1220.84 902.148 1180.99 851.739 1180.99 851.739 cv
cp
.235294 .560784 .486275 rgb
f
1144.89 679.44 mo
1146.55 673.53 1149.9 669.364 1155.52 667.156 cv
1148.6 666.683 1143.9 673.586 1144.89 679.44 cv
cp
.956863 .454902 .345098 rgb
f
1269.99 901.715 mo
1269.99 901.715 1296.33 905.403 1303.26 910.529 cv
1311.06 916.302 1335.23 943.232 1335.23 943.232 cv
1335.23 943.232 1284.92 1088.38 1286.87 1114.2 cv
1288.82 1140.03 1294.34 1178.27 1294.34 1178.27 cv
1294.34 1178.27 1196.64 1184.49 1159.64 1169.78 cv
1159.64 1169.78 1171.32 1111.26 1171.32 1095.9 cv
1171.32 1080.53 1179.85 964.443 1183.5 952.606 cv
1186.23 943.716 1196.64 906.292 1214.49 902.369 cv
1232.34 898.446 1269.99 901.715 1269.99 901.715 cv
cp
.313726 .74902 .647059 rgb
f
1262.8 860.275 mo
1269.21 901.69 li
1269.21 901.69 1250.49 933.37 1236.28 928.932 cv
1224.36 925.208 1226.72 900.989 1226.72 900.989 cv
1226.72 900.989 1233.22 876.671 1231.27 864.502 cv
1229.32 852.333 1262.8 860.275 1262.8 860.275 cv
cp
.968627 .643137 .568627 rgb
f
1231.27 864.502 mo
1229.32 852.333 1262.8 860.275 1262.8 860.275 cv
1263.34 863.841 li
1262.36 866.225 1261.17 868.266 1259.71 869.831 cv
1252.23 877.883 1240.54 882.72 1230.44 883.086 cv
1231.45 876.524 1232.07 869.492 1231.27 864.502 cv
cp
.956863 .454902 .345098 rgb
f
1268.3 799.47 mo
1269.24 799.126 1275.88 848.422 1263.28 861.985 cv
1250.68 875.549 1226.14 879.989 1217.33 869.306 cv
1207.59 857.49 1208.08 804.509 1227.67 790.556 cv
1247.26 776.603 1268.3 799.47 1268.3 799.47 cv
cp
.968627 .643137 .568627 rgb
f
1235.13 764.186 mo
1250.27 767.274 1260.08 776.531 1263.68 780.477 cv
1270.55 781.289 1279.9 785.09 1289.55 801.073 cv
1301.41 820.726 1292.65 842.499 1278.84 853.182 cv
1265.03 863.865 1265.29 876.335 1265.29 876.335 cv
1263.04 869.822 li
1261.42 864.986 1260.77 859.859 1261.31 854.788 cv
1261.63 851.745 1262.28 848.454 1263.54 845.749 cv
1266.86 838.615 1256.4 833.875 1253.47 827.939 cv
1251.22 823.369 1251.11 812.913 1247.55 805.358 cv
1243.3 799.591 li
1243.3 799.591 1233.5 791.961 1223.91 794.114 cv
1214.32 796.267 1215.7 760.223 1235.13 764.186 cv
cp
.0745098 .215686 .356863 rgb
f
1254.12 836.711 mo
1254.02 842.727 1256.75 847.65 1260.22 847.709 cv
1263.69 847.769 1266.59 842.941 1266.69 836.927 cv
1266.79 830.912 1264.05 825.988 1260.58 825.929 cv
1257.11 825.87 1254.22 830.697 1254.12 836.711 cv
cp
.968627 .643137 .568627 rgb
f
1367.91 995.259 mo
1323.87 1029.86 li
1323.87 1029.86 1304.43 1011.08 1294.66 990.306 cv
1284.77 969.277 1293.44 907.898 1303.96 910.75 cv
1327.5 917.129 1367.91 995.259 1367.91 995.259 cv
cp
.588235 .85098 .788235 rgb
f
1342.29 1053.37 mo
1390.79 1073.75 1406.41 1029.22 1405.19 1030.4 cv
1406.11 1029.39 1413.41 1026.14 1418.08 1023.8 cv
1437.52 1014.07 1449.27 991.442 1448.83 968.675 cv
1476.72 951.337 1483.98 914.621 1464.85 894.329 cv
1470.74 871.765 1455.21 846.996 1435.48 835.559 cv
1420.53 808.958 1382.83 820.342 1362.51 841.209 cv
1352.21 851.788 1346.25 867.288 1346.41 882.739 cv
1322.5 892.846 1309.99 919.765 1315.43 946.917 cv
1283.17 974.037 1292.79 1032.58 1342.29 1053.37 cv
cp
.207843 .32549 .537255 rgb
f
1519.52 1198.55 mo
1527.81 1196.42 li
1527.65 1195.78 1511.92 1131.97 1495.16 1068.46 cv
1485.3 1031.14 1477.03 1001.21 1470.55 979.513 cv
1457.79 936.74 1454.95 935.551 1452.44 934.502 cv
1449.2 942.581 li
1448.59 942.326 1448.3 941.989 1448.29 941.986 cv
1450.33 944.341 1458.28 961.974 1487.93 1074.58 cv
1504.28 1136.71 1519.37 1197.94 1519.52 1198.55 cv
cp
.717647 .341176 .258824 rgb
f
1239.62 1196.7 mo
1239.62 1196.7 1243.35 1193.72 1244.51 1192.64 cv
1245.87 1191.37 1249.66 1187.24 1249.66 1187.24 cv
1249.66 1187.24 1262.18 1172.25 1261 1171.41 cv
1259.82 1170.57 1256.24 1171.94 1255.15 1172.59 cv
1254.05 1173.25 1252.71 1173.91 1251.61 1174.56 cv
1250.51 1175.21 1249.12 1174.93 1248.22 1173.62 cv
1247.31 1172.31 1251.12 1168.76 1252.68 1167.79 cv
1257.54 1164.78 1272.15 1159.36 1273.67 1158.72 cv
1275.47 1157.96 1292.43 1127.94 1299.05 1118.12 cv
1299.04 1118.12 li
1309.41 1101.72 1319.24 1084.34 1320.33 1082.6 cv
1342.63 1002.5 li
1375.08 999.281 li
1375.08 999.281 1351.57 1088.52 1349.89 1092.84 cv
1349.09 1094.9 1322.13 1131.05 1322.12 1131.04 cv
1307.73 1148 1295 1162.9 1292.64 1165.84 cv
1292.64 1165.84 1287.92 1176.52 1285.32 1183.49 cv
1282.72 1190.47 1277.53 1195.84 1276.49 1197.69 cv
1276.34 1197.96 1273.14 1204.52 1266.54 1210.56 cv
1260.85 1215.77 1263.87 1208.17 1263.87 1208.17 cv
1263.87 1208.17 1272.68 1196.58 1271.66 1196.03 cv
1270.87 1195.6 1266.42 1202.22 1260.19 1208.05 cv
1258.58 1209.54 1257 1211.02 1255.53 1212.36 cv
1251.67 1215.88 1248.42 1214.47 1251.87 1210.13 cv
1253.09 1208.59 1255.17 1206.1 1256.91 1204.53 cv
1258.79 1202.84 1259.97 1200.67 1261.33 1199 cv
1264.03 1195.69 1266.05 1193.32 1265.85 1193.28 cv
1265.6 1193.22 1265.67 1192.18 1263.92 1193.72 cv
1261.82 1195.56 1258.21 1200.5 1254.9 1202.97 cv
1253.03 1204.38 1249.29 1207.55 1249.29 1207.55 cv
1249.29 1207.55 1242.67 1212.02 1242.32 1211.7 cv
1240.45 1209.99 1244.28 1205.41 1247.07 1203.85 cv
1248.34 1201.92 1252.37 1198.69 1252.37 1198.69 cv
1252.37 1198.69 1259.05 1190.31 1257.89 1189.32 cv
1256.93 1188.51 1237.07 1205.43 1235.31 1203.58 cv
1233.88 1202.06 1239.62 1196.7 1239.62 1196.7 cv
cp
.968627 .643137 .568627 rgb
f
1275.3 1172.88 mo
1275.3 1172.88 1265.33 1176.68 1261.13 1171.54 cv
1261.13 1171.54 1262.4 1175.36 1266.41 1176.06 cv
1270.43 1176.76 1275.3 1172.88 1275.3 1172.88 cv
cp
.956863 .454902 .345098 rgb
f
1414.29 1219.36 mo
1395.91 1389.3 li
1395.91 1389.3 1404.9 1425.24 1403.81 1435.45 cv
1402.73 1445.65 1383.84 1579.59 1383.84 1579.59 cv
1384.69 1586.94 li
1385.15 1608.73 li
1314.52 1609.28 li
1314.52 1609.28 1329.41 1602.39 1350.23 1588.75 cv
1351.77 1587.74 1355.32 1584.53 1356.18 1578.12 cv
1361.74 1536.84 1350.74 1399.14 1350.74 1399.14 cv
1342.08 1219.91 li
1414.29 1219.36 li
cp
.968627 .643137 .568627 rgb
f
1454.48 1251.56 mo
1458.44 1252.59 1464.53 1398.45 1467.81 1404.91 cv
1488.61 1445.89 1493.55 1570.49 1493.55 1570.49 cv
1502.13 1587.94 li
1500.16 1604.75 li
1500.16 1604.75 1484.64 1613.95 1473.75 1607.74 cv
1475.44 1590.91 li
1476.72 1568.42 li
1424.26 1413.19 li
1395.55 1254.85 li
1454.48 1251.56 li
cp
f
1320.05 1330.61 mo
1317.55 1229.98 li
1317.12 1201.54 1326.28 1174.25 1337.53 1148.35 cv
1361.34 1106.91 li
1369.01 1109.43 1373.23 1085.96 1381.29 1086.89 cv
1387.37 1087.6 1391.53 1089.05 1397.18 1089.4 cv
1407.81 1090.05 1414.27 1111.55 1425.66 1110.2 cv
1425.72 1110.89 1432.79 1113.6 1432.96 1114.08 cv
1438.41 1129.29 1452.32 1145.56 1459.74 1190.72 cv
1468.17 1241.98 1468.13 1330.08 1467.08 1336.1 cv
1386.51 1339.77 1367.31 1342.69 1320.05 1330.61 cv
cp
.0941176 .27451 .333333 rgb
f
1385.49 1614.34 mo
1312.58 1614.34 li
1309.88 1614.08 1309.23 1611.8 1310.16 1610.4 cv
1312.08 1607.5 1320.59 1605.38 1330.15 1600.77 cv
1346.92 1602.6 1382.01 1589.83 1384.65 1585.81 cv
1386.18 1593.87 1386.99 1613.99 1385.49 1614.34 cv
cp
f
1502.09 1587.89 mo
1502.09 1587.89 1495.61 1606.92 1488.61 1606.37 cv
1481.61 1605.82 1475.48 1590.82 1475.48 1590.82 cv
1475.48 1590.82 1472.85 1603.44 1474.08 1610.4 cv
1475.31 1617.35 1485.28 1624.49 1492.11 1621.38 cv
1498.94 1618.27 1508.21 1602.16 1502.09 1587.89 cv
cp
f
1366.56 1041.79 mo
1366.56 1041.79 1356.4 1040.49 1346.67 1036.98 cv
1340.83 1034.88 1331.11 1030.27 1331.11 1030.27 cv
1331.11 1030.27 1336.57 982.858 1350.31 954.149 cv
1355.99 942.284 1361.73 936.558 1369.74 935.186 cv
1366.56 1041.79 li
cp
.717647 .341176 .258824 rgb
f
1348.91 988.142 mo
1350.97 980.451 1355.57 970.337 1358.19 963.363 cv
1362.64 951.521 1363.97 940.459 1367.9 935.718 cv
1370.02 933.169 1397.22 933.548 1400.56 933.211 cv
1401.94 933.063 1407.38 933.421 1412.65 933.751 cv
1412.64 933.737 li
1415.72 934.096 1446.37 936.569 1450.82 938.542 cv
1472.9 960.67 1483.58 990.464 1500.18 1023.01 cv
1500.18 1023.01 1487.75 1030.33 1477.83 1034.94 cv
1473.53 1036.94 1465.27 1040.14 1465.27 1040.14 cv
1446.14 1007.19 li
1445.93 1007.03 1444.93 1005.94 1444.65 1006.64 cv
1444.21 1007.74 1430.23 1110.44 1430.23 1110.44 cv
1430.23 1110.44 1373.59 1115.2 1360.29 1108.67 cv
1360.29 1108.67 1357.83 1040.1 1352.94 1019.98 cv
1351.13 1012.58 1345.59 1000.53 1348.91 988.142 cv
cp
.956863 .454902 .345098 rgb
f
1416.37 902.23 mo
1416.37 902.23 1412.13 926.147 1412.98 935.581 cv
1413.83 945.015 1409.74 975.42 1391.39 975.52 cv
1373.05 975.62 1385.51 943.952 1387.24 934.708 cv
1388.97 925.463 1391.77 889.757 1391.77 889.757 cv
1416.37 902.23 li
cp
.968627 .643137 .568627 rgb
f
1390.68 903.371 mo
1390.96 895.542 1391.77 889.757 1391.77 889.757 cv
1416.37 902.23 li
1416.37 902.23 1415.5 907.121 1414.63 913.352 cv
1403.86 915.708 1395.34 910.625 1390.68 903.371 cv
cp
.956863 .454902 .345098 rgb
f
1416.89 832.753 mo
1416.89 832.753 1427.23 836.524 1432.85 848.034 cv
1438.48 859.544 1440.33 891.766 1417.66 904.144 cv
1394.99 916.521 1380.03 893.692 1381.44 873.236 cv
1382.85 852.779 1389.13 825.978 1416.89 832.753 cv
cp
.968627 .643137 .568627 rgb
f
1377.06 866.288 mo
1378.48 871.424 1381.86 874.893 1384.61 874.037 cv
1387.35 873.182 1388.42 868.324 1387 863.188 cv
1385.57 858.053 1382.19 854.584 1379.45 855.439 cv
1376.71 856.295 1375.63 861.153 1377.06 866.288 cv
cp
f
1430.86 876.463 mo
1428.86 881.597 1429.86 886.986 1433.07 888.5 cv
1436.29 890.014 1440.51 887.08 1442.51 881.946 cv
1444.5 876.813 1443.51 871.424 1440.29 869.91 cv
1437.07 868.396 1432.85 871.33 1430.86 876.463 cv
cp
f
1437.74 1198.17 mo
1437.74 1230.8 li
1437.74 1247.77 1449.69 1261.52 1464.43 1261.52 cv
1491.88 1261.52 li
1491.88 1185.45 li
1448.79 1185.45 li
1445.84 1185.45 1443.16 1186.78 1441.18 1188.95 cv
1439.06 1191.26 1437.74 1194.54 1437.74 1198.17 cv
cp
.717647 .341176 .258824 rgb
f
1441.18 1188.95 mo
1441.36 1188.95 li
1447.03 1188.95 1451.62 1194.24 1451.62 1200.75 cv
1451.62 1224.76 li
1451.62 1245.06 1465.92 1261.52 1483.56 1261.52 cv
1500.27 1261.52 li
1517.91 1261.52 1532.2 1245.06 1532.2 1224.76 cv
1532.2 1200.87 li
1532.2 1192.35 1526.21 1185.45 1518.81 1185.45 cv
1448.79 1185.45 li
1445.84 1185.45 1443.16 1186.78 1441.18 1188.95 cv
cp
.956863 .454902 .345098 rgb
f
1437.66 1197.5 mo
1446.2 1197.46 li
1446.2 1196.86 1445.93 1136.3 1446.74 1074.55 cv
1447.22 1038.31 1447.97 1008.76 1448.97 986.726 cv
1450.68 949.076 1452.77 942.328 1453.37 941.229 cv
1453.47 939.2 1452.44 934.502 1452.44 934.502 cv
1450.92 933.866 1449.19 934.052 1447.82 935 cv
1445.62 936.519 1444.25 939.425 1442.9 951.099 cv
1442.06 958.327 1441.31 968.587 1440.67 981.594 cv
1439.58 1003.39 1438.78 1033.28 1438.26 1070.43 cv
1437.38 1133.64 1437.66 1196.87 1437.66 1197.5 cv
cp
.717647 .341176 .258824 rgb
f
1394.8 1139.51 mo
1393.71 1139.75 1386.19 1140.19 1386.19 1140.19 cv
1386.19 1140.19 1375.16 1133.51 1373.59 1136.67 cv
1373.1 1137.62 1385.01 1144.4 1385.01 1144.4 cv
1385.01 1144.4 1396.52 1144.78 1399.28 1144.7 cv
1404.4 1144.57 1415.18 1143.12 1431.2 1131.19 cv
1445.07 1124.11 1514.74 1083.47 1515.77 1075.73 cv
1516.38 1071.16 1505.77 1047.31 1495.5 1025.71 cv
1490.96 1028.24 1483.92 1032.1 1477.83 1034.94 cv
1474.96 1036.27 1470.31 1038.14 1467.56 1039.24 cv
1474.22 1052.09 1480.52 1065.32 1479.7 1068.06 cv
1478.99 1070.47 1419.48 1115.87 1419.48 1115.87 cv
1407.59 1114.25 li
1407.59 1114.25 1386.63 1116.74 1386.15 1119.24 cv
1385.65 1121.73 1394.99 1121.08 1396.23 1121.46 cv
1396.92 1121.67 1398.31 1122.15 1399.49 1122.93 cv
1396.04 1124.58 1390.58 1127.21 1387.51 1127.34 cv
1380.48 1127.59 1372.33 1126.56 1371.45 1127.57 cv
1370.42 1128.75 1381.11 1131.99 1388.65 1132.46 cv
1391.74 1132.62 1393.61 1131.68 1394.95 1131.93 cv
1396.78 1132.31 1393.56 1133.78 1388.42 1133.47 cv
1385.48 1133.28 1380.35 1131.66 1377.12 1131.19 cv
1371.8 1130.43 1368.82 1130.85 1368.38 1131.32 cv
1367.64 1132.08 1383.46 1137.15 1383.46 1137.15 cv
1383.46 1137.15 1393.75 1138.5 1396.1 1138.38 cv
1396.1 1138.38 1397.53 1138.97 1394.8 1139.51 cv
cp
.972549 .643137 .572549 rgb
f
2007.51 1592.59 mo
2006.51 1585.43 2008.76 1573.09 2014.37 1553.81 cv
2003.26 1553.83 1993.92 1548.91 1982.56 1549.08 cv
1979.46 1567.22 1974.65 1597.01 1974.65 1597.01 cv
1974.14 1620.55 li
2053.22 1621.15 li
2053.22 1621.15 2052.56 1621.49 2029.25 1606.76 cv
2027.52 1605.67 2008.48 1599.52 2007.51 1592.59 cv
cp
.968627 .643137 .568627 rgb
f
1973.76 1626.61 mo
2055.39 1626.61 li
2058.41 1626.33 2059.15 1623.87 2058.1 1622.35 cv
2055.94 1619.23 2040.02 1611.72 2029.32 1606.74 cv
2010.54 1608.71 1977.54 1600.99 1974.58 1596.64 cv
1969.43 1611.04 1972.08 1626.23 1973.76 1626.61 cv
cp
.313726 .74902 .647059 rgb
f
1909 1592.59 mo
1908 1585.43 1906.3 1576.45 1908.8 1552.55 cv
1897.69 1552.57 1887.11 1550.49 1875.75 1550.66 cv
1875.75 1569.32 1876.14 1597.01 1876.14 1597.01 cv
1875.63 1620.55 li
1954.71 1621.15 li
1954.71 1621.15 1954.05 1621.49 1930.74 1606.76 cv
1929.01 1605.67 1909.97 1599.52 1909 1592.59 cv
cp
.968627 .643137 .568627 rgb
f
1875.25 1626.61 mo
1956.88 1626.61 li
1959.9 1626.33 1960.64 1623.87 1959.59 1622.35 cv
1957.44 1619.23 1941.51 1611.72 1930.81 1606.74 cv
1912.04 1608.71 1879.03 1600.99 1876.07 1596.64 cv
1870.92 1611.04 1873.57 1626.23 1875.25 1626.61 cv
cp
.313726 .74902 .647059 rgb
f
1966.47 909.728 mo
1996.22 878.347 li
1996.22 878.347 2028.06 895.856 2065.17 912.586 cv
2075.38 894.828 2092.03 836.411 2092.92 833.624 cv
2093.82 830.828 2073.42 795.737 2077.98 794.857 cv
2082.55 793.978 2088.47 813.598 2093.3 811.609 cv
2098.12 809.621 2110.53 764.104 2113.43 766.588 cv
2118.86 771.236 2106.9 794.898 2109.77 796.622 cv
2112.63 798.346 2119.89 770.393 2125.42 771.585 cv
2130.96 772.777 2116.09 797.032 2117.72 799.364 cv
2119.35 801.695 2134.89 778.94 2138.1 784.211 cv
2139.84 787.073 2123.77 804.026 2127.07 805.922 cv
2130.38 807.819 2144.87 797.141 2146.6 800.601 cv
2148.33 804.06 2133.08 807.664 2128.84 816.418 cv
2124.61 825.171 2116.91 828.578 2114.36 845.128 cv
2111.81 861.663 2104.82 950.133 2086.79 957.235 cv
2071.04 963.438 1966.47 909.728 1966.47 909.728 cv
cp
.968627 .643137 .568627 rgb
f
1985.69 1078.99 mo
1961.57 1092.45 li
1912.54 1167.41 li
2000.22 1373.8 li
2000.22 1373.8 1990.35 1404.84 1987.13 1420.34 cv
1983.76 1436.57 1975.51 1575.82 1975.51 1575.82 cv
2012.92 1576.45 li
2012.92 1576.45 2048.45 1428.21 2054.47 1380.09 cv
2061.77 1321.66 2017.28 1182.51 2017.28 1182.51 cv
2008.98 1154.12 1991.1 1095.71 1991.1 1095.71 cv
1991.1 1095.71 1986.72 1081.48 1985.69 1078.99 cv
cp
.207843 .32549 .537255 rgb
f
1901.73 1050.83 mo
1901.73 1050.83 1904.23 1068.47 1894.25 1088.58 cv
1888.17 1100.85 1877.66 1110.46 1870.14 1125.48 cv
1855.91 1153.91 1848.18 1194.29 1853.52 1220.25 cv
1853.52 1220.25 1882.95 1332.64 1881.78 1373.71 cv
1881.35 1388.86 1876.15 1416.15 1872.83 1434.6 cv
1869.89 1450.91 1868.9 1573.93 1868.9 1573.93 cv
1910.67 1572.68 li
1942.66 1374.22 li
1956.18 1197.81 li
1985.69 1079 li
1901.73 1050.83 li
cp
.27451 .431373 .713726 rgb
f
1990.2 791.856 mo
1986.51 774.413 1982.69 756.906 1965.36 744.343 cv
1951.33 734.175 1936.26 731.27 1920.28 737.065 cv
1875.01 753.486 1899.36 789.416 1843.17 827.711 cv
1825.72 839.611 1819.09 843.76 1806.56 859.617 cv
1789.02 881.813 1779.44 911.595 1788.25 936.111 cv
1806.48 986.814 1862.97 1001.46 1892.52 990.713 cv
1947.53 970.703 1993.35 900.946 1996.4 881.911 cv
1999.65 861.539 1992.58 803.085 1990.2 791.856 cv
cp
.717647 .341176 .258824 rgb
f
1998.98 929.443 mo
2012.29 935.597 2036.4 944.835 2036.4 944.835 cv
2050.12 901.455 li
1972.59 857.356 1978.68 864.472 1920.49 865.338 cv
1874.01 866.001 1854.53 857.125 1814.5 965.182 cv
1814.5 965.182 1844.97 978.871 1855.88 983.265 cv
1860.57 969.908 1869.05 943.269 1874 958.456 cv
1881.47 981.399 1886.94 1004.56 1890.61 1028.41 cv
1892.94 1042.54 1898.01 1060.64 1895.34 1075.04 cv
1895.34 1075.04 1927 1081.56 1951.18 1082.62 cv
1951.39 1082.62 li
1963.07 1082.32 1975.04 1081.29 1985.69 1078.99 cv
1985.69 1078.99 1990.43 978.753 1992.97 974.57 cv
1995.77 969.938 2007.62 954.975 1997.54 932.596 cv
1995.76 928.64 1996.24 928.174 1998.98 929.443 cv
cp
.313726 .74902 .647059 rgb
f
1940.79 1103.43 mo
1941.33 1103.51 1943.8 1103.18 1945.82 1103.23 cv
1948.62 1103.28 1951.06 1103.71 1951.06 1103.71 cv
1951.06 1103.71 1952.16 1102.76 1954.25 1101.78 cv
1955.13 1101.38 1956.55 1101.24 1957.52 1100.79 cv
1958.52 1100.31 1959.37 1099.46 1960.31 1099.04 cv
1962.78 1097.97 1965.05 1097.72 1965.8 1099.02 cv
1966.42 1100.09 1952.68 1108.49 1952.68 1108.49 cv
1939.96 1108.57 1926.65 1115.05 1897.17 1095.82 cv
1880.33 1088.47 1798.59 1048.09 1796.94 1039.29 cv
1796.02 1034.35 1808.56 996.118 1818.81 967.09 cv
1826.72 970.631 1843.53 978.113 1852.93 982.053 cv
1844.3 1000.33 1834.12 1024.57 1835.2 1027.54 cv
1835.47 1028.31 1836.49 1029.71 1891.76 1065.9 cv
1893.15 1066.79 1894.58 1067.74 1896.02 1068.69 cv
1899.91 1071.23 1904.08 1073.95 1908.49 1076.82 cv
1924.25 1075.17 li
1924.25 1075.17 1949.22 1076.9 1949.96 1079.74 cv
1950.29 1081.04 1948.22 1081.68 1945.67 1082.06 cv
1945.6 1082.06 li
1945.23 1082.11 1944.85 1082.16 1944.48 1082.21 cv
1944.43 1082.21 li
1941.68 1082.53 1938.79 1082.58 1938.09 1082.83 cv
1937.3 1083.11 1935.7 1083.73 1934.33 1084.68 cv
1949.89 1091.04 1948.69 1088.77 1953.85 1088.44 cv
1955.15 1088.34 1956.52 1088.72 1957.75 1088.62 cv
1959.84 1088.44 1961.51 1087.2 1963.13 1087.1 cv
1965.5 1086.97 1967.42 1088.07 1967.84 1088.52 cv
1968.39 1089.07 1967.37 1089.86 1965.38 1090.76 cv
1953.36 1095.97 1943.41 1093.98 1940.21 1094.75 cv
1938.07 1095.28 1941.98 1096.07 1948.09 1095.42 cv
1949.61 1095.28 1951.61 1095.82 1953.63 1095.35 cv
1954.98 1095.05 1956.2 1094.18 1957.52 1093.85 cv
1958.74 1093.55 1959.99 1093.58 1961.01 1093.38 cv
1962.36 1093.13 1964.23 1092.11 1965.3 1091.98 cv
1969.29 1091.53 1971.24 1092.23 1971.69 1092.61 cv
1972.61 1093.43 1954.48 1100.39 1954.48 1100.39 cv
1954.48 1100.39 1941.98 1102.18 1939.19 1102.18 cv
1939.19 1102.18 1937.52 1102.93 1940.79 1103.43 cv
cp
.968627 .643137 .568627 rgb
f
1926.21 822.563 mo
1926.21 822.563 1922.67 851.186 1920.58 861.123 cv
1918.39 871.521 1915.1 904.266 1936.67 909.583 cv
1958.23 914.899 1951.56 873.954 1951.92 863.381 cv
1952.28 852.809 1958.39 815.942 1958.39 815.942 cv
1926.21 822.563 li
cp
f
1925.04 831.696 mo
1925.26 831.827 1925.47 831.969 1925.69 832.098 cv
1937.61 838.93 1947.98 837.851 1955.76 832.534 cv
1957.15 823.384 1958.39 815.942 1958.39 815.942 cv
1926.21 822.563 li
1926.21 822.563 1925.74 826.377 1925.04 831.696 cv
cp
.956863 .454902 .345098 rgb
f
1932.7 748.024 mo
1932.7 748.024 1920.06 751.577 1912.78 764.124 cv
1905.49 776.671 1901.86 812.706 1928.68 828.083 cv
1955.49 843.459 1974.53 818.823 1973.72 795.775 cv
1972.91 772.729 1966.49 742.242 1932.7 748.024 cv
cp
.968627 .643137 .568627 rgb
f
1979.64 785.886 mo
1979.94 791.876 1977.38 796.874 1973.92 797.049 cv
1970.46 797.224 1967.42 792.509 1967.12 786.519 cv
1966.82 780.529 1969.38 775.53 1972.84 775.356 cv
1976.3 775.181 1979.35 779.895 1979.64 785.886 cv
cp
f
1936.49 747.076 mo
1936.49 747.076 1922.04 784.765 1907.89 788.782 cv
1893.74 792.799 1894.87 811.338 1894.87 811.338 cv
1894.87 811.338 1893.06 768.486 1905.98 757.981 cv
1918.91 747.478 1936.49 747.076 1936.49 747.076 cv
cp
.717647 .341176 .258824 rgb
f
1913.96 796.156 mo
1916.14 802.048 1914.71 808.03 1910.76 809.518 cv
1906.81 811.006 1901.84 807.436 1899.66 801.545 cv
1897.48 795.653 1898.91 789.671 1902.86 788.184 cv
1906.8 786.696 1911.77 790.266 1913.96 796.156 cv
cp
.968627 .643137 .568627 rgb
f
1575.46 861.376 mo
1575.46 861.376 1531.66 783.203 1521.01 766.587 cv
1510.35 749.97 1482.59 683.937 1481.6 681.334 cv
1480.61 678.732 1500.72 647.482 1496.23 646.412 cv
1491.74 645.342 1486.77 662.888 1481.98 660.792 cv
1477.19 658.695 1463.21 616.457 1460.48 618.553 cv
1455.37 622.474 1468.02 644.754 1465.29 646.158 cv
1462.57 647.562 1454.33 621.644 1448.98 622.407 cv
1443.64 623.17 1459.15 646.162 1457.65 648.193 cv
1456.16 650.224 1440.05 628.56 1437.14 633.179 cv
1435.56 635.686 1451.95 652.089 1448.8 653.625 cv
1445.65 655.161 1431.07 644.573 1429.53 647.626 cv
1427.99 650.68 1443.01 654.861 1447.51 663.092 cv
1452 671.324 1459.65 674.882 1462.83 690.125 cv
1466.01 705.368 1470.76 760.528 1487.03 788.048 cv
1503.31 815.568 1539.11 876.476 1539.11 876.476 cv
1575.46 861.376 li
cp
.956863 .54902 .498039 rgb
f
1769.58 1238.61 mo
1769.58 1238.61 1766.02 1234.17 1764.95 1232.6 cv
1763.69 1230.76 1760.36 1224.95 1760.36 1224.95 cv
1760.36 1224.95 1749.69 1204.18 1751.29 1203.52 cv
1752.89 1202.85 1756.71 1205.4 1757.82 1206.45 cv
1758.92 1207.5 1760.32 1208.62 1761.43 1209.67 cv
1762.54 1210.72 1764.23 1210.77 1765.64 1209.48 cv
1767.04 1208.2 1763.53 1203.05 1761.97 1201.51 cv
1757.09 1196.72 1741.46 1186.54 1739.85 1185.39 cv
1737.95 1184.03 1726.08 1144.61 1720.94 1131.42 cv
1720.95 1131.42 li
1713.18 1109.59 1706.28 1086.76 1705.47 1084.44 cv
1700.58 985.315 li
1663.55 972.975 li
1663.55 972.975 1667.43 1083.06 1668.26 1088.54 cv
1668.65 1091.15 1690.58 1140.36 1690.6 1140.35 cv
1702.92 1163.89 1713.84 1184.61 1715.83 1188.66 cv
1715.83 1188.66 1718.52 1202.33 1719.71 1211.14 cv
1720.91 1219.95 1725.55 1227.58 1726.27 1230 cv
1726.37 1230.36 1728.39 1238.84 1734.5 1247.62 cv
1739.77 1255.19 1738.24 1245.54 1738.24 1245.54 cv
1738.24 1245.54 1731.01 1229.72 1732.35 1229.35 cv
1733.39 1229.06 1736.83 1237.94 1742.57 1246.37 cv
1744.05 1248.54 1745.51 1250.68 1746.88 1252.63 cv
1750.45 1257.75 1754.62 1256.97 1751.74 1251 cv
1750.72 1248.89 1748.94 1245.43 1747.33 1243.15 cv
1745.58 1240.69 1744.77 1237.85 1743.63 1235.55 cv
1741.34 1230.98 1739.62 1227.68 1739.86 1227.68 cv
1740.17 1227.69 1740.36 1226.46 1742 1228.71 cv
1743.97 1231.42 1746.88 1238.12 1750.08 1241.87 cv
1751.9 1244 1755.43 1248.68 1755.43 1248.68 cv
1755.43 1248.68 1761.98 1255.64 1762.46 1255.36 cv
1765.11 1253.86 1761.85 1247.52 1759 1244.96 cv
1758.03 1242.38 1754.17 1237.56 1754.17 1237.56 cv
1754.17 1237.56 1748.58 1226.03 1750.2 1225.19 cv
1751.53 1224.5 1770.26 1249.45 1772.8 1247.76 cv
1774.88 1246.38 1769.58 1238.61 1769.58 1238.61 cv
cp
f
1703.35 852.454 mo
1704.25 830.833 1701.07 809.481 1691.39 789.351 cv
1683.07 772.032 1662.48 762.204 1643.7 762.18 cv
1584.06 762.103 1576.48 840.895 1538.52 871.288 cv
1526.92 880.574 1513.95 888.138 1502.98 898.153 cv
1462.45 935.134 1480.7 1003.59 1517.92 1036.01 cv
1543.74 1058.51 1584.33 1071.29 1616.16 1053.7 cv
1632.77 1044.52 1645.39 1029.26 1654.37 1012.54 cv
1667.13 988.811 1675.35 961.43 1684.42 936.138 cv
1694.07 909.218 1702.16 881.193 1703.35 852.454 cv
cp
.094118 .27451 .333333 rgb
f
1516.94 1548.55 mo
1516.94 1548.55 1512.74 1577.63 1505.51 1587.01 cv
1503.08 1590.17 1498.65 1594.15 1495.74 1599.84 cv
1491.22 1608.7 1493.72 1621.9 1497.06 1629.16 cv
1498.77 1632.89 1496.94 1632.88 1500.84 1634.08 cv
1512.4 1637.64 1524.7 1631.65 1529.63 1620.6 cv
1532.38 1614.43 1534.79 1606.19 1535.27 1595.82 cv
1536.51 1569.41 1544.74 1555.98 1544.74 1555.98 cv
1516.94 1548.55 li
cp
.968627 .643137 .568627 rgb
f
1643.39 1561.85 mo
1643.39 1561.85 1645.99 1594.64 1643.88 1605.3 cv
1642.75 1611.01 1636.48 1622.76 1639.36 1628.13 cv
1642.24 1633.5 1645.53 1634.84 1645.53 1634.84 cv
1720.17 1636.04 li
1724.24 1636.11 1721.55 1633.5 1718.27 1631.09 cv
1712.91 1627.15 1708.58 1624.55 1691.43 1616.27 cv
1690.32 1615.73 1686.25 1613.15 1684.78 1612.26 cv
1681.06 1609.99 1677.32 1606.42 1674.1 1602.84 cv
1668.74 1596.89 1668.27 1568.01 1668.27 1568.01 cv
1643.39 1561.85 li
cp
f
1701.73 1125.92 mo
1701.73 1125.92 1711.13 1179.17 1704.96 1214.08 cv
1698.79 1248.98 1669.17 1572.56 1669.17 1572.56 cv
1636.25 1574.41 li
1636.25 1574.41 1629.35 1439.25 1630.58 1420.45 cv
1631.82 1401.65 1641.59 1370.2 1641.59 1370.2 cv
1638.31 1261.07 li
1679.85 1117.7 li
1701.73 1125.92 li
cp
.235294 .560784 .486275 rgb
f
1604.98 1114.72 mo
1604.98 1114.72 1579.06 1153.66 1572.89 1185.88 cv
1566.72 1218.1 1577.42 1317.13 1565.55 1359.36 cv
1559.12 1382.22 1534.77 1417.52 1531.06 1447.05 cv
1527.36 1476.59 1512.83 1553.96 1512.83 1553.96 cv
1545.74 1560.47 li
1622.21 1367.24 li
1682.19 1192.59 li
1697.56 1102.64 li
1604.98 1114.72 li
cp
.313726 .74902 .647059 rgb
f
1625.97 893.188 mo
1625.97 893.188 1591.65 891.006 1578.07 905.775 cv
1564.49 920.544 1608.19 1037.37 1610.66 1056.17 cv
1613.13 1074.97 1598.07 1124.95 1598.07 1124.95 cv
1598.07 1124.95 1678.69 1141.14 1701.73 1125.92 cv
1701.73 1125.92 1704.2 990.755 1701.73 977.329 cv
1699.27 963.901 1678.69 909.299 1673.76 903.928 cv
1668.82 898.557 1625.97 893.188 1625.97 893.188 cv
cp
.968627 .8 .498039 rgb
f
1637.39 847.421 mo
1637.39 847.421 1637.21 848.43 1636.9 850.146 cv
1635.37 858.381 1629.47 885.697 1625.49 893.207 cv
1620.68 902.282 1641.96 931.227 1662.44 927.694 cv
1668.54 926.643 1657.29 901.1 1657.83 898.394 cv
1658.87 893.214 1660.27 886.148 1661.7 878.903 cv
1662.51 874.816 1663.34 870.672 1664.11 866.778 cv
1666.3 855.71 1668.08 846.657 1668.08 846.657 cv
1637.39 847.421 li
cp
.968627 .643137 .568627 rgb
f
1636.9 850.146 mo
1637.21 848.43 1637.39 847.421 1637.39 847.421 cv
1668.08 846.657 li
1668.08 846.657 1666.3 855.71 1664.11 866.778 cv
1663.34 870.651 1662.52 874.771 1661.72 878.835 cv
1656.98 878.139 1652.03 875.841 1647.06 871.503 cv
1641.65 866.775 1638.11 861.094 1635.96 855.028 cv
1636.34 853.092 1636.66 851.423 1636.9 850.146 cv
cp
.956863 .454902 .345098 rgb
f
1658.05 777.8 mo
1658.05 777.8 1643.58 776.132 1634.52 787.836 cv
1625.45 799.54 1615.67 835.735 1638.2 855.414 cv
1660.73 875.092 1682.98 852.817 1686.28 829.2 cv
1689.58 805.582 1690.86 776.947 1658.05 777.8 cv
cp
.968627 .643137 .568627 rgb
f
1692.95 828.851 mo
1690.26 834.067 1685.74 836.955 1682.87 835.302 cv
1679.99 833.648 1679.83 828.08 1682.52 822.864 cv
1685.21 817.647 1689.72 814.759 1692.6 816.412 cv
1695.48 818.065 1695.63 823.635 1692.95 828.851 cv
cp
f
1659.67 773.93 mo
1659.67 773.93 1640.34 808.35 1626.52 809.94 cv
1612.69 811.531 1610.87 829.82 1610.87 829.82 cv
1610.87 829.82 1615.82 787.677 1629.5 779.55 cv
1643.19 771.422 1659.67 773.93 1659.67 773.93 cv
cp
.094118 .27451 .333333 rgb
f
1531.87 1614.79 mo
1513.93 1618.05 1502 1607.58 1495.79 1599.74 cv
1491.24 1608.62 1489.01 1621.87 1492.36 1629.16 cv
1495.32 1635.59 1503.95 1635.4 1510.74 1635.66 cv
1517.92 1635.92 1523.48 1631.94 1527.05 1625.7 cv
1528.71 1622.78 1530.43 1619.15 1531.87 1614.79 cv
cp
.717647 .341176 .258824 rgb
f
1684.77 1612.25 mo
1665.03 1617.3 1650.43 1613.87 1642.27 1610.58 cv
1640.17 1616.54 1637.38 1624.01 1638.86 1628.31 cv
1640.67 1633.59 1643.25 1634.78 1645.53 1634.84 cv
1663.56 1635.31 1711.58 1635.96 1725.33 1636.14 cv
1727.25 1636.16 1728.31 1633.92 1727.07 1632.45 cv
1723.66 1628.39 1686.24 1613.15 1684.77 1612.25 cv
cp
f
1630.14 818.589 mo
1631.27 824.701 1629 830.307 1625.09 831.109 cv
1621.18 831.911 1617.09 827.606 1615.97 821.494 cv
1614.84 815.382 1617.1 809.776 1621.02 808.974 cv
1624.93 808.172 1629.02 812.477 1630.14 818.589 cv
cp
.968627 .643137 .568627 rgb
f
1563.34 836.042 mo
1563.34 836.042 1611.79 888.035 1618.99 908.988 cv
1626.19 929.941 1611.97 959.916 1592.32 961.225 cv
1572.68 962.535 1528.96 868.944 1528.96 868.944 cv
1563.34 836.042 li
cp
.968627 .8 .498039 rgb
f
3047.9 1518.05 mo
3047.9 1518.05 3049.72 1533.73 3049.72 1536.39 cv
3049.72 1539.05 3049.72 1539.05 3049.72 1539.05 cv
3048.42 1541.76 li
3047.9 1542.84 li
3057.28 1556 li
3057.28 1556 3094.96 1556.56 3095.79 1556.56 cv
3096.64 1556.56 3090.75 1547.46 3090.75 1547.46 cv
3090.75 1547.46 3078.29 1538.07 3076.05 1531.49 cv
3073.81 1524.91 3077.95 1511.18 3077.95 1511.18 cv
3047.9 1518.05 li
cp
.968627 .643137 .568627 rgb
f
2866.3 1424.19 mo
2866.3 1424.19 2852.88 1432.51 2850.8 1434.17 cv
2848.71 1435.82 2848.71 1435.82 2848.71 1435.82 cv
2847.4 1438.53 li
2846.88 1439.6 li
2830.74 1440.44 li
2830.74 1440.44 2806.88 1411.28 2806.35 1410.62 cv
2805.83 1409.96 2813.22 1411.61 2813.22 1411.61 cv
2813.22 1411.61 2828.28 1413.64 2834.83 1411.31 cv
2841.38 1408.97 2854.63 1395.92 2854.63 1395.92 cv
2866.3 1424.19 li
cp
f
2988.24 1277.02 mo
2843.7 1400.12 li
2865.97 1431.63 li
2865.97 1431.63 3014.5 1339.41 3022.27 1338.36 cv
3030.04 1337.31 3036.34 1340.88 3037.81 1346.55 cv
3039.28 1352.22 3043.02 1522.41 3043.02 1522.41 cv
3081.61 1522.41 li
3101.74 1308.14 li
2988.24 1277.02 li
cp
.717647 .341176 .258824 rgb
f
3196.46 1101.44 mo
3207.16 1094.43 3232.28 1067.47 3240.79 1058.29 cv
3240.88 1057.21 3241.69 1050.98 3248.53 1043.06 cv
3253.37 1037.46 3257.03 1024.69 3260.2 1028.31 cv
3263.37 1031.93 3255.5 1042.07 3259.1 1042.14 cv
3262.7 1042.21 3280.58 1022.12 3283.45 1025.4 cv
3286.32 1028.68 3268.17 1046.54 3271.39 1046.6 cv
3274.61 1046.66 3289.35 1028.57 3293.41 1033.21 cv
3297.47 1037.84 3274.1 1052.88 3276.28 1055.37 cv
3278.45 1057.85 3292.94 1048 3296.21 1051.73 cv
3299.48 1055.46 3275.78 1064.25 3277.67 1064.29 cv
3279.57 1064.33 3293.24 1063.96 3293.34 1066.59 cv
3293.46 1069.56 3258.75 1074.2 3254.5 1079.35 cv
3245.43 1093.78 3229.29 1120.16 3212.95 1131.73 cv
3192.95 1145.88 3146.73 1175.92 3146.73 1175.92 cv
3123.77 1146.26 li
3123.77 1146.26 3183.78 1109.75 3196.46 1101.44 cv
cp
.968627 .643137 .568627 rgb
f
3259.1 1048.52 mo
3259.99 1050.28 3260.37 1052.18 3260.5 1054.1 cv
3260.43 1054.41 3261.28 1060.61 3255.98 1065.32 cv
3258.04 1061.49 3260.32 1057.23 3259.1 1048.52 cv
cp
.956863 .54902 .498039 rgb
f
2984.58 1068.99 mo
2976.09 1059.42 2958.89 1026.84 2953.08 1015.75 cv
2953.27 1014.69 2954.12 1008.46 2949.59 999.022 cv
2946.39 992.356 2946.19 979.075 2942.19 981.739 cv
2938.18 984.404 2943.12 996.251 2939.63 995.374 cv
2936.14 994.496 2924.14 970.433 2920.51 972.847 cv
2916.88 975.262 2929.72 997.245 2926.6 996.46 cv
2923.47 995.675 2913.98 974.365 2908.85 977.779 cv
2903.72 981.193 2922.35 1001.82 2919.59 1003.65 cv
2916.84 1005.48 2905.44 992.178 2901.31 994.925 cv
2897.17 997.673 2917.75 1012.36 2915.91 1011.9 cv
2914.07 1011.43 2900.97 1007.5 2900.18 1010.01 cv
2899.3 1012.86 2931.58 1026.4 2934.34 1032.49 cv
2934.34 1032.49 li
2939.31 1048.79 2948 1078.47 2960.75 1093.91 cv
2976.35 1112.81 3013.11 1153.88 3013.11 1153.88 cv
3043.02 1131.26 li
3043.02 1131.26 2994.64 1080.33 2984.58 1068.99 cv
cp
.968627 .643137 .568627 rgb
f
2937.96 1001.53 mo
2936.64 1002.99 2935.77 1004.73 2935.15 1006.55 cv
2935.14 1006.87 2932.7 1012.63 2936.57 1018.57 cv
2935.59 1014.33 2934.51 1009.62 2937.96 1001.53 cv
cp
.956863 .54902 .498039 rgb
f
3048.46 1136.54 mo
3048.46 1136.54 li
3052.81 1130.04 3060.31 1126.36 3068.11 1126.89 cv
3091.06 1128.45 3137.6 1132.13 3142.01 1136.54 cv
3147.9 1142.43 3165.54 1180.8 3148.74 1234.58 cv
3131.93 1288.36 3122.68 1282.76 3108.96 1282.76 cv
3095.24 1282.76 3030.53 1252.23 3030.53 1252.23 cv
3048.46 1136.54 li
cp
.207843 .32549 .537255 rgb
f
3008.82 1090.89 mo
2981.84 1126.09 li
3015.33 1175.92 li
3015.33 1175.92 3012.18 1212.94 3007.35 1224.5 cv
3002.52 1236.05 2974.58 1283.53 2974.58 1283.53 cv
2974.58 1283.53 3042.43 1325.13 3108.82 1319.03 cv
3108.82 1319.03 3127.52 1222.82 3132.77 1213.57 cv
3138.02 1204.33 3188.65 1158.53 3188.65 1158.53 cv
3164.07 1118.82 li
3121.63 1142.36 li
3121.63 1142.36 3044.07 1129.82 3040.33 1126.09 cv
3036.6 1122.35 3008.82 1090.89 3008.82 1090.89 cv
cp
.968627 .8 .498039 rgb
f
3096.36 1018.9 mo
3096.36 1018.9 3070.17 1005.04 3061.2 1028 cv
3061.2 1028 3037.67 1025.62 3041.74 1049.99 cv
3041.74 1049.99 3018.07 1061.9 3033.05 1092.57 cv
3033.05 1092.57 3026.47 1121.42 3060.22 1123.24 cv
3060.22 1123.24 3065.26 1133.46 3080.67 1131.08 cv
3096.08 1128.7 3100 1124.64 3100 1124.64 cv
3100 1124.64 3127.31 1132.62 3135.57 1107.97 cv
3135.57 1107.97 3154.34 1103.49 3141.73 1079.4 cv
3141.73 1079.4 3158.12 1048.17 3129.27 1038.79 cv
3129.27 1038.79 3125.91 1006.86 3096.36 1018.9 cv
cp
.956863 .454902 .345098 rgb
f
3106.93 1086.56 mo
3104.81 1092.5 3106.33 1098.48 3110.35 1099.92 cv
3114.36 1101.35 3119.34 1097.71 3121.47 1091.77 cv
3123.6 1085.83 3122.07 1079.85 3118.06 1078.41 cv
3114.04 1076.97 3109.06 1080.62 3106.93 1086.56 cv
cp
.968627 .643137 .568627 rgb
f
3036.29 1071.98 mo
3036 1078.28 3039.21 1083.55 3043.47 1083.75 cv
3047.73 1083.96 3051.42 1079.01 3051.72 1072.71 cv
3052.01 1066.41 3048.8 1061.14 3044.54 1060.94 cv
3040.29 1060.73 3036.59 1065.68 3036.29 1071.98 cv
cp
f
3066.24 1113.72 mo
3066.24 1114.13 3062.84 1128.75 3061.04 1136.48 cv
3060.36 1139.37 3061.82 1142.31 3064.52 1143.54 cv
3071.72 1146.83 3085.88 1151.42 3095.67 1142.55 cv
3096.56 1141.75 3097.04 1140.58 3096.99 1139.37 cv
3095.79 1104.47 li
3066.24 1113.72 li
cp
f
3064.42 1121.9 mo
3072.04 1125.75 3081.63 1125.82 3092.38 1119.52 cv
3093.74 1118.72 3095.02 1117.87 3096.23 1116.98 cv
3095.79 1104.47 li
3066.24 1113.71 li
3066.24 1113.92 3065.45 1117.44 3064.42 1121.9 cv
cp
.956863 .54902 .498039 rgb
f
3087.2 1033.13 mo
3087.2 1033.13 3100.1 1036.54 3107.68 1049.09 cv
3115.25 1061.64 3119.44 1097.91 3092.38 1113.78 cv
3065.31 1129.64 3045.62 1105.07 3046.13 1081.83 cv
3046.65 1058.59 3056.98 1028.87 3087.2 1033.13 cv
cp
.968627 .643137 .568627 rgb
f
3043.04 1127.3 mo
3030.58 1136.72 3017.54 1185 3012.6 1197.61 cv
3008.63 1220.76 li
3059.33 1131.2 li
3059.33 1131.2 3045.73 1125.27 3043.04 1127.3 cv
cp
.27451 .431373 .713726 rgb
f
3104.6 1139.52 mo
3104.6 1139.52 3103.08 1199.01 3107.56 1219.46 cv
3112.04 1239.9 3123.77 1247.05 3123.77 1247.05 cv
3129.53 1223.26 li
3129.53 1223.26 3123.77 1170.72 3121.63 1142.36 cv
3121.31 1138.05 3104.6 1139.52 3104.6 1139.52 cv
cp
f
3041.03 1565.64 mo
3035.28 1564.91 3045.22 1544.96 3048.42 1541.76 cv
3090.75 1547.46 li
3090.75 1547.46 3111.13 1556.91 3115.96 1561.74 cv
3117.11 1562.89 3117.26 1564.9 3112.29 1565.64 cv
3096.31 1568.01 3053.8 1567.25 3041.03 1565.64 cv
cp
.07451 .215686 .356863 rgb
f
2832.88 1459.46 mo
2837.85 1462.45 2846.89 1443.02 2847.4 1438.53 cv
2813.22 1411.61 li
2813.22 1411.61 2786.84 1404.04 2781.52 1409.37 cv
2776.69 1414.2 2821.59 1452.68 2832.88 1459.46 cv
cp
f
2097.94 1067.87 mo
2097.94 1067.87 2114.75 1061.78 2125.61 1078.81 cv
2136.48 1095.84 2130.61 1094.22 2135.89 1102.74 cv
2141.18 1111.25 2143.72 1135.46 2145.54 1148.54 cv
2164.18 1282 1941.29 1292.82 2028.33 1122.71 cv
2036.49 1106.75 2043.4 1097.16 2050.74 1080.13 cv
2058.08 1063.1 2089.13 1063.76 2097.94 1067.87 cv
cp
f
2050.25 1192.54 mo
2027.78 1184.69 li
2027.78 1184.69 2018.85 1196.09 2016.18 1224.62 cv
2013.5 1253.14 2016.18 1269.91 2016.18 1269.91 cv
2041.61 1269.91 li
2050.25 1192.54 li
cp
.968627 .8 .498039 rgb
f
2095.29 1177.23 mo
2087.67 1178.02 2030.94 1172.63 2027.78 1184.69 cv
2010.79 1249.53 2034.15 1339.05 2040.12 1345.03 cv
2046.1 1351 2143.58 1331.55 2143.58 1331.55 cv
2143.58 1331.55 2158.87 1170.68 2095.29 1177.23 cv
cp
f
2172.71 1110.77 mo
2172.71 1110.77 2166.45 1107.78 2160.75 1097.23 cv
2157.1 1090.46 2146.23 1081.79 2150.76 1080.38 cv
2155.28 1078.98 2162.21 1090.42 2163.5 1087.15 cv
2164.8 1083.87 2151.87 1059.09 2155.96 1057.82 cv
2160.06 1056.55 2170.79 1080.65 2171.95 1077.72 cv
2173.11 1074.78 2160.99 1053.73 2166.79 1051.93 cv
2172.58 1050.13 2178.83 1077.85 2181.94 1076.88 cv
2185.05 1075.92 2180.52 1054.77 2185.19 1053.33 cv
2189.85 1051.88 2189.19 1079.48 2190.87 1078.68 cv
2191.77 1078.25 2195.91 1064.89 2198.44 1065.89 cv
2201.3 1067.02 2193.58 1094.46 2197.01 1100.51 cv
2200.44 1106.56 2227.91 1181.74 2218.52 1191.13 cv
2208.28 1201.37 2143.17 1224.83 2129.54 1220.8 cv
2115.91 1216.76 2108.11 1203.3 2111.38 1195.02 cv
2114.66 1186.74 2179.04 1168.13 2180.07 1165.54 cv
2181.09 1162.94 2172.71 1110.77 2172.71 1110.77 cv
cp
.968627 .643137 .568627 rgb
f
2177.93 1087.02 mo
2179.9 1086.93 2181.84 1087.37 2183.7 1088.06 cv
2183.97 1088.25 2190.15 1090.06 2192.81 1096.88 cv
2189.87 1093.39 2186.61 1089.53 2177.93 1087.02 cv
cp
.956863 .54902 .498039 rgb
f
2228.17 1541.08 mo
2228.17 1541.08 2240.76 1592.45 2250.15 1600.51 cv
2259.54 1608.58 2290.15 1624 2282.14 1625.66 cv
2274.13 1627.32 2214.85 1628.7 2216.47 1618.81 cv
2218.1 1608.93 2219.8 1602.62 2219.8 1602.62 cv
2204.12 1565.93 li
2228.17 1541.08 li
cp
.968627 .611765 .552941 rgb
f
2286.12 1627.77 mo
2271.67 1629.21 2229.45 1630.72 2217.16 1629.15 cv
2217.16 1629.15 2214.85 1628.7 2216.47 1618.81 cv
2216.87 1616.4 2217.27 1614.19 2217.65 1612.24 cv
2228.81 1615.17 2253.1 1608.94 2262.72 1607.66 cv
2273.18 1612.66 2284.96 1620.14 2288.76 1620.76 cv
2294.26 1621.67 2294.26 1626.96 2286.12 1627.77 cv
cp
.07451 .215686 .356863 rgb
f
2089.94 1584.15 mo
2089.94 1584.15 2088.62 1597.14 2088.62 1602.86 cv
2088.62 1608.59 2093.95 1624.74 2091.48 1627.21 cv
2089.01 1629.68 2018.4 1629.38 2018.4 1627.05 cv
2018.4 1624.73 2030.88 1617.68 2047.84 1612.83 cv
2064.79 1607.99 2070.56 1589.21 2066.15 1578.42 cv
2089.94 1584.15 li
cp
.968627 .611765 .552941 rgb
f
2017.26 1627.21 mo
2017.26 1625.04 2028.84 1618.39 2043.84 1613.81 cv
2059.82 1619.21 2082.01 1614.75 2090.33 1613.16 cv
2092.87 1619.82 2093.69 1626.13 2092.38 1627.44 cv
2089.91 1629.92 2017.26 1629.54 2017.26 1627.21 cv
cp
.07451 .215686 .356863 rgb
f
2166.58 1367.01 mo
2179.24 1378.24 li
2179.24 1378.24 2193.49 1416.83 2194.32 1419.38 cv
2195.48 1422.92 2241.65 1571.73 2241.65 1571.73 cv
2209.48 1583.3 li
2209.48 1583.3 2177.59 1521.16 2172.3 1499.58 cv
2167.02 1478 2114.16 1387.71 2114.16 1387.71 cv
2166.58 1367.01 li
cp
.980392 .878431 .698039 rgb
f
2110.64 1389.91 mo
2095.22 1587.13 li
2059.55 1587.13 li
2059.55 1587.13 2046.77 1439.53 2051.18 1387.71 cv
2110.64 1389.91 li
cp
f
2048.1 1191.27 mo
2048.1 1191.27 2070.78 1185.32 2096.55 1183.89 cv
2109.89 1183.15 2127.82 1185.98 2127.82 1185.98 cv
2127.82 1185.98 2144.11 1222.54 2148.96 1252.49 cv
2153.8 1282.44 2180.23 1378.46 2180.23 1378.46 cv
2180.23 1378.46 2126.5 1419.86 2048.1 1392.55 cv
2048.1 1191.27 li
cp
.313726 .74902 .647059 rgb
f
2109.17 1158.53 mo
2109.17 1158.53 2108.47 1181.91 2110.66 1184.11 cv
2112.86 1186.31 2115.92 1189.95 2112.69 1195.53 cv
2109.46 1201.1 2095.44 1197.54 2088.91 1194.35 cv
2082.64 1191.29 2078.59 1185.58 2078.59 1185.58 cv
2081.86 1148.54 li
2109.17 1158.53 li
cp
.968627 .611765 .552941 rgb
f
2099.85 1168.22 mo
2095.34 1166.64 2087.48 1163.6 2081.41 1153.73 cv
2081.86 1148.54 li
2109.17 1158.53 li
2109.17 1158.53 2109 1164.23 2109.09 1170.27 cv
2105.26 1170.11 2102 1168.97 2099.85 1168.22 cv
cp
.717647 .341176 .258824 rgb
f
2077.05 1122.1 mo
2077.05 1122.1 2076.39 1108.35 2067.95 1111.02 cv
2059.5 1113.69 2065.94 1134.44 2072.94 1133.76 cv
2079.94 1133.08 2077.05 1122.1 2077.05 1122.1 cv
cp
.968627 .611765 .552941 rgb
f
2103.59 1077.19 mo
2103.59 1077.19 2116.81 1076.9 2123.56 1087.18 cv
2130.31 1097.45 2137.65 1126.82 2126.5 1147.08 cv
2115.34 1167.34 2101.1 1162.35 2095.22 1160.29 cv
2089.35 1158.24 2077.75 1153.68 2071.88 1134.74 cv
2066.01 1115.8 2070.26 1073.23 2103.59 1077.19 cv
cp
f
2050.62 1190.65 mo
2056.65 1204.25 2071.47 1233.53 2070.79 1265.83 cv
2070.07 1299.67 2044.63 1321.63 2044.63 1321.63 cv
2044.63 1338.35 li
2044.63 1338.35 2072.71 1333.92 2083.44 1290.21 cv
2094.18 1246.5 2068.35 1187.11 2068.35 1187.11 cv
2068.35 1187.11 2064.66 1184.48 2057.35 1186.52 cv
2052.48 1187.88 2050.62 1190.65 2050.62 1190.65 cv
cp
.207843 .32549 .537255 rgb
f
2112.31 1183.77 mo
2112.31 1183.77 2133.41 1297.34 2160.78 1304.7 cv
2156.02 1285.34 li
2156.02 1285.34 2127.82 1193.45 2127.82 1185.98 cv
2127.82 1178.51 2112.31 1183.77 2112.31 1183.77 cv
cp
f
2169.4 1378.11 mo
2087.52 1378.11 li
2087.52 1284.81 li
2169.4 1288.45 li
2169.4 1378.11 li
cp
.717647 .341176 .258824 rgb
f
2169.4 1281.17 mo
2091.16 1281.17 li
2089.15 1281.17 2087.52 1282.8 2087.52 1284.81 cv
2087.52 1286.82 2089.15 1288.45 2091.16 1288.45 cv
2169.4 1288.45 li
2169.33 1288.42 li
2163.93 1286.39 2163.96 1283.18 2169.4 1281.17 cv
cp
f
2167.17 1282.25 mo
2093.86 1282.25 li
2092.44 1282.25 2091.3 1283.39 2091.3 1284.81 cv
2091.3 1286.22 2092.44 1287.37 2093.86 1287.37 cv
2167.16 1287.37 li
2164.68 1285.78 2164.68 1283.83 2167.17 1282.25 cv
cp
.980392 .878431 .698039 rgb
f
2133.51 1282.77 mo
2128.36 1282.77 li
2127.25 1282.77 2126.35 1283.67 2126.35 1284.78 cv
2126.35 1284.96 li
2133.51 1284.96 li
2133.51 1282.77 li
cp
.07451 .215686 .356863 rgb
f
2128.57 1282.78 mo
2129.8 1282.78 2131.64 1283.82 2132.68 1285.11 cv
2144.91 1300.27 li
2152.09 1300.27 li
2140.46 1285.84 li
2139.09 1284.15 2136.67 1282.77 2135.04 1282.77 cv
2128.57 1282.78 li
cp
.207843 .32549 .537255 rgb
f
2048.1 1191.27 mo
2048.1 1191.27 2054.27 1197.46 2060.88 1220.92 cv
2067.48 1244.38 2070.85 1299.32 2076.58 1305.05 cv
2082.3 1310.78 2119.74 1340.58 2126.5 1339.55 cv
2133.25 1338.52 2148.37 1320.91 2153.07 1320.91 cv
2157.77 1320.91 2157.18 1325.16 2154.83 1327.51 cv
2152.48 1329.86 2149.62 1332.58 2151.01 1333.97 cv
2152.41 1335.37 2152.41 1335.37 2152.41 1335.37 cv
2152.41 1335.37 2173.33 1329.86 2176.85 1331.92 cv
2180.38 1333.97 2173.48 1338.82 2173.48 1342.34 cv
2173.48 1345.87 2174.34 1345.8 2173.92 1349.68 cv
2173.49 1353.56 2172.52 1356.66 2170.69 1358.49 cv
2168.85 1360.33 2145.73 1367.01 2123.12 1363.92 cv
2100.51 1360.84 2072.91 1349.98 2052.5 1324.72 cv
2032.09 1299.47 2036.18 1220.1 2036.64 1212.19 cv
2037.82 1192.15 2048.1 1191.27 2048.1 1191.27 cv
cp
.968627 .611765 .552941 rgb
f
1789.42 524.472 mo
1770.3 526.412 li
1763.78 495.991 li
1735.47 495.381 li
1726.87 473.413 li
1715.75 477.768 li
1727.25 507.149 li
1754.08 507.728 li
1760.86 539.375 li
1789.64 536.454 li
1789.42 524.472 li
cp
.313726 .74902 .647059 rgb
f
1983.57 492.288 mo
1994.29 474.172 li
1985.45 455.066 li
1984.44 452.89 1986.37 450.504 1988.7 451.028 cv
2009.25 455.63 li
2024.69 441.315 li
2026.44 439.685 2029.31 440.778 2029.53 443.166 cv
2031.5 464.126 li
2049.89 474.384 li
2051.98 475.553 2051.83 478.615 2049.63 479.566 cv
2030.3 487.919 li
2026.23 508.574 li
2025.76 510.926 2022.8 511.725 2021.22 509.926 cv
2007.3 494.128 li
1986.4 496.634 li
1984.02 496.92 1982.34 494.352 1983.57 492.288 cv
cp
.27451 .431373 .713726 rgb
f
2316.1 488.528 mo
2316.1 488.528 2317.39 480.176 2325.48 476.749 cv
2332.7 473.693 2340.55 478.381 2343.9 486.293 cv
2347.78 495.452 2345.59 509.159 2331.98 526.029 cv
2310.4 524.063 2299.03 516.098 2295.15 506.94 cv
2291.8 499.028 2293.9 490.128 2301.11 487.072 cv
2309.2 483.645 2316.1 488.528 2316.1 488.528 cv
cp
.956863 .54902 .498039 rgb
f
1565.03 475.911 mo
1565.03 475.911 1567.48 468.986 1575.7 466.515 cv
1583.03 464.31 1589.83 468.616 1591.87 475.399 cv
1594.23 483.25 1590.14 494.611 1574.7 508.062 cv
1554.39 505.362 1544.72 498.144 1542.35 490.292 cv
1540.31 483.509 1543.61 476.166 1550.94 473.961 cv
1559.16 471.489 1565.03 475.911 1565.03 475.911 cv
cp
f
1505.38 497.232 mo
1512.84 496.247 1518.79 495.077 1524.59 493.648 cv
1526.5 493.178 1529.95 492.926 1530.87 490.96 cv
1531.35 489.939 1531.2 488.876 1530.22 488.199 cv
1528.42 486.958 1525.7 488.291 1523.77 488.765 cv
1517.9 490.208 1511.19 491.562 1504.33 492.536 cv
1503.04 492.719 1502.24 494.208 1502.5 495.407 cv
1502.81 496.77 1504.08 497.403 1505.38 497.232 cv
cp
f
1607.07 488.25 mo
1609.89 487.607 1612.7 486.912 1615.51 486.225 cv
1618.2 485.568 1621.49 485.263 1623.81 483.723 cv
1625.52 482.587 1625.08 480.051 1622.93 479.825 cv
1620.15 479.534 1617.13 480.766 1614.44 481.433 cv
1611.63 482.128 1608.82 482.815 1606.03 483.554 cv
1603.04 484.343 1604.04 488.941 1607.07 488.25 cv
cp
f
1540.26 527.701 mo
1542.34 520.926 1546.2 518.058 1548.93 514.991 cv
1550.38 513.352 1548.78 510.993 1546.72 511.854 cv
1541.05 514.211 1537.34 520.701 1535.67 526.313 cv
1534.8 529.268 1539.35 530.656 1540.26 527.701 cv
cp
f
1576.25 534.673 mo
1575.44 531.797 1575.19 528.853 1575.61 525.886 cv
1575.86 524.07 1578.09 518.635 1574.57 518.569 cv
1571.27 518.506 1570.83 524.021 1570.61 526.36 cv
1570.32 529.494 1570.65 532.707 1571.54 535.723 cv
1572.41 538.691 1577.11 537.674 1576.25 534.673 cv
cp
f
1595.8 511.209 mo
1597.64 511.965 1599.48 512.721 1601.31 513.478 cv
1603.15 514.232 1605.04 515.518 1606.99 514.6 cv
1608.1 514.083 1608.27 512.813 1607.88 511.8 cv
1607.18 509.96 1604.42 509.441 1602.74 508.762 cv
1600.9 508.018 1599.06 507.273 1597.22 506.528 cv
1596 506.033 1594.53 506.979 1594.17 508.16 cv
1593.76 509.525 1594.58 510.705 1595.8 511.209 cv
cp
f
1541.53 463.359 mo
1532.08 450.443 1532.18 450.342 1530.69 449.452 cv
1529.17 448.54 1527.1 449.91 1527.53 451.701 cv
1527.95 453.472 1527.91 453.173 1537.9 466.726 cv
1538.69 467.804 1540.49 467.693 1541.4 466.857 cv
1542.47 465.859 1542.32 464.443 1541.53 463.359 cv
cp
f
1567.13 457 mo
1567.49 454.389 1567.56 451.769 1567.36 449.139 cv
1567.17 446.696 1567.21 442.926 1564.63 441.817 cv
1564.07 441.579 1563.2 441.801 1562.8 442.24 cv
1561.13 444.078 1562.32 447.178 1562.48 449.432 cv
1562.66 451.89 1562.58 454.37 1562.34 456.821 cv
1562.22 458.109 1563.41 459.258 1564.65 459.304 cv
1566.05 459.357 1566.95 458.286 1567.13 457 cv
cp
f
1603.89 450.602 mo
1604.05 449.406 1602.92 448.585 1601.89 448.44 cv
1599.76 448.142 1597.67 450.634 1596.28 451.988 cv
1594.66 453.565 1593.2 455.29 1591.85 457.105 cv
1591.07 458.153 1591.59 459.786 1592.64 460.431 cv
1593.85 461.186 1595.14 460.669 1595.96 459.646 cv
1601.3 452.97 1603.51 453.554 1603.89 450.602 cv
cp
f
1308.35 507.01 mo
1311.95 485.369 li
1292.27 485.369 li
1288.68 507.01 li
1308.35 507.01 li
cp
1271.57 539.936 mo
1275.62 515.815 li
1264.51 515.815 li
1262.08 515.815 1260.11 513.845 1260.11 511.413 cv
1260.11 508.981 1262.08 507.01 1264.51 507.01 cv
1277.33 507.01 li
1280.92 485.369 li
1269.05 485.369 li
1266.62 485.369 1264.65 483.397 1264.65 480.965 cv
1264.65 478.534 1266.62 476.563 1269.05 476.563 cv
1282.62 476.563 li
1286.91 451.71 li
1287.28 449.599 1289.11 448.056 1291.25 448.056 cv
1293.32 448.056 li
1296.04 448.056 1298.11 450.497 1297.67 453.18 cv
1293.79 476.563 li
1313.46 476.563 li
1317.75 451.71 li
1318.12 449.599 1319.95 448.056 1322.09 448.056 cv
1324.35 448.056 li
1327.07 448.056 1329.14 450.497 1328.7 453.18 cv
1324.82 476.563 li
1335.93 476.563 li
1338.36 476.563 1340.33 478.534 1340.33 480.965 cv
1340.33 483.397 1338.36 485.369 1335.93 485.369 cv
1323.11 485.369 li
1319.71 507.01 li
1331.58 507.01 li
1334.01 507.01 1335.98 508.981 1335.98 511.413 cv
1335.98 513.845 1334.01 515.815 1331.58 515.815 cv
1318 515.815 li
1313.7 541.396 li
1313.35 543.516 1311.51 545.068 1309.36 545.068 cv
1306.94 545.068 li
1304.21 545.068 1302.14 542.621 1302.6 539.936 cv
1306.65 515.815 li
1286.97 515.815 li
1282.67 541.396 li
1282.32 543.516 1280.48 545.068 1278.33 545.068 cv
1275.91 545.068 li
1273.18 545.068 1271.11 542.621 1271.57 539.936 cv
cp
f
595.304 1025.88 mo
583.464 1009.57 li
563.312 1010.07 li
561.016 1010.13 559.651 1007.53 561.002 1005.67 cv
572.862 989.369 li
566.157 970.357 li
565.394 968.192 567.443 966.091 569.627 966.802 cv
588.796 973.044 li
604.805 960.792 li
606.628 959.396 609.26 960.698 609.259 962.994 cv
609.245 983.153 li
625.845 994.593 li
627.735 995.896 627.312 998.801 625.127 999.509 cv
605.951 1005.73 li
600.201 1025.05 li
599.546 1027.25 596.652 1027.74 595.304 1025.88 cv
cp
.588235 .85098 .788235 rgb
f
983.957 667.578 mo
895.24 671.161 li
884.775 671.583 875.949 663.442 875.526 652.977 cv
873.509 603.02 li
873.086 592.555 881.227 583.729 891.692 583.306 cv
980.409 579.723 li
990.874 579.3 999.7 587.441 1000.12 597.907 cv
1002.14 647.863 li
1002.56 658.329 994.422 667.155 983.957 667.578 cv
cp
.980392 .878431 .698039 rgb
f
996.891 611.09 mo
1032.79 651.362 li
986.646 640.44 li
996.891 611.09 li
cp
f
912.17 620.359 mo
923.519 619.612 li
923.519 619.612 937.32 608.237 937.577 604.438 cv
937.834 600.64 935.105 592.757 937.277 591.647 cv
939.449 590.538 944.113 589.519 947.323 594.379 cv
949.653 597.906 948.493 611.247 949.871 612.069 cv
950.732 612.584 957.267 612.338 962.038 612.082 cv
965.176 611.913 968.143 613.501 969.747 616.203 cv
969.752 616.21 li
970.836 618.037 970.494 620.373 968.932 621.812 cv
966.5 624.051 li
968.621 626.604 li
970.2 628.506 969.947 631.325 968.057 632.916 cv
966.129 634.537 li
967.573 636.032 li
969.434 637.956 969.21 641.07 967.094 642.708 cv
965.375 644.04 li
965.666 644.519 li
966.874 646.511 966.359 649.097 964.479 650.475 cv
962.751 651.742 li
932.523 653.729 li
929.691 653.914 926.852 653.52 924.178 652.569 cv
913.432 651.51 li
912.276 651.396 911.378 650.454 911.32 649.295 cv
909.983 622.817 li
909.918 621.538 910.892 620.443 912.17 620.359 cv
cp
1 1 1 rgb
f
2822.48 643.878 mo
2825.93 650.65 2833.3 653.87 2839.08 651.065 cv
2844.96 648.217 2846.98 640.244 2843.59 633.257 cv
2840.21 626.27 2832.7 622.914 2826.82 625.762 cv
2825.29 626.505 2824.02 627.603 2823.04 628.935 cv
2814.17 608.883 li
2848.2 603.574 li
2863.37 637.862 li
2863.37 637.862 li
2863.42 637.981 li
2866.81 644.97 2874.32 648.325 2880.2 645.477 cv
2886.07 642.629 2888.09 634.655 2884.7 627.668 cv
2881.32 620.681 2873.81 617.325 2867.93 620.174 cv
2866.4 620.915 2865.14 622.009 2864.16 623.337 cv
2847.91 586.612 li
2847.39 585.426 2846.22 584.711 2845.14 584.909 cv
2802.73 592.682 li
2801.32 592.941 2800.64 594.615 2801.33 596.164 cv
2822.44 643.892 li
2822.48 643.878 li
cp
.313726 .74902 .647059 rgb
f
3070.68 768.363 mo
3042.1 755.847 li
3035.61 775.577 li
3026.16 772.466 li
3036.07 742.339 li
3064.47 754.779 li
3071.72 731.441 li
3097.86 742.335 li
3108.6 719.376 li
3117.62 723.594 li
3102.83 755.19 li
3077.98 744.834 li
3070.68 768.363 li
cp
.52549 .694118 .94902 rgb
f
2169.33 560.04 mo
2167.31 575.934 2183.86 588.549 2198.58 587.554 cv
2214.86 586.454 2228.66 573.108 2231.04 557.116 cv
2233.62 539.806 2223.22 525.963 2207.13 524.694 cv
2191.46 523.459 2181.45 537.401 2185.97 551.47 cv
2189.21 561.557 2198.42 565.317 2203.06 562.534 cv
2206.67 560.364 2206.45 554.895 2202.08 553.929 cv
2200.32 553.542 2198.52 554.52 2197.58 555.866 cv
2193.75 554.345 2190.11 547.37 2192.58 539.839 cv
2195.74 530.22 2207.9 529.669 2215.46 534.156 cv
2225.07 539.866 2226.58 552.163 2223.06 561.962 cv
2219.35 572.251 2209.25 580.355 2198.25 581.136 cv
2185.79 582.021 2174.82 572.468 2173.82 560.055 cv
2173.59 557.124 2169.69 557.195 2169.33 560.04 cv
cp
f
720.823 706.351 mo
772.874 716.044 810.243 749.822 804.289 781.797 cv
801.312 797.784 788.067 810.293 769.061 817.594 cv
781.406 868.671 li
743.775 823.745 li
730.038 825.459 714.875 825.049 699.26 822.142 cv
647.209 812.448 609.84 778.67 615.794 746.695 cv
621.749 714.721 668.771 696.658 720.823 706.351 cv
cp
.980392 .878431 .698039 rgb
f
744.657 776.614 mo
736.669 793.249 716.711 800.257 700.08 792.267 cv
683.449 784.276 676.442 764.314 684.431 747.68 cv
692.419 731.045 712.377 724.037 729.008 732.027 cv
745.64 740.018 752.646 759.979 744.657 776.614 cv
cp
.968627 .8 .498039 rgb
f
696.153 759.183 mo
691.882 768.077 695.627 778.75 704.52 783.022 cv
713.411 787.294 724.082 783.547 728.353 774.653 cv
696.153 759.183 li
cp
.937255 .937255 .937255 rgb
f
2649.23 549.668 mo
2649.23 549.668 2669.96 549.889 2687.36 537.466 cv
2704.75 525.042 2717.62 502.597 2717.62 502.597 cv
2688.52 488.626 li
2688.52 488.626 2696.03 519.162 2649.23 549.668 cv
cp
.980392 .878431 .698039 rgb
f
2646.05 534.072 mo
2645.4 551.659 li
2659.51 562.168 li
2661.12 563.365 2660.66 565.887 2658.73 566.435 cv
2641.8 571.246 li
2636.17 587.918 li
2635.53 589.818 2632.99 590.156 2631.87 588.492 cv
2622.06 573.879 li
2604.46 573.674 li
2602.46 573.651 2601.35 571.339 2602.59 569.763 cv
2613.46 555.92 li
2608.21 539.12 li
2607.62 537.207 2609.47 535.439 2611.36 536.129 cv
2627.88 542.187 li
2642.24 532.009 li
2643.87 530.85 2646.13 532.069 2646.05 534.072 cv
cp
.968627 .8 .498039 rgb
f
1829.1 415.661 mo
1828.38 405.268 1836.22 396.257 1846.61 395.536 cv
1857.01 394.814 1866.02 402.654 1866.74 413.048 cv
1867.46 423.442 1859.62 432.453 1849.23 433.174 cv
1838.83 433.896 1829.82 426.055 1829.1 415.661 cv
cp
f
1861.09 468.933 mo
1859.97 463.459 1859.28 457.601 1857.42 452.327 cv
1855.81 447.791 1848.73 449.176 1849.09 454.047 cv
1849.53 460.013 1851.4 466.062 1852.65 471.905 cv
1853.15 474.271 1856.28 475.369 1858.35 474.642 cv
1860.89 473.753 1861.58 471.31 1861.09 468.933 cv
cp
f
1893.42 445.562 mo
1887.17 441.875 1881.72 437.307 1875.95 432.948 cv
1871.44 429.542 1866.58 435.404 1870.29 439.451 cv
1875.62 445.264 1882.6 449.806 1889.35 453.784 cv
1891.49 455.043 1894.46 453.813 1895.5 451.708 cv
1896.67 449.348 1895.56 446.823 1893.42 445.562 cv
cp
f
1881.58 411.791 mo
1880.17 412.927 1879.88 414.558 1880.76 416.144 cv
1882.87 419.979 1888.24 419.789 1892.05 419.659 cv
1896.03 419.524 1900.01 418.715 1903.77 417.432 cv
1909.33 415.534 1906.31 406.906 1900.73 408.812 cv
1889.82 412.536 1885.69 408.493 1881.58 411.791 cv
cp
f
1875.57 375.11 mo
1870.08 383.143 1865.6 385.855 1866.29 390.276 cv
1866.7 392.861 1868.75 394.096 1871.24 393.53 cv
1874.19 392.861 1875.8 389.734 1877.57 387.539 cv
1879.26 385.435 1880.92 383.325 1882.44 381.083 cv
1883.81 379.049 1884.01 376.416 1881.99 374.664 cv
1880.31 373.196 1876.97 373.07 1875.57 375.11 cv
cp
f
1854.18 373.719 mo
1852.43 368.849 1852.04 367.078 1849.76 364.815 cv
1847.79 362.849 1843.61 364.104 1843.33 367.001 cv
1843.01 370.38 1843.72 371.635 1845.56 376.751 cv
1846.4 379.072 1849.05 380.366 1851.39 379.545 cv
1853.71 378.73 1855.02 376.047 1854.18 373.719 cv
cp
f
1831.08 385.5 mo
1823.16 379.486 1821.55 377.792 1818.44 378.12 cv
1816.62 378.313 1814.57 380.063 1814.97 382.109 cv
1815.71 385.911 1817.92 386.944 1825.2 392.253 cv
1827.15 393.677 1829.83 393.749 1831.52 391.814 cv
1833.02 390.082 1833.01 386.968 1831.08 385.5 cv
cp
f
1799.28 413.063 mo
1796.17 414.718 1797.42 420.11 1800.8 420.552 cv
1804.04 420.975 1805.29 420.455 1821 417.586 cv
1823.42 417.144 1825.42 415.37 1825.24 412.712 cv
1825.08 410.457 1822.81 408.03 1820.37 408.471 cv
1804.05 411.415 1802.41 411.402 1799.28 413.063 cv
cp
f
1823.9 438.768 mo
1815.29 447.103 1814.03 445.631 1810.63 450.728 cv
1809.07 453.058 1811.64 456.773 1814.35 456.276 cv
1817.82 455.639 1818.75 455.053 1823.28 451.464 cv
1825.92 449.378 1828.43 447.143 1830.85 444.814 cv
1832.64 443.087 1832.16 439.848 1830.4 438.316 cv
1828.39 436.566 1825.7 437.032 1823.9 438.768 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Multicultural people standing together.eps)
%%CreationDate: 6/30/2020 10:42 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6fokXC[OC;$*O5TpVW^*5J4*=4oNaaK!S',n!!+PPU'.R*k'FNL^4,R0_u9[,p_Srt*0.Nmk8W"O,A3kV8-4?W2B/U>S2$F^
%7cqe>jQNnc@S-+]EL.^?;uE7"K?'#VK8)XY1f+5$5QnsRDu[%D$>c9$Y/(:S'H&)<0R,t$(-sV4`riQ6p_@V7iB-WC1S3,"^;EXB
%BqF@=BuH,47ZRun\dtCZL'NInpcf09Np[<ARq+8+b-;qMj+S(.1Z3p&6f6lk.lCtMmaZ^7AqYtk$k_]MIgbpq1BlTcT&G%g4k2$B
%^fLtW2?VtD87=HCH9NVs$i&9l,_CS$pn%s"E'+9[KEGYA0\G\Gg`J62@lQmp;DB@\(^LB5_?J\I6A.Q/hLpJ_(q--V04:Ot"r\(5
%C4tR'd6r_E`2HMJ%tT@`g[Iq)+p/N3[L0n!L&G\,iFNr8LEPN7+4(*8K6[cZ4+Q%<r1Hai+sP-?$Od:OLN#5k!aCQ7@"U.`#Dc9_
%n;7or_'q]ckXU+F497H3@/rJ*PgL(L$pP:kb_:[:Cd:]+QZ3Wr$EZ6iZj;=PQp3-;&V+P6Jm(#4/I4m-#mlC"%L*4n<j<);gB8Z8
%4Fh?`'Cb%2pa.D<ZYDi3:n-BhRuhAe&=gN;>/T&$0'<uQJL$#DoPp[rb>t@?&?$<iA(O&\!huocDbqASE>XQR]Lm$[oG9ZFMF8R9
%K@a\$`'X:tdL6HY.0p*G"HaTgbl^**F9<D[@*Cl&M!M9"*&_=CC-uH$b,>mapl6\A4HcQc+eo>Ir[17hL-f`rUeDs-,km3>!*7N5
%0WhQ%P!TG^$0/6!\`=V(CO`??I<IXbkS_R)?Q9Fu-1I*1/I\O-o,/%<bpO9+QquA;ac%Pd4_$mtMrUHV!F+OpNdsh_ICX#"m&8Df
%kRW"h!l=s:H#YTMn:2*q6Q!'$3#)jIr?Og'buRl7q42*rL_pI-h.6`23%'D_KDc21>!*A30_&.h<1e5jE&2*=J4e3MLILN6iO]L'
%>-,<VEATGnkV'YrPouO&ct?t+naP<RnhFSZ/[59d:o:u^d#m6!P3R]<2u-Z7=MS7#'\Nk]6AbUDdL8M:KFMAJUS.,YJ&,*9P@?6N
%I.\stK&+:=([-rFX9#M&("b]3NY&u/GsXJ63LmatG$"YI?iEJ"J/&jeILsE7,h,7B>=iP+;"1/H$t.=r`f(_`!QUP0aP7WpXYerq
%ZK#hk+$hn]iPuYZ\hW\k*8d*SY!/LkTSrV6+q/nI]&H!XFppJ3m2oEhZV[^Bc,%<1^s=CIEKC.e+8063D_hSO/:fO3:E9X$q?[)h
%_>h2*4)sV#T4*&]V6;q)p1)%I58\bPY2Iu/@H./,r#[kJQN6eNJqr96dLY2eIoO3+p6?Zuc>`[aia9>Ud,V:fNYWsf`_tj\0eF6h
%K-)(j#rKZ<BCHoJr[1!%,\S"ps$5KBhGE2:fEh0fJ=$W;SI&[VZbM.?cp.lJL(1M/_K9Cg&V=/KYS0:q8.V_)!6P[WSp(Xop,i&"
%fL3fZ6e(*>;=HZcTd=[_M-<MtJ?Kjq8<M4+*`Ed:]?"u5A2JSJbP]KKj9.UbJ<5m2GGdYX5F`?*U&i.2K+%INLdY3g(t\O@C@`E,
%*MIK3dTGS1JVF_<nUMl1L18=\Md:nCLj]IFmr38[W(dge^^VeKTO%p:!YQB4^'eCX0[#%3dPPWhKQ2,c10U&@#DOSOF$Ird_S=M+
%`!pF0/@^3W%Fh'o[UL20,QZ\T31ta3$C8IlFnE1#)_",%5XHG5lL6WVC%Q,.j4M(2:BkXuk7U&$gqgiRpgmJ`+H:eXPOO8ph+F3W
%G]an*%[nh].e/4Ib:FJ+9SjHNLF6!40K=W;]olJAq#bA?S-Y5bckNUUr)*W^9TL@OAUuqlnC1ZN)Lp,?cG37ggB&t2bRVYqQ+G"r
%6&9Dlbh3jY\nYKlQG=^<OB<]QO+9n+,qT8ad=QbuEDG*TC)Fc&#Vb?@UrTet[)=]h@H08<A%<IN."'54L'[Qr?R]?59EDiQYT4SU
%e&&R7O.ljUT-J4^*dRf^"h$Rd0d%l`"2L]Tct\rnJE=?D1I_q/_,hW&<Y+04ll1m6_*^;E@2=X7f)VA%qb!O=Bl5Oh%2cN<Qta?q
%l&c5U7^)l7+#H!-Yhdtt#;m.L^510(au:>OHol-WrmX6NTDKiV=_oCpaae9f]1HGC3bX(0q]^bbH&euS]pkl?Z<aEgTn><.Zs+V$
%LLq34F.k`%a\[cGboO(>::;]8h]"kn8J.?SSC;!/(P$ig.UF[9S")B"AT@kD0aE<[@jP.Eq]]q%2eFTHN-5jo7<#L1WFoZiT_Ckp
%Z(%c`HrTLWkhgLp,mW"8CpXD,D]AIh,KVcd)%G9/\$LQ;P%jE,Tu5s1lq3&.)s_Kcj$PbNlrZn*Q#mT7,=IaE1,AV2K;seiBN]oS
%H+p*Md=e-d9MWWMq*h&D_920HpbGOh&3Zk1#>!,hPrg6(N[9quS5QnIO&W80clbO5Y'>,99'/#EZi=Q27pY5@b8jnAVo+7\Ek,+$
%GKT#B\_JX#qlH[QJZk?^kp#:]E]F[#"gU.:6l^Y>QXYDV\Aj'enpgT("hJ3fG=:&DP2%_KpiV7WdoeWIr6D$rkdhsN3V^>PC3+GJ
%:\B>hgchK`4?]<3=aHUdVXC\KAf^0feRR1BHaN*bB[C8>]6cC#qPM<L>;*_BRkh<%Zf-`'H54hNPd?m4TeP9Hf0Q;ZrtoG4/IF`6
%NRLfFPi283F#s"`9]na'mP'V1XcFS.prOfZ&/jtZ8p.9oDiV)MMdne)%T#=OBHd99KHE![4_1ZRfc,M=ktCX.l&>TUIB+\bRW*d>
%')^G-UVCn)jf^hE_mhlc%R$j'lCpUp>//B#UW0Y#=]o*cbPga]d?(5?=c+/Y1?d-QGRiSaI^6i\DnRK:fW'+23R?kh3=a:8k_N`'
%IN?:U5l4G2*Nj7X<<,nC&3+JEZt-#+!C,e8Gc8[P%ejX\^Y0n--Tq=Cqa=UqB7gdPdj(6Tnr4VN6Pj1$SDt,7s3Q/ZB.CTe0dQW1
%BS@&p%-6JH7Q^Gog=MS00-/#GQd9B4cUMsEYI)JCQY[/G*iO^G_r'O=k'8R*0[*lb(@"ZX2SR&=%G\#EW3AO2fsr/a/-,F6COVOS
%=^;eLf(m9?1ED'-RPe529(nJC62n07P8>PJGf?Qj7sfc#aO`1W-f]?B`p5.G#LmhCk@D7)2&XaWfFP%Ki7NV8XL=/^QK+CjHT7kl
%X![TRmt1Li#NKr@f"o[T4TXTJb]QTTpj5'VIs>W'F_i<&OgFuk40ssdnJq?."^:e^jHE(%nUs&t9DE`$3Cg;hUod"dNlH5,+m.^L
%3g)N>d*`#B4D))-_kCFIdBfFQemr.[eTEFGI@e1G-@>GE)0S("kRI]ELT*U9Nmd$JB[E<1V7*/?F>1VlY@6fMY'@RJ@.[Jq%(?4!
%BT%-)Y#\%em<F$.:VK;<T/KIB$,:=Hiiqg>/m01jm*Kh)ngNu(d#h*Gc`G_abZDPkVl+Sl;NKp!I62V^r<ZHDP`h097"0gqfL_P>
%IU>Lkg`Q/IXY<7*%;3&@Eup4#q]\VP4Ikqf@Te/@2!>KB=3l"U,1O?J&/^WSl'OWi/dm0#<6rKcJf_-XmKre^O+BZ+qkA^Q`sf*1
%BL[d>3q-4@FV(n]h-1AfA*1.d^93i!K%h(j@t(Lll?#)Yd<s.**Q@*%!UhnPTZ?Cif9"h'C'7o%@Q%$GZkMOD'"#qcg52PZQt%RP
%S9CVH;LMT4Af^eSs&qK]:-TV@S6Jk_>VLADHVsFZX^c?68%od.7qd/nHVscZ]Zq,U7Ho2r]dS2_3UK6qm7$hPGam/gPQT*OG&0G>
%RX7nR=i>r:[9mW$MB65e-)*Ts]dUI&ETjahX6rF@I&4M)HAFSI=oU9ZBo[1/N@n@__J8F9QH+E!Sus)?-V5<8N>on_LgN3#I?*5Y
%h-ZO#[PI&1Q.Aa6&07PGdSoZtQCE?;g?$u%qUV:P)V36j139a:T<W1mafal9_9&jNm+TRa*JIeB$K.CP\9852%b[p<:e=G`m:=a2
%B@Tbng*p,c=gaGnq^PW@^*;(\_ts)#Ys\g)IWS0TW"oA/e*-DPLcS6T*@s0EUXM%tkY)OD"EeP='8`mXg;>:jh,cuKN'iU'PMp6r
%rN5aV:BU$=T[Rfel!T[iN-NSd(ln"S(3\JEHL+c2LGot&\g@hKbNQN46O(.UdWQLle"nmj`4"i%BlH60;OhWHfb7B7$+pXW2c6KB
%:ql3h./P_+#!>Lc#!</t0a%1e"n0;-;=MBjCQ=,80*D$oNA$&&)L\_0.f:).])10QX6YP\O(K'?5'$WC\+(QG3"CB-IsUeOi6RX'
%ZMZ($*pr./#="[H;inRkk?<&o#OU2.%7,;+h,.>V*S%BfeeT170Hea!&d'.2BWW^4BF#S9%9g&8d"(R>r7=5e*pYoCkCjtLZ;jES
%*H_V`#O`UGJXm6>bY4(u5?]0)M_8B7&l/!7(Eu$lgXAa/dn.='qX6(As8C&@nt"?]&(U$<epgK]^Sgb^?^9rJepk*8DXZo+VdI;#
%XoIf>HA!fa";]N*8Y4L\&%!$mi.\;^RdXt8pU')[l)7<Hbf9@&o-omc`ur5=ld;uF(Ah"<D[a\VJ*\MEA,Clr!:Y*g"e7V%<&`H6
%d&knT1j%SbYCPJ6e=a^Dc\3Erde/d""@$k[GNbW!RbhDm.I!_nX.Kqb<QL2q6Dhq7S]YJu==--.nEm2KFt/]Hb%0g`9!g6*bW#s(
%6m`7g(Ye,J^U$&Cbb>0fNUd-6em-fje^*qtb!S54RIjkQBKjoAKg(27/g0nbKqo3!(_1rA=[/+dm^Z#T@8S2B%&9]5mS1fZM+1VT
%hi:V%JMI#D'pV_fiLl)>dg=J(hHK\c-O1,_lQjWZIni6CUoP'=hILO-lL6B`d=.h<]\_^KGW?LF:5,$5iT4$`3>GjqKpP`sAZ)GX
%AJVQ?,#r&JrT."'3T(><<-\44iFRLYdb!18F"dcnL6V0IFTq#.3W-]p,ehuhg+R[)`%Nb]mF*g2pLP"a/ibms2K9<*#S6p?#sE;g
%oZJSqg+QgshcP*tIdtV<1r6H')U3$JgJ?,bJ;s-A3?AA6L[H.s_G*`#mF8uL`D:*]-f;FPSNGZCoX/REqLi*L[kF:i?eUj8-B#"G
%JF;uXS:79rhrU#qYB;=%a5'ps;u$Y3&fgjiFr`d]g"#UcV$LaAWhkIT/^(,diQjl`*X?Vspg.m]bi!:KR''2JHu*l<MJ2p3bQ5FJ
%\mI623&JbT_I\hh&]uOi4,+.QpLBNF)EM9um2T:2m`XYL!BoNA_00tgXHVT97>qH^l6&Pl4LiFN:`g9q!l@+?K<%&Ql*BDL*TID]
%!V041322r*kj'(Z02T^96c5m`ENkl!Z-E)C*TL,>3&JaIl56E[`f\b*@"pS7F`$%sj_%pD5O/VtB1?rD4KE+E[b,IFA!Ys>Kr!!i
%hT`AK,'6dTNojXebcBc5Rl3E@EWYheB>trT8W=(+?aPgg`f-I2[-F<AaoI*1ZCJ)Xi<nds&Z=g+T(.2-"X`;S>u\ps%s_o\DKoJK
%`7%.BHe`kIa!dPI);=<Ep3Y*sk1/up1c&H60ZELAMUQ-.g/DYQQR1mRWd4_2dUU')fY/d0P1MnrqR_pa=8_m<[6_R-nC*m8m5YFL
%ic,_;F[`!ZSu&#24kWGcio&NS9=:BRjE2r:lH,""eqPh`j;c9r00Q*Npi\;R,TQeqYEb#`C#)U)>#>!'$OX4G@G.n;-U<9t<%T.Q
%(#t@\(p@EseW85>pDKSEGqQ#@7%CQn;`8jBk"aUbToa?<jpm6$UWV_@7$+<_mOMgh?Z:AEQcnQ6g_=a#k70/9dil.u3d8@Tifq`Z
%d^`:;GF7W"n8"kA]#ZmpFO#MgJV6c?&Vm",h=5m%0@5"rlRAJ'$MiIYqdg'S61jD.LA`L!3Y0RZaj7aCrOiiAq_:n@8fZg'&pknl
%lPQgtF$[fpMU<CL=2ge:O0gpY1Q36jYP8F[@;"IA\n[qfff)Z%Q!/doQeq!)Abi*h7lolpQ>)S9MKb;k8?X/MU=]3"YAt\DS;tUh
%:!n*Ll*"[Q^ARH]8\[c`k/Z][]_,eAl5'7p\3C2/Nk'5Z%tf5;=aN/[l3@-[:\QMY2*/+I0MVY^0<0-\Q^Q-Q*o18sP,/:G-*TU%
%L@3rs4W;)2rtfmopdHR??cUrss'eK>?&N>gaF+A\e8Z]D_gtTEbM=r+I?B1fcQ;N8q,QBPL.*g`=l8MMqc=71)1f*Sg5e"Xqs*^s
%.5EmHaP^"3d!IUsJY$Z5(6iJ3SFC#X=-BrIjFFRm`F(om"Kj[D"\#>^kSFFlVjQ\G&#:AniM-m?55Dh\#OZ(tqihW(K)a#HTMr,m
%HUX^InI;n/?BGTt!prXoo['8=Y-4KAE6nXK:^]`Y"+JmCcsqHYHaLInD1AVc3ptu(79X)3K+XmEa!Hbg5B?+l7^JO4jN0D'YYdSE
%a2=S/d%-pQ>rm)jW8C>j]O1SI#(6!$LTbe![_D8K/'+V1)a)WCkLURHj,qA8*Q:lj`#$)(kA1$rps/2'NcC'SFNl@o;igBRU0mkg
%Du4W&7t*2?L^)]"\C]XeCcH=JUq`DU/\ft5/UFHf&Jou<@-8'WC#qYHl'<o88"J=Q]MR9>f+-P/I')VrX'Y>dlVGIdEt05h*>on=
%iTn<eP2Z3D[q,EJ.aq_FWW%h$_sVU>+7UWjT879sUoGHO@`atk?jE#2TTkn[ltYf=Yu#HDZ8m/nJF!$Yi1l7/jatp#RdesAdEr3K
%?cfQ>?+]P[6B2fS=T:?;$.%hD*pF_7FcnHB."`arDtTD<(!q<9-Frr^;a3l1ns,H`9,TG$=')a+8^6t2B)'t:AuWI]%RDNR4S%8A
%kjc$XkEckm;!1%ZeJrsup?An+Vo$J<1enb6IO")Ul!op!d$D-da.4uUn($%=(<^'k`UXh)i0-BWA4[PVXHafMQTp4X^'hf]>$(X3
%#'rRZ%!eZ;;bWf(bFe_+O/iS5()!7i\2ef9U0fYV"%mb42If8aoBF%eTuV8I&I_[5$c]^BTg='pVE'\(M]P[rD=TgP"0_=A@)HKH
%_r-da"Gfkak805W0g8-Zed*;Eefc5F^bH8rK7=2I^X1:KITUu`'P7f!+nuaFa3-4;`u'5VF41$je:@g)m0.1K(!mRMAK0uL_D+\+
%bYX!HMd9*Iml_,pWIl!?'uUACPF&)^AB9hg?j$L$nqJlh$qSY2PH_l4Mq%\apo+DQ]n>eQ!/rU2$r8ODU&,dR=GLqui95cdT^CZ6
%?WY#!V5E2>s6K.R1Ap`nq>:3hqnN.0+927Gs8J(os7>^ZpRhK_nPFlA"b\B>dr'H_BTAM*(m0b\>Q;5#:Nb$53YP?3)fQ)rEW6j9
%V"2??s/:&uEQNZbXu2CalfAnA(;oC^E7M-.^k[P.n0S^^0J!V5^#;eDn>#H(i*Ba``a4]<6,J_EiAbC>_,k@76dYH$ZV@2b?pObs
%?W6GoeV3SIK#1@::Ju.&PTRrm)Zh5c5mk9@K&A;9^7djo8A1W$"oot+TV$g!JSp*hcn"#_(meSiB'#3[3e'+_"\HW@K#C4hWL,WS
%i(GJSKgTf5iYS7,4G^gn,LQl,=.iAS>=sk`;J<^2JAa,S,+q8%0J(WdTFais+;'>@#a191.#JR-:^AET]>XkclpO*i;Y=^S&L75Q
%!(;Kq_kMS[N.Ff%PWB+tL=AL?i=P,^,A@<03-m-+qGIW)ok^I*_-dhp:e(Y];<27I#V\MiJTNS4Kd;0QN,:tWI'u?STElNm4Rl?\
%JARRNO?`oi+;tUF+MK$'#D*+B"n2tsXI_"G7c8`cKHd*\S3Zp?KeSZXMAHW[8:D6_n\]>L+AsVrja=m38AUtc8Q)N'MC49!8K^S,
%/6F$jA6iTZ4+@7pi/0`Y*-is>M04_H1<pJ?/0o7r!'RAB(\!'fJ929LZf2IO"<@bcinX+X;V?"E#`TIW',ZR\9E9?2oK^71mm;!9
%,1EsJ"`_*bW'<mCOQtLp<,;ZA9sqgdT4Js@Lt81N&<QuQf2;!f!9M9!kUi#.!D0+59`V2K"VF0H2!`%=*&=K-P3UGu0gR;3efHHJ
%L2dVq8i0%hCf$1$bjS'!4"/5`"&ftjC]rl&BosM9&`j5.V4][Gnl6&lnS!ai3"LZQbhO<N]D%(O;T+?!";2Lti?@\5RLijPBZ`UI
%KgDo`,DB-P?2e62*l.j)G+8\uPsQ-;\St9m@NpRrPD'\nLh$V`6j1@Vj\S-F+:7g1d&)BQ!iHhE8Q^S-h]ir]$R6C;rV2KuTTG<?
%#dk#B4oH+5=+sWPCoNRsR.-"ifMD@?Y^EDSa>A`3(JP"Y&V\^C8+%Or->i.DLo-JA`HTKRmW3r,)2)^.6XN8m^E-g@mCtHV!,3[(
%f_@@>o,R,^J!-^nWc,:!8/,Y1c@!QhB,Q"",",)I\+g#Zl0tIB3!-gU<DGG7euh@?i+44o?e*Cs_P1$aYdChSHn6k]FZaO>:(,P7
%c>!jiL(AI1Sh*Af<IR&V<jgU8r9;bf7s4k`?tk7]>p5g'@$_kgI1X>Wq=3kS+FrMIcB-_)9.(Y"!q^+T`K)faCJE(%dO/fG/f3fA
%)1&*jGN"&.-q&O9D\aJ^@44.3ZSS6!psB,0^L+"8OXUa_>L8-,6_e!ertY.&Z$S#"^Nr"LCFW,,IiNuf++Y`1Ebsq)QuN2F0S?RS
%d+fD"#E569X3i=2TEeo;r?33"rP<Z$hscX1+[I.PBn7u&V+?L!8`%bQH"[cH%YQBo*t&8Q@A2M1m6%[%%c]e["*Q'2o@rJCo.pqf
%PaUC0.^8m-X6+(Ll\uB$S3V6qgaJ9DkMtu=`"Tr2*Q0p,b`(tA5jKd+-N(c60mBI/M(Y?_6)1W8MlE0.pbpCIRE:tg/rmbM>"]6n
%iY\OsL[O,%L0XPaa\T8c68_h-7>.QBIZbB^3XOs@n&ttn?^pI/&]P7oX<jY@CHO\M+^WjfF,ghHF(p1O_bMR!rN/Bo_Zersr]gG^
%YJ:,/TE"lYs7lKkq>3DVrf;R.*sV5Rs8D]l!,qo#J,]1lrbi!cp@r7DFoW0lN0P^Ypk$.^Z7^Po"bL%^(dWf&^nVLm)6V*5`PID+
%XhfusJ2$V_:ta37cp2um(L1g]MUS@TC\+p[Pq%>dRri]PK=JW,JXZ!*V,a/7h<p08,,,Z4*NG5t-i?XI7s"%6Q;J$jgRYS*KkHXa
%lL:=J;VG[/OIXXA6_0go(kMXD;>6M1ij`EjfnSIQmgT$fbg71$q.)Q<468JK`Y^sAJ8.=7csahFShPb)b)YW>lA4*8N^+.Zih0`Q
%CKrBn!WcnP?gWL^i4Voo>\k5K\"k6>"Gi.OD[$9%DQXqe0/-&bZ4g>BQ>=QLcl^aA`T:U^#qI+8:>jY>E7,j!00pCSi&!UrSXq`?
%m(sL3X9m+8&Un@$:$0ci+kpR@FIVCEff,0&5etRc1.VH/'180/pZHXj1"?!?;H$V.FAnACd"*&j"q#nmcO@)s[Bt1?c3c?J/2\4-
%NM4VtD4Aj0Qrhq53hK,sddCeS:oYEY^cQ)#dED]8C,KR:6#bM\)QLT*T)!@l*pEJYU!jFjan["5#+,U7_G![j)A)o5]WaA#0<1rt
%/..=_FCumlW(Iuh6f@f=Ob09G#i>]O>3Re.&pRdlBO3lnG0m'&XIfL$>GG[2^)HE7:t^'q_%<G#?3Dc#0W"jV]\5-cgCR(4(M(<+
%+8diM!M,NI:4_&pQcuoJ-5A?/Q4p%2YnJh'@6*UK0Y@4TpZ_NbPd_3cc?k!F6Ne_:`$$tK@qokhbM,]+o:GuQ&LMI*BrZfV."p!c
%+p=:eD"BR%b-XrC9b<sq9`gcI$3B>R%[.n,3G'Wu<)tku#Y%CZ5[Z`S;R^Pfk[bI55S__Cj-F9U!#AK1;(S-2FPp=$W["%1gDQ:T
%F2k;N'GO9=;!K<e-b"1%3MZ"XTnPn8!MU:u_CWF5.Bnp"*!e#RG0Ce8^t!6$-"WbAGfCXeZpQLRdZ0MtbUYou1e\[+F,jJK[TbG%
%+9M%3CMKlT^BVRjkS\&?joJPW+.=Z'3"9Od3[5=p$<[,q-CjB5[8(=-B*(;&AuG`uX-\2[,kcOZ6_A0C1VYa$L7(aR)Y49*dSg8%
%>%jieB(^0YT&?=cZph_pJ5!ika;!LZ@s0m5kiHQ=pA9O@34ZXSW.[$9M\t[82JS=sP?W4QMK&ol>)EVXKlp)1<DOa>;N+uWS6g=]
%:)?>P,R&MIPXKBTAKrS%E)7o0i=,W0,?LjLESP.)CbQlYh#1cY*%O^,+[V'l7:KHfQ6cF-TU-[I\"&dJXG`L@E1LGRoCEDh?FN8d
%0C3Y=()A#['UYS]gqp0[HTU";8>?(!&5!-OcP7R%0^KVQ;*`7/%q)I9='&Hp.b.'&G=h;-IRVe>[A5?^*05BmThTGEroNm)#9@.7
%1>ND()15N`9_j'Eb/thf=es-Xb[RMH'rK1"8$WF!`M#gC#Qr.PGGGU%f)_(?kVJCKB<3jc\WK9CVI=S3QD1Fk,.^s1X\'qOTeOl]
%(0GY>eu57c7m\%I/b.YS+^.JYU+'KNlA078ZZ&:?f(]BW+S7:0M1+[MQO(6n@7iKgNep"^=XNg?jr#d)6&bV>Qtp*M.(Y_ijlo\)
%'sE%dR^2CQDgNl$g^Qf,eH9$.K;`LE;jg'3fQ>20g47Q/%QFL-!Q()[d<VAOTH0Wa<eaVDP!rg<1Xmu0aHel`U&nkIM/O3N4l.:h
%L3>:t=X92@SFf<=mt_a6;nglTMIh9;3koZbD5m0APs#D9n$/D:@r8)gg1FtBHG.n'L)qjWhHG[T:@O8X!V8bli3\'*B<W#YN=H6*
%eF,:V+X41Hg'B<Q]tD.4."YJ8;`6u9J,pMV_I&3h5m(pI'iNTX`]E+nGG#1SYmCWT1r7O]6He5/!rfoddV3@2FhV]iI1`D6?Aj]j
%5VituaGZ`1<!&2%oL&pG,f"7"TLm"Z@Ig+Po@C^SE!,E,'h2Tjc6(`hfE)G&I`BZ6PK6B"25bJ]ks=Vg?W,GpC)a%N]7;pD5M62B
%%5eNpd4RCEG(=?U?C:JqBjnSIJ1ECJp#86,W#p=4Ve[*Q+=g(LYbSLdk^[!!6jKrD,b*pnD`mW7\K1B>"I]TZI_=5+6+H0l]pt;c
%:"#I3EYY#6-BL+nrR*Tt:VC88:Wlem1n\6(!L*$o3WoJ7o,7#\NPf1SoW$i^=W+*nl$s!.!4.Yh&;lml.`<0_DoIcsrMdT29t()J
%M-!i!7)Ra^-4&mG4?P^3&[]:WWW=M.86J5mPAF<N@^0JL-uaFcZ,5K7XUL^W+SeTAS&IZ)dr")7&Dan26pT:A7goGc]r;L&J\ZU'
%EG(cHLd4l7YuI+8,=A[l9JLaDM(WJ29-248./UBC:Do&C1d%0oH3c1,_&^m=,06On9n=Pi!q?u2b2kJbYUH>l7c1Ynm4q4]2H[ud
%)i]usYg94@L@:ePmB1,'N(u=VSmC2?&QUF-Zu>"I81GGjaX`_Mf*4+'ER<U\^//p_,^XUI&6sgNC$uhi8Jd8V)s\TbUq<s7;<q8E
%)\)%"fWC\U8A_tET>NrJYu)D><#uX*!k:1j$)uQlkhk`i!>mm";30M]mfHe*q-YnX4\u_mmcHl=E6E2hGbp8u%0Jn(f?jM/a9]SV
%$6#oKgQ+9E&hDI/bronl"m<=9`lhFd[reO&>G(U#%..ES0mC7RPjOOnJYt8o:+j<k)QO7^eRElbrKH2TN6l&qlETS[aN%?iEJqt=
%?D+naD`#i$Y-^O!2Dqf(AC7Cc90Gj4Ck];8XL1sc&kb9X7OC%BK5JH3`gE@Q%=f7nn@o(ECJC3\jN:X8BaG$rh_nHWQHq>grPuA0
%&fqV.%5np#)YEJl"kX0*_D-t+kqpM%%0d_TAo6/Hg?RUHs.dAI>)(eaZd,#`-@KIG6Z+pe;:TF1_EqC`j.QLF?'K-(I'8T'od9<U
%)4+"*_UL>$WIP<(8q&N/CQ?QsE/AKPWo>7KR?OA^o&WFHfVUecCFgGYM`\We]AQ8dOY.D:_$gE)Z_=:JMlQHlFab.57Ho/Ca`";-
%;@+L2)FXF3@ju&4gMLYjp.irTRmNDt7hRcVGU7;@.6lQ:$";\aE`o+LZJ^:a)8i>>pIsJ(SL(#6?>&9Q4ddXoQ\5mB8OU`k@0'As
%V>>o3EoK3s1t$1khT:#U[f.2JEq]SWUbXr'KR1kg1@Hlq^n\r@*:`,>d"L)f'dq8t>UFE5Q[7h2G5t@7LR$R4HTS">4mMb;krIEj
%HZ-<sb2FNtM=Y0D,nZPk8$7g*1=+YFh&\h6pm$2A<Tfe,b8ll-'&7o2QQ")r"6pJ"E9,94l/:Za`;,,S:@&5pHCB<M^[g<RocmE%
%(6'b=kl!'cn<h8U+R\L^*2!VQgKg@d-[9K(%g&lsH.(]]\l)Vt2ch2?]?-n;\MJ\=1(U+M%R#L6=BDq4*f-b7bXYS5HhJ4`?VB2h
%B=Y6l"P<6-=`.>++9@KjZo%7S1h?7P-'90kCa3#_'(o+sk86ih^1koc'KS\<22pJ:/j#KLoG2D+Z8'k"+6uDK[#YDX`[`dUa3CD>
%W\tK(GUQc/l/K8L0'`uPiAEN]iY-$d;ec6]Fai(nM@aXr$gKZ7[K)KMUsfaknjM>sf42n%G\ZFb4d(ERG0:a%@]j6hoXQhlF?KsB
%%1+,hU0\B:5_HI=`;obmMW`9]GNX2'9+aATcG#.K&J%8AB^e1IMT<&@,'2.m8KHX+cD04iX&gRkjbQ3PePpL=#!f"Wb9=O"L4J#g
%FU5qhd!%cc.ap`Nc7m_*!;T1"GEU4p].;A%?%-<ug3/c+gGdaIKhO"gC^rM4AF6Hs8N$l><.Q=fnmDZ]\rYPA[u:'F9;:u,[.SRO
%l7Kr"Ku-/i%t(8+aEA.g6,0eE'fSYO6n,sD!Ldg4GMT+tpSD+]&-b(E8EK7@8LY?a"VOAQl#roun>i"I9%)h&?a*-:0'iq<M7R/;
%HS34p.BF5BJ<rC<MB0[X2P5d`B;T4G1n1[i;^G-UlPJ!a(Q@jq-F@J/?8ecpe[ur8Ed$ceOWKVWa(u\VG@h[XE+;Qn(0uqgjN*K)
%ja=@6_NE-7Herd^b$KBM`HR3*XFM_L:uc&-RB4-"._0Z)'Z0@_FuPcUNZO9.h&qK#MBcVTX3Sgi3VJgi1sIc*+93<6%]5]:%kS4*
%FaXaZN?@ITmeHJFWo6"sSU6ZpR+gN'.iPoqnK_;.o"?kAAP$Dn4\mrP@4i<rF@DURFTgiKh#WeBiej!B9+.j"B403di2NR>bg0JK
%;6o^mb4sVV4XYF"ZPCPlZblGM\'6+fbD*1g!Le'GQ@3([A<M*,=%(>+7dbickM^5ipgIH95SJjH75Je/ZB^!CN7jA:DW6nu?./sb
%$>fgD5&bh3QOaP8,?e^,(BCR*PHn6<jc:akE$7tlVO+['.U5;'QYSU?"%3DK^gdRBX^GB+FJ/aI@&WQWZK=p?<qC^ih<`&[,HpRO
%'YckR`FG\c4\[iiM/etqYIflU,6V^m/h[U(gj(gA5YhtLIHO^cDcRL:'N`/a:gQquM+WIS=D&arg\+LP6D]^O?Z2*VX77`636kjZ
%GWoD.^isdkl$*VHg5ucuD,4Li^P`1Nb!mR'q@7sJ5ms)M/^[(o;'rI)dhli6`/o`2V8TO"kFNY.oOR5TlZ&)A+Qq*<6[8B#Ar/#A
%TrqE:M.e"uAKQcjnDh\-;$6rU;aY%]K7MI%NfrC0+Jg:,E*/2f:&&!.osR2>qG;5>%XJdhoPq](fO[Fl:t-m#T-?TS<nnC?iTN[!
%Nr.5i,nh2QV+WZ.Eb\VfN,OubDIKIh!RRcu+Z=rM>'5i26**t),_kMdI7.?m;<M#5!,.SuNGh_-X^VkINSZ8O'!\T'8t*1c4`oll
%">2@l>3UrKF!YQXq%XQW75JVnOk>P+#[H3(=4NN=BU3InW@2&X-)0bd691S.W\&Os_RbiRC')QM7NpL\8pM"&A4CUWP_h#J=Bh4+
%;,noWEep'\?bPfl%:ZBd+Ke'HJ@o-1*oCK;&TPuSqDi+T16IrI^;POk=XQSHUPdob,$<8cOgj0g0^%nRaUs8kj(,jT^B=T#j[A2p
%P0Mb)E@uh&6\$M%agV7SJp($-Z-9C'kIK0FktFLMRaID6]e:paS**H\A&ohtFW)Q]K*i(Z"u3%W?J-VthXE3iBJ*5Z%E*p[-d?ak
%ME[>I8cS:]KX(_,8M65k!&Pk5KMbm5],/On?@2n:BMpE/=W]S?P)WUaP]`7>G3)XTQO$eBMk$R1=J]XSL>l/',?[a=C+-BMU99W1
%2]thKd@$.u=Th&[4#cgXoj"M08qQYO;[:EPiMDpS]XrnQZo#31b:l/_14g2RQH9h[jj2dpC>n!?>&;M8:ron4/RWK2Fn<ITApW(X
%L6&H"JWMqiOVWRh5@JllSh4ZR8cXi5>?WI*,Yh%Omuu:,k5DHJB&?0eZo>;_60RXQ!F+Q%'NOVmE-.[OfH`nq%IRfX'i\kG\$)'A
%ONqFr+J.hE*#BfRCOc6k"E7@FHJj*?qq--E,0<L".Rg?m"PW=hXg2MOe)YPJ'p&\$<kfMQ)9S]A90+OAM,qo1NJm)9RKp5%#8<.u
%HD&IkA4$e:REIE0WU%^?[Gp.=rdj?cX?B3a6p=FEpNpb!4KEK>8^jsQ`,F7qhMj#rXEH3`34`74.\_##\qI;$`*Ucl6`p/Qj^);a
%k$3'lIj6N';.uX)kO(.`;i'_'9<%5\!`8JB\rmC$o*7qZqPnP)b;d(k#:lA.XV`pc[qf+AZ9;?%dd#fpnMl3-8IqDP&Q_*PC+])D
%`='WJ]hAkc/eIg0HE5.,JQ8,ie<#J(<tCT#""_k@E>\<s=-2C%X1AR1$9)Amfr1_Il:O6s-f/Xj`@_%n^sJkidE;b.821?=A`qTS
%,N!nSZAAlUil2g)E^2sIg#iJ?'sEB65aupOR*Lhi_q2]B!]7);kbC/_[O-5\&\YGpAOSI#aI/d9H0mcJ]V-DIL'WRrSeHQ,S:YBf
%X4=$V=ARstHr!CRn0Mah0ob;.l(#bB71jS;9Z@>nC!F!e9Om6BQAl#Bj$$H+S>4(mF.(r2iJKk437kdl;%8W[>F&"D<4OkO/;:Bd
%PGNQE>OQkNOfS68dUtF/;f8+kWeitE4d-DJc1p_%M$6OhN,QME^-S&[V:"B\1!,sB`IcJ.'<+hd%c*Qt*4ZEPWcS1b@!@$fFZIR8
%b_<1+%k89=B)W&^,'P,FZr^r8'9W0^]IVBYM^a+b%I;BfMk@U'a9(X3k0G>MbRW(s=U3%;0q)MteM<":896e!L>NT2b@\`#_GB!.
%jX0JE(MDD:2L`d?RMf3McFWho4;gg<T<b"+k>4TE;Dke!)$9+B2GmE1eSVTp:;HZBp8ef)gn#'>iH__0pUruIf2)uKrQY^\,E$k9
%rtP&*]dZ$/f^aERCIJIl2-(q#0`mO+)\X;0*G4sEb%mRW[3pAU?FY,NhZ5IL33@K"iQ9dKYXA'lDjQC#WfO""KnI,1Upq#f"%k@s
%,ib$P6R"Ptj6OWTE(DkePR:^f:/*,>''XSo+6t&1SdZB`[,o^E3D;=e1nN\njq("l5M/B"HHdV,ac4Q6/tpgT=QfYi9V+p(=`5WN
%eeQ+c9s_+I1_Ii4B_$bfc_mtp[hm5lO^.Z#lC@6(AW!%)/JYc?Ao#hE2&h*&_6.kQdR?0$Gg=R0!*Kr1(T?(7)8/.*p+h'f97Vmn
%]P.p&Z-H?N@Q4X?lS1NO]r,qlRAC(Pr&ia-4\h5M\N%#odsBTd[ER2+T[<A%I=7`1:t]l[V>49&ST<EbRRkEZInDVg<hhum/rIi$
%b>M21dZ(PGOr#44270/ecD?^X+EgEm@<F8jEArNn18?hcn1^8I-E1st*tGr[7Y&\sV?m>&!Y'3"LM,sk0#KT/V_rBGL5GNs">1@a
%\1qUOcj,aQg1I0\i5'M6LckuZ\nIAg5=I5Kmk[9d/7*o",g4@Y+IV/]Ik8D;.3LV62hMOu0tccrJqo:d3QFL(QFqU\]/$ImbH#NX
%3srS7.ir)7G$ssC_u@dsM^FjA)['_NG.I;iRU=Y]s.8J/93e@]A1cd2RrFrlEaoc_TrO=]WW698N*N3-c^Du"F.X;e&_@If/rTJj
%\Oa#D>"J>3%NId`8&fSkG`&k%Jsdh-=k67Y=*"B0][WW`ok#h7-<TJ0c(oFT]_7F[@'^U[r4&:R3o)d:F)PH]0EGdIrsd2mMib#I
%^XMT^'2Y]#]e5Vc&f0"1T#?Ctc<_J:_h7,&F"UCl1iemR!8*]$VP!@U*WrH7.7Hbbh(%hZ$\:mL@882d^I$r8j)o0-"/2fA=Ccjb
%:g*hpA2=a[!IO)YCS/%BTM<8Qr5,?!7jJ3kK09b!BH#tHiTN-Xp4:sj?'n`$-M]sX.8R(S9j+:jbG9+C"Ba7BT?moHPS]IU)u8[0
%-3"SZ8i*!\J7n!!$W)Dm)2_5:;C@?qa[@H8XU`Wfar;_aI*UtqP9;mn=?raGi6[p(PR2POV0+o+F<d\`?E:RYE`';[Q05>dRbX0(
%]"OX41*;fT)QE)rZPbsbP)]12-RP&\C$MTcVU2q+J4^M&+3WoZni$j!Sc>4WU=[q!Z8'*;ef@F\a:q/2'_nr_#Rlh?F)Mdd=?A"2
%7a>G9.p_D*c'r:Y#W+kVhUflXq1<5a>gn#nP,7&nVUW[uQ20dCVTE;1MlV1IDH=1V5h2??!j9oX*DEX?"Bf\mJ8i/G[<0j<R(`s:
%qj_dm@8_Z%$D^!2+d]%n#\7HV!H[PNEiJg-=s?o3?I(AQ]0-DN;iBYX;j*nG-t:?EX@;.NFU9\(DMW)ORt=in_A1:#W."*p[Bg$a
%AnQe?NH8et_hq7cF4IX":]nS#:,?q`g7IKa?AT9D2#hT5r_]gp0d\4<#&qS?S?QD=-f?NCm?sPg@O>`SZWOBLH$r:Am&R`/,VjL?
%O]PTdXsgj1ZLL#rILmb-k[_J@j2:ZJV(W_/:M4Vg!XSFUoR136\2RtO9.qA)k5<c:&t51"]ENi?mS/3XH1mA_G1EV%3G]W=fiOl/
%CX$0J\V,rV.Tc751g_M<ZcF)#^fr0KK+L<3cK?9:c0&oTRCp`8K2u#aad,D4@DA+g>;TKG=L(I;E;'H>b"N>;c9H?k>%/,D9]s'o
%RRiS`Gds@0V!2=-ane'J\Ne8J++(unZD<=B)IVtlEmRn8acOPYJlS!sZ="m*C6)?cXl.B6k"2qmGn%V%RjXC=-S*!-2BAc*o\:[F
%/ZLH#^t:O,c0f=&LhI[&:9RBkTHa^9fjq^W9ODBm-%Mjqij?Y<Rq/'C^QJ$sa&&@06T1iYkN/fB-"R3rM:&?!MtdIgnM:Q@(B8?>
%1@9Fc%]3OEOFLq<hN5QY:*U590*NV$(1Y.MHZE^r\1V$:JER%Om)tG()Ul!f8mL+`:ohm`Rp+DKVX0:(B>NsX]=tG[1F6NAPLCWU
%:N5muUR+@i,%i?'&QS!e@&Rd"lXPF7l1$DZ<+sufpm*I\.Klfpc2??YGthU/3^P>3J6N@sg!8CF)QFSNc*6)2MWS+1gPD;eAOjur
%YB&aINo&4_6-]\dcpN[V00>P_q'>tpot`4)e]\Eu?reh,Y=q6X7,M$G/5RVHf,uuSjD9*7XtX&A9d#)"47d&V/osjLR[]jZ4)K0X
%D+hA`/u5[@-7b=0$O1Y7MAl9uQ&*/#k/h5(C4XU9$PIHOLJID3-FXnafSeXYN$b8P2^rKHCuUkLrX/bm!Y$d@>P&+n8$*.G,'sf5
%<^`q?S2FZFXL:08NRmSN8XA!mg%7Bh&m:tWjVs/joNA\R-\0#Khut;R4O"e:CiJ7@S=P]LG30YeQQJ&]SN'.X7OF3*gpH[WghO\(
%s"1t=+K4(YQU04'lIpu+Ik#Ko*$*;`"iJ[?T+4@jbN)jdm8<@jO7B:uSd^-$CHTWiNs'>af`F)q_B(3)R-tFdI`,dl5K;]*dVCp?
%2]e[gghf6D"'F@>-"@V$c3s+g9i&]#^"DH"TZouF(1!UA?+,j"D&Ac;E60^cT?oR2V#LY&D7K0=r@P]DHR7L:ZL-T(U8<+6<XoO"
%.EqeLKjdSnbW&/]i`6`\%T_Ae[nG!cDSskpD>1FmgJhBTkMiuRoE&;r,h)#&dq?_&=E&u@d,n%`<.maAP&5YnFRF50BJ'fBka;Lo
%Nki-g=df9/#jRn%[d1"gHXoa\SPlD/>6s%C@)Sk5Up5'q_$3&3:%RBt3jN&X!qEQZG3b89rKiac2_@X6Xj-:)o5(a`5&i8odG*r0
%-#p-!gee23D3UW-$$Q`(UL=RIAK0.G/NTbOhKmS^.Bk%AHg;^D]h5$:ct&Lmn2A]`BY&&>XOYk(,@??ed][J9P;W-j>Uck:6uA\i
%dPuJnFNniDP?(C?_?N"Q]3%t+`R\hN[`o&B\!-()<Z_V[d5.X[R#fs2RcUuK92\KMVX,5PmB$rsDPdj%6rSOT_KK8nBi;K>Hu%Bb
%R(&c&q=1NrF\$/,YW4Pn3cEs`Cj+jhW7rYh*p2%hA1f@7-IC?)`D+ak@23e+[S_Q8,p2W",:4l\QqY*3+nnb*joALg"4/:1Cqpm`
%'9WPB7i8@'%=\eRZ!g8BUJbJh(goVp5j]?757BpgoFsJo*>r$c9'eD8]n7>Xf;[CtdIB/EDO>sIg&PqJ,6l5&(h0CkRN3@"Z.R>E
%Ml#56J9]b`(m&9qnZ\bu@pm]d6F;<=`HL.souZi:!mHA^,GstNXMKFFis\!1\*?Z*/E$[NS:a]1^"%YcWF7t3_V]/&C-/eV+mfR%
%AB1D>jbsC-m#GetX!i*]>eG]Z*=m;.Y$X?%_]>Tg2eZl.'4?27'5!#V$Qr28VknMdVbVH_R*d#k(1]YW"hk_HL\*@\e8or[BJa>a
%iE@\\1-WY:rf"$a#Y/sC7>RcY]o'AeO'W]`_B!6q"q(#kUmd[)fj*Y7Y>Fn#5!URo?[r#c1cjJK7\eFE1)fO+'3oJdQF#,V<dt)f
%,EWP?M`>s&-GY\e,k]UK^`1HSGVOpCW<AD$7q<W*J7.C1jhh,UfPKb]p8q7E_2hIc1$&p70AsmN#i'go7,Z)qqNq[sq^:<]h#of(
%:PNWQ4n-`/K-+OP0Q6P0h;Eo!6CI+abOEXbhRTgto5'kd2LY'>)JUtdXa?r'N<_sLF(n,=J0/^f7o/h1raCS#B^cWEVMINB5T`F0
%_I.1jE3o\fV0al#^W8oc1<?nnQmm6NR4#]InqGPbnp+ulk/Yu7bGLd4i4&Y2gHLNXTr#cQjkTln\;'eC7tiT=!E[]c*"\O4^HuJV
%Sg)hA/RJJC0C.[m8?<P&7WI$H-D3Bs%ga/3n>7RicoHIf^Q^lE'**7#-HKt($[i>NKC;H`<86LbpjU::J5$V(U1t&u.FqQ&VNB6%
%XrA0#s7;Klc_hg*lcFJI_OAXDbQ0OE]=7h1lH7&#Z)j5*GNMiMjBH@9l+.NM%r=k8;6+T8:u>[,1)=u66b't*5L5n`MH,hPm(a9e
%Knq6`.H>C-"QddlF'#1;Cu5!R0Aj!UBlq=,!jsF4Pp4YeNd_dNZUg(Ij'K587V*Zg\J/4cn6P`m!G_7[hl+OnM&*"CC:9,4kK1mP
%Et?@`h3IPaYFj`M5oX!.:2p1H(UUOaVt@hZE2&`&9)s1(:H%@TJLd!3HMJg=Gi4Fpp7a&8m*DIWQ+1#%P!o=:b5@URm(bbRZ`c/?
%R_"2sUG6g+!6QgfNQ-n)%$&g_$-_@U0c;!5pE)k;,j[qA/kQq18@-qI!^E)oG!:TX7G`;L=(:IYLYsBf<-"baBX5??N+R:rb'6Cc
%g-uGRB!F3oKmSH2[Kr0Xg+Tr`UEeOONR#_GfBBe(V2Xisf3>$53W!^d[QP+qYKt4IfVit1`2=;ZoUBK+7fWC@1^:)F,pVY4^D\Q6
%,oB"+MVf8r"U`8jNUbO9m<#"gN%sW=AW4Z&<TD&8XD^dkEL/BpEFt0o-ZdIu[0gQd>jWbE/6F7F`aX("2I:^l8Rn0s[#A'&/r-]D
%-&]e/G*4^@MNr_^#.qW)hTk"Q`d?R52*SHXE!=M]I"+L$?a%"Qj'+>'2R[Pi%:f-]Eb=Z\j(78$Ve=#C'e:+kObXGl?hNQ@+.^"S
%j31439ZA8>2jl%mMTM;B>>=h-rJepa^;*F6WTDBX<TpC'O&ndNN@FWD.@EM(2S1CV)*aVM2Yu3n&0=#/ks<!kb.V*c9Z<>BB.?+^
%WhsO?&hqkHl`o\dG2"i:@%a:X,\Jm?)TJ)B4T_R/d3<".Da4OPoAmkIWJ08nY\@^]+jHm=E+ZN_/d>nmgV,Ij)J$[Cq]A/eT[iKd
%LIUpcI/XoKR1o8f7s!gm<&GI1=O(0c)og+0kNdZ/q&]-p+3Y4aq'A-XRHYVAR$iD5A:>mYhZ4Ye\=Ob/Vq,DYbZ):>S_;f_rgE(0
%5<-QTQg\QQj3?d=r7q-.MdK5<BB]hB4"L)iT!O=?/pLE@:Le$]hFRY4flpX^UEep!ZX2a6E&N*5cHdiD][pVOcJ]?CMtR(LCiR^:
%cPHG9*a?]gdUbGRZGnIFXOj];#M0&NjYGu&1am:ZnmIpB>@+l!LSamnP*Yjn>KnqfF[fDAQO[,7_sXq_CE6-N!Ql+a7V_^^28LWu
%!k1$_hHjA9pVX8DBm%ItO4X39Q,_I,[EeuJXQ.Nqf/iXcmVLJ=S]Bl$I.t(bm>KR3]oG;2;O;dH<ie3j[b>g#_KNuR-aqY&TOR5L
%%kcV8>\r)*_o)_cL:2?NB_V5;pNA;c7dRDSd*/*+7ITUY?mG'`EPlO@I\o4#DJ<"WF"*'TcVg)VLFpJe*58e\k+KlY\DuRkl?2/P
%1/g]f47##r9BeOY)fNB2Yjj&.j7qP!6)Q%#iGs7H:M)!MP50'''EUX7_10HaYH9qSI,LDoB:GZgSO<,4aZ8Bc:G.Ets5G4hI*36V
%R+e^e)qK(9\MKcAY&Z2*B[bJjHEW"7Y*l7a!An\@bFESd\`/nOgqu@eZdTo[Y'-[SpVTYKn*[jaZgL\;Gipf@RmW7W&pJW"LaVFY
%?@CUS0"E%l\ICb"4`AYj(!k62+*crH8'L9k4]T.j[EWt1K*as+]tCc1H#LmhB3tH*VVpQ.A'S^:q9OJ\HG/\RFj33ZH<tjh<?j<7
%n+!:Il3$;goR54qgR-fg4NI@Yjrnm[UiTXP<\n6prQH;5^@hf:0gL\%MKZLcMW7bJ+!,2W#'c9M.ejHK&U56joD#gl]-T!MCm#oM
%2AZtgZQ*tQIXN@,S_cKVAJu9Q;)[2,N_EsL-NfAfIld@Jj0)=ZP5chUQLMYUqk8Q)XpR,W#(3ba.hFe?XF\fPb7qI1T$7>\_q?k#
%oq+s2Y+]nP%,XpZ?p:-i"E/Zf8$M%<A&/\bP9QRCe--`,h[3mHj_Kt&HD<p;3BK`[KHI:[o/T'6@7M-)kK:PGhG^n'@RtVFhFUGR
%d+MBuGG4Up@1p.FVZNR4Gk<K(?7+OHk%]JR'?k#>S?h!H_UmJWH2*@Z"#E/`mZ'9[L[.JVB/0P[Fch_I0S;rMD8n=2:%[e8j.h0I
%4r;ISCt!&Ro2:Tlmn1%PN5k;20tTGjSk-W&kI!URGYX$c*TnNXa1%H!iZT>#41gO*'g:d!>.8.2Yt6D.O1Y"M69LQJ^Vm<.S],j>
%Yl[oJ5%,hi$]cYu]SKo$0,N/1\TU:%gmJOY6AH5gC>P:J;LViE@CI'eh9g2)1qp[4PCE@b9kM!JrT%8aY*XOFd=[\NI/'9??dD6A
%b6]Mk?;l,jC*Ib)E1tR(jn,I76ogiVb\!\nYFWGQSDDN')6/!?c'557Ds$/!ON^DT.ZLOU)J?CUOOK?*Gr@"UXE4#qZe`;jF&Cg;
%S@`6b2n=*S2U*0cN`\L/$,,JZN[oo4s'k4lnfKK>:r'r7ksD6o$k)f^CqMHBErD`EGo87^*KKmRbu5uqHk5CoP%.6lQ/[bU<GF>q
%0;ZK:'>LnUT;Is[a4K'=OFr4;nRQ9DHUrB0a'&U."BTKnP0WXVp?B9M^l>gg31ENARPucpGu$kg="^L;\4Vq;VlRG&q<D^:rg]s6
%/%K=No84.1-e$jVrQ#Ic2.Ah?CW24pH*&rNSR!1AHLpH!N]16F_fcDQF5:o"Nk4%J_s/';GH-*2nm0a8=#Zt1O0ROuo"KF^nQL'/
%RRYc4Wu5YYS2Y3qHaVP!p"D@McE6mholM(^H#+b/DhM_EGT2$iiO>(<]Q2c5B&E%sWC?l\\P)XC2g:<+Ms4"#`O#;LiT:$PlEWqK
%qnl%h_=_t@4_.l:g(,i47-N#hZb=E#TR?:^F@Z,H;:\Tn_L#5Ee"shZqUBq1a.FBWNq#,H@3;,6gQVDjn\kkH>.m>-,41_dlUL](
%DfX?CJ0rOE<T@TXQ)1!0/apqY[T0]p<3(()E4n75`VE_aN"=fPT4T,?XOr!!0+ta<oOFWHT]a;JFZWd1e_7LggKIg#[d0L2eI8&1
%kVT13;hr+=dTt;WJ+$]f0VLS>I<%#m&f,"mZ,[QrV5*^T^[TY8<U]A=]jWSQn,!E@Z!V?M>Q*NF2\,c;j63/u)r2"6TcgRjB1J3"
%^54tWj/XpD9]*rqVtf+nG)b?+rF0R[[W:3_D'hg`Vsb:f43q5g\;*)iN(iu@paC.=(l_jY>\S#\LMc(Q%=]FCHru>O;r/C!.erK-
%5s'NZ+g@tl;JWYr-G7N(!babaDt2c+?'.#O7_b9%'&JsZU#i*@;hq1c<j'iQ/eSduIH1dDIQXk2Q%D`7NK$.W7:9?'-]2eDnr<Vq
%rlfe6gf=<o4j;be.AkFOi=/#0LVNciV=jD_2Wru#Gjp]5?/2l:R*Se&\1RtA5C>s(cEAJljb)m\47jZ\^M(njR9hj;/=>`X3n(tf
%ile6Q.on#&7Ye_i1O=F,\@2lW2oB\Ji]i0WmK!]e^%FVj5*%OZm`KstkeS_Ok)2CT&cSFXmC3X"M.m-P/i*o@<8Z^7<6--_.I610
%?))o["g4G+Kbad"IL<k+\!-7%<@Mo*T#O-Oo/glNIgk+EL$(rWo9al<k$lG7#BqMoZ%U,Hp,V+TdmX$8+TV+hU<sYFKT*'o[fP_#
%_=+[!GH2Z>3nPTgFNdW6,gIP\0&WmB^-JI-6nOQS;=eDY!#c,(OX(Qd#`,QVn^B#YS^ar-"lmZ(%/3+]%0FR!4O[(,OPP]SY'Af:
%?1HJ2Rtb=eK:"m9[D=eI%]$3;)0s!El+QTGaAh(o'a"U*#)uoL!>?&bJn@"%AlXTYjbD!\YeiXlM)]bI*su1Rhh7>Wfo63eFITA\
%*b#d`VukGp*NhhK+V;(-LRYQ?S#fQC)*cf-<LCOHcg:&*qD5u<a[V"%b@)4M)H]T&=X_u3DoN]?GfFdKeFb/i!6s#XRm\f-[Sl!N
%/s\HfAPK87;E7S$ip_rsg`]9$/$-4_1YHm5[fg>%cn`D?M)KAiQa#%W2O.ML9e+I4XC.4!ZR`+jH:Fec_TQd8l+UXJCSV]Xl1TNE
%Z+bOQ=.35??a!m*=CGaA6juHkk3=e_RVp,K"((SJ:j-co3jlpKn4d"nSF;pO#;F]MD^$!Tp&W?jZ)`jd9t<H1<Z_q(9j"[Ub=`=R
%72B'$/nqa&a-F"I<Z9/nhekA_c!s<aA#CAI=;NkiR$lbH'"JMo]5$nA>QnT_,1c,P0W2__G`J%<%h>j*f<?#-*_fdf"sBciC3%Kn
%O0f*ldS(+^\Q:Aa)6DhF$*19s1a:r=7jRUW>h(cBD+&5i9rs[T_iJM>II^d*Q33G@2j8Sk@'6(B*VPIpDf+OK-J$2p=u+&IX9af=
%302m%:<ke./c.+Y\\rc01Y,.>Ul"cQPrHt+=C<Aa<UB/51:%j6-(\te?GF-h`;3@P(0+I*1_SgBLL<'=Jb;$V]hCH4Auo)&P>O1W
%no)J#.XIbAeg+>$1gEKZX:I6lQ5u5K@LZUg9ZG#/-O[.J4qLcYelEQ$hP+0df!aJ0RQQVN1@7J3$!Z1k:srOehOK]R`9L\#4K\>g
%=Ra."XX6:Q'@_2Fb$/?gf%GaM7B7"[Itrh;omdjD7aWe]DrO6BeVg[2L+`(%=fA'-6#M"G_?pZ'Ukn[F^[rqY"paQfi9Cb[oq+\$
%QV+>la:Zed0gpu"aVBsI^JNsR;/M;Fmu`if20/(aES/2cDb\X:0m&=QLE+.INV/QtX8l3q+0P.]Xk(r%N614OSh:u`0Z4j07WT[W
%X"/%LT"["Fl7!Uf>DnV>LEZ?>n\B7]R%BcIW*1qHXSF\@39tM::C$NmD=plQ1t%m>XH+CHk%30>K$\u#Y4eTZSr-2dbuI]??-m7+
%.Td)A2cK6\ch7rOFai@[U[QW0g_<UMD3rU,?CCl'):p)3h!js]de4QdT0?m3Z.7<GVS-,=WADf]n$C`DT_W\S9;J^L4^BaY1sEpG
%[@.2LYG4D.V^3Mu^Xmke)7LRH/PNJhXi4qNk0n.PdUk>.QA>n^^4g8m,B;k%BJ^58Y\_OoTK6PCWh-ejf@(,lC"dpJ2E_Gm\%FN-
%#lm\+kLmfu<8R9>i\=;q56]/u/9sp9S7r\jfUgNlr(Wcqj]]JPaVurrKB[C0kUD3-5^N@bKJ-[,?-_ZZeC3pK%[as!)%+ojKMaQa
%&jj1$=r:,Q7+bs+O5q:"MqhaZc$hY*9-Z//!m-pJ<r"5=Ymk64pN'l=5s>Ejp<K!1bs"&:FoXU:b//PIUG1MEXKHW=J$"9e1n/D1
%gliot=<WD?pe_\TE(TN.-<;\L]4u0!\sPG'Km#A:$aFm:=9FO=):m/7WZf:6[9Cg*XAe_@WQScP^P^/'O0d6_!c+B+@!+SF@Kda3
%&Y$!W6?SMr/BRRcQjcoO<t25A0A<e%EmoOo(/U0P;@?4#0XVa6`d2OpDSdl8CC"q5VTE?_VeBOn5tY'!=!kSqO5;Hf!!H`pa6mV&
%W!N,Y+,tK]Olh_Vm!VlBCc"D0"%iA8dua]25:9aB!nM)j^Y)-"dLbmP\[d7W$t)aRZ*;TUQ9Nk>EN`^.'772;Plsp/$h-#;EL]g8
%eL&p74Bsjm7tZVQo1p63_<<F<m9_2oZ6@/m(?reDi?\m\\6`QF%0mF\Rtr2Ear3$c.GoZt=I(U_<T50eaJqo.$q-;G'DtnB=:G&'
%#!Q4!\i4gc(aN\rWlj2+Qq:LnCfGBr.g7L?oE$oADV(81iSp^h_8RL9=KT+CBQ1pbfIjDfWk>)VDBd(60D!]TMXd1H%UZ$:#C*3L
%V'Zi+$B."o6n^W5fJ'"qXBf9l0.D!X;@$dl)bh3EKO(2eTaZ43U@.*/e.i<NepG<*WV>2NhXp#Ze?b#9ITXAUcQCnE%ulQTmXp>[
%nN1BFapJ,t&ZNfikr\^;ZpKe<'jANW?pq2$V0r7!/!91>;3:A\oX@NH'cLmWL.HrFYLt4W22:/:]#>JBIEM]^](/%0Pg`QK`&CIf
%<;bKAgk0p!/g^'+iqsV%c,t39,MD-2X`3?DNPT.1HK\gQ?E9k'CHA(&dG4:W9G5Pbmq%,R:.CMRH#m*(!:M]^U2j%KqTN!mV2#tJ
%6"hP#@%+au%<trjTg;>*7b+9YCrTI\X_KcjH;dR(kB[t1k;LRKYmC0Y#tUQRk?Fcs`n`S`)nnEdW0,X\f$jeh8UL//;lU4f_A=?C
%<V:]E6"mdc6u<Ru]iD8&_ifug:c$:5**>>\So,_c.Pq,r@*IuW[hbNO&W:F1/D[t9dmN^r_[pZcm9s\.)'imMOt6"#&2K&]Sn;1i
%Q!274'$`k9'NDoNb#@O7Wk*JPeQ0:2KEc,Zaqnt6f'K-,0rA\k)NMh)'NGW_=PC%:;LH&d(d:l2"DcE)p5D6[_t!Fc:R!$Hf(=bQ
%?Q8s"7`_,Wm&`#A=o+ua/s8s+J_hHV-TRf0g5^^PP>#`u5E0Atlh3J8Rjb^':r6CZ4,^0,Oi"5K-?:_d-<mQefsK9-^o03^ffVE1
%(T*f`4]D(sB0+IT.3ke'A.-9o(j(=9QM!"Hdr=62Ojo$*qL]36:R@YVgHr(FNQjb!@CLO70bT-D$q>^^W'-:qp-=e#*k!JlcHhJ<
%$98I*%=fpRFD:NtIKA$4T2bY2bLST5O5fHgW]XTpF\05>gKn#'*5!dg`QrETVPl5*RhsZ.#=:gAjU[asJ[8ml!CeNb+pph(OYpp8
%ah4r4T\C0nbUbhJ13-+DD@28n0a2;!Q$!*mV![c4hop43oW[$+W0C@6dXNpeA]6_O'LHPXM(pg(ZS0e?rlW9-lFodr_(6GuIi?)Q
%B):X>LG"$mR-^7[+Y'jN?cpLY578!Mb/msf:\Kc^S>$dq<D3G9C\lGQ6YTQAQ*#9Z8#/60(mU?%]ll,!;9RK6cLrL$8WKGH2bI%m
%B$K';+W#B;Y4U4mQ1s':$UKCLb4%]E-V8?40!..fmjJg.8oTdc6,f3cDJ^b>G#\cI7KK=`)Gqkm&?1:J18CKj8LVLC`*D#g-BGNb
%1?b]%mLHQV=(/Q"][=R0aL,UVE)qF-=mORXNW+hTb-kM+G5+L?hH['dj*)*ucm0+D7\>CG>YCtZU$a[iSm8:DiHLDp<;JlIlJP]A
%E,f@oIbkbe[p;Y>BrOc'h\G8TmOUNYG(nK`k/-dDRs[^3U^MS5:a^tS3s!f<3*nbEnmt_/RIL*.H7AI_gn,F`KAM&XPnnPN4p=/f
%U#G([Z,E?a=4NW3L%$qTTO,T-]rX!6jd)%tltF:9gsh5rghuB?#M(n9]th4pVgY7NDou'Lm>s]e3X7dfi3k-\d59QOX#YeJbH!\i
%A8/DDp@I]bF7'?],J9XR.FdG@46&^d)\%O:/=LLbDUY:hc+6W)/m0+c6fCHPn0[\19/aE"]_e0?Z#8jd4m;:2=gslcFo-^i$5U#A
%>.<m"!!r$@=>s(\PbkbUm:a+S>?QO5*W:Xk>h%/e'd\(H^0Cs7D4EmaTrIU!ED9WFX<_#$g`3psqoBP"*C30%<`Oq4.@5(iIn(;[
%;V,K@@)Rddp!(m#)U/!AFu-,Pi^-A_52R9.39FQVm(p&?'j#$WH%5^^)7N3r:jB!';r;(+?n[D9?VuLS>Xr"B<N(5kg]2sf>0jjr
%B/gM#j7^IOXms!6[r$8kNVh25q+!]D9C3h;GFn1XBTX"onW1&V^2_K8kE<^Z]:Tc8Md7d&UUI&anW.m?'6)>cCF[Kua605t2;8?]
%[m9Q&*Gp"\3o(_>88%S0eZGO*IQ71Z]kh_LX1H+0r8[Ch[e[Gq*2Q!R<r^fU?Zh+\I:f5tP)Z>gN7`:@nlfntfM'&i%B_!n&W<0K
%)Y&B+0&:H7jJkmWs#e'r<"LV&7WY0Yl^HuuNVJ*>\gI=B";FDU]4nilDM-DoFoY0RIJVG[7tDKd9;bs0Sn(GPKsngo]q.)WQ1er'
%qGV)JOh1#,\*R#CZSbK<0^TSXPSARUStV,q5B1HlltuLfO.Na$fG-[35Drj6ItB;N]p-5l[+<*G;P5U)H%=P4Fsd0lFf2E0/Tcu/
%:p7*QEg*UbK3&O8*it;Z-6=ZfJ<'%lqaSp,\g:\Yi^ruRi?>q:hW&uVO`!;)LRe"_36o#3/0@.KF,ojo@9&iZP>(/#+6VC-Q4Hmb
%;i^I+F&)$Ph]hUciT#=?cgq#]*F8U%j*VfN0$j+e[d!#8pDiANI[9H3`@W<!HCSpN=h`coVso0%38aG9I)r2`N8o;#CSfg:Xg.<i
%q;Zkg^.l?==Y-F`*Cd'^EkCmYGughk&db8b^55<6X=[r9[Q-u;SKMUqF`&]gh7B@R]-+Mi+IQ*I`]I>"'c9/H<pkIJqr'V>V(,$<
%n#7-![*l<58)0UA^"ooR/_7@K5ER:q'Z))Gn'(1FdAfpQ][lWmS]VN:I#:8dqT\lA4(Y*YMt+F"jAR_5Hk5861$pN6D&\f'q7T3=
%]+=@eR^QF=Zg++:T<8ib$+kP]GDjT:r?[o?k-Y8qNcK47oD;10gMhK3_.3K'@s=D#>^kS8]?fgsd7g=nZ+D*VCb61?q6ji;TAY_&
%rXrA"U/Yfc6m\mZ:eYNI1Jr!^Gf/,LIG2W[/p5c[U$:@qPN0n3D>Q9[dp*Y35BZCZ2HA7>+L`0@6l"(K!<@Rc=W#afBNl/hQVKS*
%$r'\9(!um@-QU8'9tV$6.id;d*_gbo9f!QK*PTmKVJs8m6[e)j@=.nI)mc9YV0thYZu,!>Na":R@iC`B`fuRWo[7l^C<+WscYQ8<
%k*8rm%<8+[)%*FEVfpScM;EEP+Be4E@XYrW3hirt@&i<gf\<Pk6pI*?RdA@.g@g0"T4Q`ZgDY5i9m(h2FoUAsm\;7F*oG?ajt9Fu
%^hU."Btr'aDa1`*g[`4?*IS>j3sP4E]]/GBD:9bsmo;%=[!])b:mQ_mhTiIO#;uD2ALQ+j:`GmQ@Ja%WEcHTgaPPX-Q/,>Q@<s^R
%9e-2SgZbh0BX)YXP,F^pC3*q;ESX?)3h%l+5gmpqYG`@U3C49C(FIb!9S;N$5*Lk=T/BNOI]Gg(3!-MdTUs"#rO0@9H.2#hktKRH
%Ik"2D,&2STgj^uWk5N@[9cpEXeq-jeq"fGQG_437F7`k*2_K;@l5\B00bHId,i>Q5m3pbfW]/ZCqZZtKp>3-hM'REiIQuHGmpHeL
%jf6U#E]++qN[>_*!<t5cS([hSGs;+Hme]tk\tt_B$LD\DGBU0$jeGk!Ki9@S$#S5N>hjeWW`j=Eh:A(!2g\_HH=9tflcmZdXZ%9=
%`nia8)=("AmS`@;,:c7dlcm\2"=M;.ZP1De]RK<b*tN_iI(7#D)\%E=PRf^]onKX<r'rT#^$1_$1t@kRh_0ci$%pd?f.^$t@+$'p
%Yq(l19i[:h2(1>jT--9s/sm6R4C1!/-:WBt<G2<q#_6WfeHjW<Pg!<uJ,1m6=kok,Ynoo%\4d&q5ZFPaosR;sQ\<s!9(<k4m+M,;
%%-JKP7^puHc1DMPC_ib$]br2c[A$.Hl>&C#R-3'=$[Al9ODQ4!^k5o/,A-(\kr0%qa[aFrlg9\#BP&;m1N%[.i68j23?D[Bk-]7m
%.`lr\kH=Hubc?XB*'DTpZ+8\b\u*qN3&@`=l't.R?<\Bh4\qk>B&6MIROM`Xk1-$I+,BHOcHMcX(8LWg94RjQ>XI6L'*#f:RX1;m
%Y4#\/:5h)Kk[fS_4SdPVoQ!df=]i/l2,:?(U;9<Cbf+7pnf2=_>`j?-,=%tJs(9?'-Bh8\n;*[iohb<].An?8YI=OLfFVg(AFgh.
%dE-))%\r!2I*ts>SuNRP)OO>YU:7VW#`6qU'ahYKSX4=i;&pV47%kSGWc(S,e?MYPg`2Cdf&Rak.(uf]-+\Hm5YZk0#?Bs?k[3e'
%W*o4WHH4mh29]`6KD+)0\&f",E##dmi[c-#;@=8X`d?@)V@?fj\SmYtrg>^QRB7\ZamPdH=)1q%MLk&rg,tp&P3g@6P=UkU-kf18
%7Gc`dP%6;opdqb.V(5-G=/"rrBk1#O[.$Zn"A.dl&>n`@>cP>qcha-IL'[/e-Rl6bX\Cu.YP6^D1b!@C?1YdeJj4!J?B7gMFAcFD
%h/gf9]W'd,:MZJr]^?o#&X2e^98k/U&[JTd4(j;KI_X8BF4')O)*Z$C<c@9mpb:WHT[O.@26&I`/+0WN<QAc_R5E*V<iM_H`u?ng
%1Vm>--5GOcHG=)'G4G!rT+@k\Y>E2jdsB]RL/4"Pf<VsNU\<)>lk,ZFc@I!(YMK/%rQCE'2k+I;s4l>Rc`Oq<IWXu6f';hj`Js7T
%/*S,P^i)Eo3aQ+H8KQ^C=Do3rCof;I6JI3Lh`Z$As/!nZlV(:.Up*#hE*$XXoPS9-h7n'8_['C>]=WH0pNG5-?$^;aEW5m$R;]de
%m[j)Ep,b:@rI2;);**.n*j,03p-U4urEaDjgHXB[qGLXGCM/:/9+*,d><C=%d%.d^pfPg/S'jKSZi/>?Coc`'(Tq$Bg+1i03ICHi
%o(-G]AA>eor=\&&p.P,Vp?5B0>Glk@_VN+jms?AX*VN-B]`5)->IX%5\6db;3]Hli;0_n2YIEBW67BCRmf!(Ed/?i_$Ih:d\^?Md
%bME0DnMMrtnt&&1R-AKd,Gk5U]`%Fp-\Lef%;rQng=rjX_89&NE;mNYhtkBE\3,?iM*-d_eX$[qI=$;=kWc2hF/i9D*urZcFF1\^
%_:WbR8[d6Oj,hP64eTN:e#hmQM)f+:c";TG.i$I<IkSGH46tE+70K_b2PVJ6^d]i=Cq:Ec408P>(&H1S/.68()mn:2:)sQ%EUM*E
%_ZA#Lg2XNcjGV,*p=2mBb7ua\@UEDA?WC't87GqsIE]k9'27bnbN^T<]dB#sf>m>?ai(obUiWhuIH-a-)^k@0kpCNY4_A/17<!3K
%I2u9p&rD$Z=ad]rB"Z'r3pjKa;4Lm#?X6]>gP\.u`',P'<jMRZd,)kjp=3aIQ#&@B9'iT?@5W7)1pO6>HZdbnI<BW%VP+;Cp=5^B
%3Rhe1M1'MLI00VN;%ickL77sUaO(2>p,-t.O."YP3><$S@[kqU=<)M5)C5"cZ"`5Dp=3aI3>^Nt'Dq(#qPNNs#`b,$=#WB=`lbfJ
%IAMoPS1Ql[<^omOX-9T^Id=)62KiP:>uk<&36ri_qs$qUmI?QG@UFDs5-(l\mb)YO)Wq(lETE1LfN5PXWQkkM6RDG+kL<!lSEc:`
%>La=$I(+U\BNfIlO;`7O:`I_m).D1)=!p3:?2O1)%-lj(6faVV(Vf+G+pN5\CRRA0\o=o!k'#7Vg-"aUD:B7#lI4UmRMmpIS-k7K
%8HZ`)q52u]HFj7V)fO7lWM$Rk>G#X&%aPu0::rOaNM^jjZ`5d_fUF6/7eZ=Vrk25Gk`0Lp@Q#1&q-P3NI</ljcbJ?'g9d!;*r@kq
%CMr5NX8--"hXp.6f/Qd1=7a0Mj.St[r\rA)`h:'Ghf*bMRc]*B`ft)_/OMDq/%B6LrdUL,VnpXX)V;FpIVWau?F]RYT'tSr,DS;9
%C676#Ne&)kOak,':ADRoBNa6C\Zp5PHA4?g'A^p'^<uM?VE3-tc]=W^H`JbMUl0RXg)C/R%_BKA+LPMVQe7s#8N=smRM=5r?L5mN
%67LRd;8%r/7b@*WmF#oB9N2rBJ3HZ*Q&O9Bp:4>)Q&O9>LqJ424/q.K&i#/Y_:ci8c@Nu1o]7K]#PK=3%0u/=Tf$'ca[u-`SFSfg
%-^sH"YVQcAgf)"P.W:-:C?3+;.q6#A(R]1T_Ud+BUM"],UP?B`<]4a3MNXZKDSB?H7pb-;`='7TYU5GKdok84Y4b6C/.*83[sp`a
%0[1X"]6au,c@\.s(;g%"G_qe^;^eO>G?VjKj#.ao-rZ<XA"Z!YqFUIYOSHWo<U\s%SbbA^%pkJa=VO6$:b6i*W8>QBPIZ_pIK)>:
%`5<n$2=LG*?dnm9:8I?No6BnFrAVrKm+qDS(f>^?^4.07B6W[VOfhP_hnQ-F)@-hHEVC*rMq3B+%%]iYrL;4N8A-OJ%iDE)EMH%]
%^Ob?+%C:JTp(*^/9[d>I(e=Ac`&&?K;VAc;Irr(](pP5ij8SUtXFnT<]KLhAGo<G9JVYog1dK/4XFgT[)G@gp87u#RcH+]5g-r5a
%,inIJpQoJ.]C+^Ug!5Q@]%Fhgp[Qp5M,a.[]4ts3l^hQtj$]oaUadn^h(EOmLD>R/[/>#a>14DX(p1pQlso@_DV@s?nor?#cY#sn
%WVRo=]fGN&H1a&4jkW*>5*9T;=l6oH`gY>:bh!b2@]Vs/<tj]8&*<Dpa^04UbIcTrl1&K2C!H6epP,lOe_@*ad3d6LZY1I@TtK->
%eoFOk:chrkE8GG5BLbk*kaGFo3"MoEJS(:p>_J<n9t?_(IIK!8Epn1S52,pN2qF=652A>JGk9nVb/2%d=22FS8EA7mH^\UBm,ds<
%i8V.#S'$P#%^'W:s.b_iG\?,(q5oq+]T]Ztp?n1t>Lh;HQSr1:F_'W/Q#`XGVZ\(@I!a!/I&kpYo=_F@PI'H##BR'u.W.+^lt,YX
%a"uK-_qo=FIeNTtNjgJ_n?(qm]PDrZeXCBY:QF5D\9DQAai3nhEB1Tllq"^XRpC=0V+6R$>i.GeqjglG)@ThdnuXG:HFu*qHTo$I
%q6j@:hO?]I]m_T5hODgiJ+q8Qn+"tFVip>uq:5ckDfr<)"WH9Edeg.N>E?7o7sba'/f('a9'FUsX32O0\P;C=1u'boL,<i30<I*V
%%\%Y+gZ_b.EQZ/mU<Y`S_V\;09K2h3=67;2%0JFu?fS\s4))$8FQQPT[Vf1Dk>udD;eklaS49_CADgMW3Gm7Mc:sQ2br!\K3Z1,1
%]n^.IAI!)g\5f#u"]jM;i,ZV64WG$k2UsoQY!LuHj7Kh^_4XN,aq%MGRLP,s*g?ZW0F"UT4ShaP.h$7h3UnuJ!?<EpXP]Q5NQ\*P
%Rr<^a^ta%s)JjMWY-"&Bk,Y:nCM_b4=)hg@)\)_*"7k2mdd"8[gXI%L[ko5GVG9YL7;O;YQ@?Nt<WYb"V[ZYuY)b__CD-X8f3>UQ
%=%VRG.AYi?<7b,_nUS:j<NE)fkfnj^F-BFb:/C8Alg-Qm6J'tUe>2iJLUSH$oFW5?YE/T=PegaW]>d>pCqZXEq'Gmb<>je;G2-dS
%*]_PAf(H+_RC9qs/1Pq%KB0Ss'<VdpH%16Mp3kD+WdL\.]%Eem6gm.LIcXn*M!C7>ohH-5OH`j%WQMAm4u]1jd].(\h*`LN,n=em
%VF+(Cg?eGNXa_;RJJ4Mf-coi)mS;-(0!j=$3S%krZAF=iZiM5p+ZF7g#BZnUmRAjVDd$3XF&.d>W()DNIPX;_@af_ClLc,X-*_e0
%p%aDD;17Ym`'.MoL3DcM.>^dj&IYFSkV7g,1fti7eMnk[Bg/9+2a(;<4^T&7d9nR#Cn?gB1`ruZ-J^$qZ"ZD]+;\AaPf-Rm:A;=\
%Rh`M*a@aUm05+BG(nh0[O#:]R3&RXB`akMQ3b!0j(H3l2#_r:XbmJf2dZ\QL30`*6oO`eUS^lYI9s_\d>Pi!V$L7koVH]>XOfLL5
%#$%d[CNqgL<NAt9*gWd*GIPK$aHVf**qg,,/1C/#%1i=gDKZ(9:cBb$eZ)Ka_nf?T-IVCfJ%*=p+n@e:8AjX"<$&U/@@]74mWM_+
%&WG90YdAg9h%$>P8LPNA-F/sAC?UD-rOX(FNSWL@2*;l-f%IFh@K-HqIE_m5*qiACBG_.>\D^lVI*_=$*`fF4=2muu6BBL_Yan0a
%a8,SSBu;bim!kJ3qTUDt%sp`CBt(u,5(Z65&,W]J`aRJO)BKC9Vf;!]r1;^SVeYeR7V[2#J!?CXY0e./erA+TjSbWU6SpoA5WU:?
%n?@CcN&0=Ohsdk"PX:ej@'l%8*d6p_V;#GYZRNG2"uSO0hsIX8>8o?9qf,QFIVM]*ggotM4nkIKb!g`f_r7R[O+rGg7>!3MC=Iun
%25;]47"O;9*qg\PD^rj_%1i>[47),Z*%p@4Y[=k,V.gTVGhBdcU"=5&DKn-WHJHI0^WYFC)q2/[%1gJneXJHZCt,A%r.^"*],`e2
%E<e<_*3rB!W!s9<UNDePm#`,@I)Ei_j4eNAJ/U:-m&tU(23V]ufY?2"+;MA2Wd`iCLJt$=cXSgp*3S)Ha:/YAOs<%n@T+N6ic[1A
%*&SOVaG,Iu7^6V"`fB9R%1dg<_-N^o%tGP0iF/K2n`)Pjlu**/&t:To*nI0m[?\!X[Ph%$_uAB'$WJ1^iF.6'^?^**g@2=ae!^JG
%%ajdMWU;cY_o$(0MISS-m#i29h%&2C)7/:1EO`F4%SHgVj#&scT;:68if;^]YeS5V]P1k54KM;Ze"/S2ACJrqYeOg[C-Y@c`XNIU
%G<;>C>!q=/4S3]p:XXA,p>IO6/D'BKk<4*E`^&@.gnZ^k[HepHW^@EMgDB/8rMR5R8Clj!G$pSQ9AANMmHXEY!Ht3-He3'=>C5-$
%f%q@PI.o<D:AR^S@GO(,4q:=Oc3ToM3OA57c8i6/luT1f+KK;?h!Jl9>%[JAB)1B(pF&0'GS?daf=no?mm!D9?2?U+EW*qhg%fT"
%mHfn+lcIAorV*"5HFnJU]DQa9_X4s"*lL9,n%D9P<cjGZhL=%eeN0:YGHXMTf,oBh]^l'\mH!NP7u)<J+&?JZIm<[LD(aQ?j348'
%YX<oSo]=6%DhfjL7mGk+5L(@S*[Q#BT&*V\GV5N"St,iZ`JkgX5<k`f&Uf"OG_tV,<7>WD+$G!,doq"03YQo9nRUTNG]D8MYMWMB
%gV4ic1tRp!%uu_.k-N)Ufi-[qPI%HVG:2pm(\`g"`((2:Q^=;P_VP-K:Vcj;q=s%42g"!$cdk1>/,??7TC9M9f+.4u#K_Ag]mVeP
%\,#Wt4[6]i\pLc$^UPMoi6r(Sa5ORs^2*[,]79A?hUs:&+'gsPFM*R=\I_.NI\-N/Ic`fA>As@[eX<%fhkN7=LqA)R%*=pFm735_
%RraAR"a9?=<LWsEEK+LKpGUaf=DrsqmTF9).O;071Ti#cF8(jek37']kj-,<ZaKgT1C7u:5Kr:lP=H#VZdW%U9^dW^=nIr.L,51"
%m6KsL\:1Y"Stp:BgC'p?E4_b?n8HZcUU,.&F,DNl^"9<OG@urH_R6T)G#-\,4am0=@I)%A*IO$Hhtthg;XpJb!NsCga5-l/Q;;-*
%l1!h7.J.Z9]')B3=^%G/K@2"?1S&/fZ;@56hrW1bMu6Kjgl#\<F/.iH[_9>e(#7)FclKHs\Tf1Lg@jmYN>m'2il=!,Wjh-cSbjTq
%h(QKE."AM6E):qe<;tm"H<>R"h!pj%)]st+D!=IAf7+p`iQcfgp3?;%J,%;uq25d2qr3MLRm>\uF0!;0L$.gJdWUH8XJ:m/*s^F1
%fqnYrI,i]TZ8KgW435EHFF/9$`fe(F5Na&H]!pGR,7MMW59H9Ne]Bm7`FAK.!I:R&L+A;fJar#5mTaOf-YSh?DX\Y,2&l7pHgBPE
%(1.`XB45uZnFbT*)]t:2]B`h0ZWTjO_31`2MDV0)FgCpg1Yo_Lb>!bn)pd8T.RQBXm3.\6="eEl4hbn2mDd3=f(ZRBCI_1:*:dM9
%`Vf&h2fgWi"`jpp55>k;'XmO9AE`LJ>WNJnh<n`l$haaV>@.R-5VE+R-?K#ts3-ZQIZf\?33St*T8,L95C:5IT3#q";g9qpH7B#E
%M"/P!D]`?Xq6A#KB<GH!]^-iWPJPj_p!`oNNN;J$548`qFPb+Y*j>>l5",CE4HGEN]F.d^D^4?3D+:K\H+pYr]RT%[V%6'4+)bN>
%MZ2g3-,0BF^/K4JT*lCc6Ekg5N01"kQ8(hdg_s8M;R>3("U16)Iek359Z42i/^C:XS`KUuSM-JIT0IV.H=c2@[!(c'&`sY>MWHVK
%T-]eX(I"D)Y]]I28)@:AS-6&n[e\(#Q?i3'O/sGL5.tptb57t+bdI,-[56Du,h\U9q7.kc<XujV4L;?!K0\NSX5WWu1FpS<lY"f"
%%^4g<prpn/cK-j_Df=MrF7%?]o&0+\`C=01,E^EXX*Zo+i\]hhng)014gP)t8MpRtd:fs_6jq.]&M^IRi5.h&]q%/o8:H9gK7D$.
%Hf&"!5;01b]HVelL0eDF3O*Mue$IM(&Y/K-;0X/cU[[(#XdaI=\_Mcu\+JAhs58gUnsWN+oX/eD^r'66*aQCh^_uHQD@(g&qX$(L
%fTq]NC[%%RNOPP3hO!d+g9*1#]3?dCe.pE_LV$/fr<e\Ls)QB-BgO.*()78,S,@P!T0`h`+7!:Z*,U>4=s^9;_08p$JCr_ND]gSD
%e!u*%m]R9L@aEOs!m0uTL\0#qHaiUSSKpLVmjm_iDss40_`oe[ppPH^oBbGqNNK,ELC[F8Iq14R\&#uLr+ld!C-+ZSi;LZrRqHpt
%s84"NCb%Pq+p.62oaXaab8i.?DEs-$i9Pg\<h2=]H>2]cb=gg6k*rbK)m<UdmG.SL=+@;'YK:Q<Dg_M*ZG$(QY.ImLD17Xf+.PZP
%^#Q+CPf0i(D`rHQ[IEGVa0eE5Sg'lpnmR"FH0sS:R?-TnSHlc2qth16>L23!q++(R?Bb=eg%bKS<u^A,^>.:1R_Dr[NGj:bCpmMK
%So2;'I:ZJ5hu*DF^#jkR(?tJFcO2NLWg+>p&K,4ib*E!GKdaCePe+7Q^H$XTpOV],iMZ@pZa9C]HhGPCCDXQV6g_AWJ+_o-k;H[b
%?GCs^o@ftan4/+:a(d(C*sbHH2b#k"d4t%\@Op/8^K=Kr*U,]!GBEq^dhVT/HFa!L:oGukSo8c3e+SLUeL)0*Ts"7W\"2Qmm5Kqb
%B@lR#\?[X^&=qSRrVjn@?HSJ"<u3g?qt!=IE]l)3DfFKS)t"H%&bfNhI/_%*H-4[Rk/#l=\u!k.0Z<6H=?=g23sOu:TUWTkDY;uB
%n]YU7HOHs)IF9j@VDRtgQ)2q[^pKa2f6;qM529FL5$b_,[M-t,$ROVV\@r^EXQEa?_;a&9lV"EMSNOK,rQCC;0BJ<4Ap*q1qa[fn
%U8-9-KMmAX?2IqVkhN3@c654FI:Hdco>RJkS#u>Ba\]p!FCI'(K&nk4Ui)DupKOl7VIRl&DVrd*N>ZZs[mkhS?a[OYd)(L@/KHES
%?g=e"e+\&rg8G^`08Xn]cJ^b[n8*NQ>S(k+%&RP#M.s^iPSo9k9t,JJ"j:["XLSSI2.&48W["'Vh>J66e&IU2BMWF$1D/?7?*u_a
%!YkkmR@1\Y4J,b9BW^9dopNd,qi:Y92npEX/A9hb34#u>E>QXN>Oo`GK\Mp6gWpqd/C(BgWPt:%D!CW:gnugWAsSJF^VnG-SmP@>
%YcLZKK?ZEdW"m'PfsBF'Yh:Sl`6@#Iba=Sg"Sf1X]smiQHS^]>Y!'Aoa6_rJ(WfB3OkDOb-?$@#_r-UL3@oYBIrm4s_oo]6e\,9P
%`O9Y)Dguf;qW-5X)fcFLB"$PCG<\!K0s3])g[hOG^?AhJ2$XA)k#X4Nr:jm1p#,6-`pZuihDKat+]];#JMBR8#!s%6?)&).VS#W0
%dmU!JGg\`6*!4W/HTiU]em+d`JuqfD(.]+)U,j\Dr&8*k'hp]7TrebkDh!>T4u<68bP+>KRiN+(.r*Rq]ANG`5$Uisg-iGEE-e4*
%h0tkWDXVo+Il$tNY8eN\%G9Vm(H3E=i$6*CT$IbEq%@Pj/A?CZ'7ZI=`?4!0JnrH:pWm(K41RF/p\+>tB(="//b5Ain&(QiS,(pE
%iAVk_d%n])^HH_n%bdrfiecm+rEek9\f+EEXo5_5T3%)&/AIJE5M-p,eUCa#\+?'r[i=kf4VoZQWEHP=Rj[AW-YU!jV@?ikW;O=0
%p4Er2mJc8:(VZMqE;`Q*iS_u5Oqf]g=I)&H,u]J7Ia:L%3HEG#YBU/>"/ZNKcUN;_]Oi/#1*3;%79H!`Z6<mbdoG"*166-ZOI.A]
%b_O"D^1W7]Gk.WaLes+kfN<'[@-d(RhOV'nmq-_0i;T;7c'=!M1i;d;V2Lhh[ngA5m3HW=XT&4_qrOs?=7>Q`?Em;3c*QkgDJcQ#
%DhZr,<mnYnNJ.I_"HtS!G`cKf(6)\g,Np@h2=V9[I2tqNSX:`e]S&GEj`JP*24H!Srn^?*BNoaHm:hd2DYkZ-?[GsVg`?^ja_ung
%?]OjF:4(]j1lYj\\ZO?LlKr;/<.!?c\JHh7cL0]<HYl1UqTT.c)11oCFQ6m-lEK<G6gF#XfmbQ_GeWt5_J/Z7-fSA`\_)F@d9U(B
%X?;l"\b>7W+0QWO0DT>Zc&@%][+3ZR>>&cbc>J#uGqmnbakMB794m;=38UU](VIurO36%.>d-77h3o._HqKujC9d*:?s_/N*-2&_
%X0sp;6gh]sH-Kk0\c78PJU%)[mXN*k=9lmV`enID394[lg=V29J&)Cc)Wm-P60r])Tl6$!OV30mn<.>BJuG6c0j!$qqn;pNchVrG
%r'0U+^3,/hMWA)E4E_LC52:JQe\6YDj`aQb\oR+N>:'b:*kdKcqb#Mo+3Dj`IXnmR1?LIYj.Gf.r?u[Z$dXHpV)8fBF*6qeiQQUQ
%l!2.9h^e#+(ZKAf<V$=/iJeZ@0coTs0&9+-Ks>k@VmlWe@PIP!4[hiXXM+W0K7WSOk@"0OjrNg[R0<^(CG[Jrc)mm>hfgec/=^RI
%MH31;X&%pQ7;-&\Q7lE441t<i]8$u^0,A3V7D8Wl!OE![Mp$iErXrT;o(W]lH3RaC<P(<:[a4*hbdZ[c%F[OJhg<c5kd0a'4a8Eu
%@rr^t"0Lu2&&2gCBCOIih9G0E`<D=VlsQ*ND,7'gK(";0IM5c"dO(L!1@nQ6!o/QE\\/N@dH=E@@J0`MIFpZ-=Cb4?/8rDO(O(d3
%k\-p&kj8HMpE<eT5<J3)@=RBVj]5YJnJ>Bd3`A3X^BopIf'gM6]m8UT_>;rh@NTc"[Ee^?\,e?uR5W*]B>X</B=ADf:Ku\2K=eU>
%+i?aFF#rpN_u32SXKDRDVKIkq6HXjhe.&)LP)9:;8r_2dO28g^eXOtd>."*"0uj3\lO2`(Ul:UgJ@b("G79ec*bHR4ENg9IBM`K7
%KnSX[cc_><<q*+=%e_!>5gSD/;oQT-ZXrbKjdseaEO0ulcNsB.;+Alo-D<8u5gT!<9i#<.N12s7^hP@jkT$@WT"Rp1jjN<:5J[3m
%c2iHb`MSWJ>-gqCP:4dfN&H"Ug!+t.YX1CqcK<#g7C0Y%lD&E;'K"R*er0@l^$:!J+f=qcS%0"q3:u@Yote#4fK.X([%:Ad9^=Wu
%3^PgU696f;UkQ01XZljOK5#D?0WjjjRPF&pMjlBg].no$f@;V<LSBB\h`U3EUHm-;-db3`b=oM3B$?T]ZPcqg1$SK<kh2;Yc&]]:
%WK\G&E<sC&B<a7XH0Jr?*7h[`0Z`Y*/Dcq%A-NJ5MDUOEgMBIk._U[V6$&Vi8VGi:MHnDQhgAbZ_s_d=_hW%"m^ND<cY#'`;%r'8
%C^]$^&Cd>?FeAXm7-5fdT^]fr*YeXe1^c$ZB?C+_)_LC%IXcb0PSn"D3PJqUkt=]`USgpEP,bKUm58.\\kr6tPhL:tA#]Dq-+W9[
%Er1daguT&^V:XM1`HSMVET$]Dq)5>PlK]CIV(YHE7`(?oL3Xps0,HJ<l.*lt5Ddb=+'>Ui\WlO3:4[`c@0)\@q^tP-i*:TMS`/RF
%B"bD&K;GWqlL$=S6=CC*DW&n0>PF'QO$co0m\>9tQ*X.(75Nck0!04E_Ds_.-/&QE/$#!E-fK^N0<GcVC\J<fhqbqfA*.4SUSfpM
%`>b2Jk"q^VjCg]DgY':rr'4P_gu#eKMup=kI!Y8:iUp9uZO^g^J"HPEp&+bOK/M;)IVA69kNc-?)Z)Sf\GRa)/TYtZ/J=&8.NSe`
%pG['?Sh<h7qJ#MU%0#\F*'RMt(\j6*MVmnP/3ZK``n'7TM>[2)%Jf.:3Q'10rGS<tiY.""dZ!#eYD[5Kk@+1Ec-PS.V>0sY>bmH.
%je.;\&'o/Gk&[_-0:O?P(/"B?DeHg[q9BefV"R$UhOLVXG:e9oC;2X=0R"?1qF^b?HO;(uPq>0'jl^N2L]E>?NM&&%qqH%]ltpPk
%A96M[>IU58NZOa?NQpFo9*t2a_fJn^]L>HRF"IpM2bd4>N]rl"$PQ+\Uogt1VWMF;1jM"X1,TjpP,:7Y>!m]n2(+cgq>X`iqCN5Q
%\<SCd4Imj&.\G."HMPD'08ISlO$A'fF>UZjp"ST-hj2l3=SqmWrO;1S_o#!"s6k($gVM4>LI\8kQ_p,$*cBcCOi<fF#N+A[:-/j+
%gGX4+\VWC0@_!OO`PAF:A+THmqWFEU&$G>=rbhG4FiOF*Kf`?JqhO)J\@/Q=O)4@HViQZ)CX"F.]^uc,Z-A[_F#tL*eeNN\=_aQV
%?_:\.HFs,-I2\RKjZE;#E.\5-[B&cI(;Jb;\U#bj\X)VfH.q!Op,mZ,Fo:g@fmLNIpLsHhg=69L7(&[[^NAb8W_'%Yr\,5?Sa"Yp
%kNt&Uc[T:dZh!5Q2ZDBO^/(B4?&l+WUgVRn<T(1\$GiH(Wc3.2M$k(>;MBJB`!)&/WPSrA',N2\U^AuU:I;;T"gBqcV&7sh8;7p8
%q@6XUCqu_KWpu"$%6^2YbJ.03d+:Ch^KB,b^YS8.?S$$WC0j=B&2kFC(%;qmH575d(D\'_/u3)ps3@']IJ-\Whu@3H8bD4[j(3JS
%R^r3ofmOda>eYSKhb*5MH#>eUStGul9M9<;HZ7RQr@&'^3EP917o!@7OZ@oupV&YEkLjLE\BN?#,5UQJ]aFuU4lL*QcA5\>m:C]S
%q(knNOGHi9q")pcQ*jmr?.7j.9DQO?SBXfeFir'jVT$CspA4(jMJ;K0GP0N9C8^KeWapUqIrT7iJs]h#7rO=64nDFoff9#fU#<=Y
%$72o%557F48eFQji)Zm`+6`TVft;UlS*<u.KF0[NkN]]eiLL.HNtONW#cQ:E-$4f%[b&9$_F`P1lfgg>6W]dJBPVtaE96VKd+`oJ
%o1b*7Q*J)/J^cbCgCek0qO4G]X$+.S$9PT!G,B4153[)`"t+IjPuR2[Mk@F=``UkQ\$B$)UsA+L@>?6'baE5sf=`R)gO+c,p>jHk
%pA'TDb8d+1QTN33p?^X>0ug-E8pN"Np2SlF#?ri70812p^T\oFDD'q5Zt^jpOO"(d>7,h%nck?IjbY?eDb`A=5Y!U?3lf%T@S+jf
%l=u;a%GK)hGfsE93&1Ao/faQY@$Zab]ptI:MaueemqB]ZcbR(fg4U9_iB+d\F=d;`fQdB:d:.PH>"b-/5[BfZT%s-_V+k(Fq!kKQ
%_3F9=G%^\shP!'c4ZuNa9nLOt4LoSUm@n^_ChY-QKB</!JLX"Z*Fl6iN!9BKh!/tP,E>V0YgDuFp]0u<2oF/g+)qoCEk&^&@k=G+
%s*b%R"tjG3ge!lF5luJTYRLeufCU"lEN\Ohmr?Gc'sIP4NAecZLs=pgO"m)paC5IZj>B*@W%=`cN)kQEBubX`$?V#O/<5WlMl(!7
%.:uos2hl1RRiN<@1M1_`n7*_Vg\:'qbk50ZQ04IrgWuEP$8::XcY\.@Wm<7R_mFmY>&I#a8sn0i`mU5UB"<R@nsY^/rpk#1UAUm0
%$o@<<3XJW6BgXEs(k**gR'mtE^32Tce_;#N3l^]t333N"e.Nn[[&0<)/<2]H&sEgF7BN65'.k\-]&/>I9gkSE_/%2hK2*?7PQ4Q@
%(R9.9KLKRtCA5+@T=,iD>^F,,/?1,bBfjG-SW3RY2ud8RA_S3&H603Ej_3DHZ`7oMe]=lEQ``;XcJ?A_VhI>3]G/$3H,&PN6)qZt
%lJs2UM70@bLamX=4U8ta(H?c(?%Jqeo?Xk:D6sj"FkV(_8cO0\Ei9^rBq[dSYIYc]YI9ADQD`H13g[S53+#Xp]iD4S]D1"o'lKT5
%4B9nXrG_H(i]C*8dF,QE+,dG7C3?r9GL$ubHgd3BpPL_,(qT."N.7K%U/i55e_Yt!a/Eut-eSqPQJ8i/h6(MZC_c]Q\Ms$A+0P2D
%&YbiTQnuRF]:rB^]=Y/_-=.D2nAdP?4LY0M/*VBK7C[aBiFbuA7ggVmW)el5gMImMhtkrh/"j<YZ;tGl(<SL;Mlm[u2-G!gjj?QD
%+m[.;qX&\1+Y+/hF#UH&H$4U_p#=r*bo?,TcM4EOcYR$R%*I_b05o.E9ga:);5o:faXI/VXqo9)DQ.i@Q^tP`h(rQumG=4o:G8fU
%7D4$g>g%$gEaJ5.6iZD!_uXOLjnX@S^`f&spd+n,[d8JBq1\@2?FR$fmt-HJ]@VE>h=k@BMq9cD)_Dg&p@aR=mF?U`RZ((U\G]39
%jl4a%Xl?Gf`#$/MoX1sUm4/$mqpp7Chlcs*i3)k>+&UX3imT:0o5iM9Vb`W(gtmL,qg>Qs9/!q<8^5NG$ScIfnCorrS<hpCIIrSC
%n8E+`4FqDb-=?O2heX=H0Ddj8HsT&K%o7\(k9KMdotq<4Nct0s3]s#1btdSSNVjUmVYRS.ZKWKljc:8*h02f4c1:+54#ah\XnBs0
%g@=FiVh<Gohi@Dks-gYifX'>EO)Ji0?^fQDhoO95Ve9R9k)DJU?d7!Sq?Aa(1\I6*?Gf"Rre3qFIE1N_prBnTi4mV3!O3..lnA9Z
%;a1.'Y^]AO1OXWH`@EbCIS.>%0_JWg`N:8id<(U#l5c00[1o&hP/";u%Gn4;K/1(VUE3SCrn_]H"p/CT*<!GJjjX+;l/d\ua.JAU
%9[E-V\od2QiPFdXd>'B1QS*-&4$G\fIe;69q/"m4"aQ9<K%u+0b7>*W^NBEdkO?rUO/MF)`+FSE3J_uD]HP@9GeE42*c=<AnZO!]
%qg%g?^8V%VoU6HNnR2CqVk5@(Ve*CtN_[2-^2`f0o[Ef+q`ji4+7C;B%Q/@l2^t!_jMCQEUh9eL?Glf&\0^*1o+"5N0)pqk&X54'
%UF,9_p%6`1duP`V_rI\d?=*[*X_&S\^)_V#f;Fhpqc$lf0[q`.&_GsuE`o$hrUf:3_iO]ik2-+-rmqfJCh8]g_+R#Hffsf_jm`&j
%rn#%/"'6r2:D-)m_H%:<=V?8M[A#&Y9urBh%FZG^%r%7Iq,SP09q5#*5.I&Ll0DDfDPu*ig*E77"b$)IaILN']TpLQ[*>AM'o);S
%=+[cS'jIC*\_r-''U's!/C3F;E<^[7MN]ShG]&\1:$%u!4:tJY"qGJ2ELYtP*0eQ2K=$o^*$geng,sKHaL'qL%5CC[L<$Ta35I;:
%Q!&g?Im.S7#V7FNi`;Gb*Zepq.#fdtQg5T%rj>TRb6*8Nfs`7$O5$IqVZF4kk\$K@\R/:fMG9?$1lY`M^Ba>`/C[+V..Q4HCdi=b
%@i1VPOEu/?l3;8LEK[ruA?n[?/]WuZLm$9*jnUaMmR5^*4RhBQ*`P?F1V71$6"7^\Q4S"`II0;Pre#-eqfoW'iO2Dkats6>Cn:k4
%&1C;[.#Wpe\ZipnPn+ao:3J<:@KfUYQkbtoQmLVp-/=A4j$ZAtPZ'*r!SiS(8EM#XqFp2**Tri,;iGQ#KngSAi5>i%7!Bm""ZpPe
%^hG;0EhGfK'9<f<g.<D7P3,f]BprW;=MtuFA<=/b@iX,jXh^eN4,AeH>tU(6C.L/iAYpgJ'9nE:&?A.PP)ZjZ//OAF)[UDZWIs3W
%du`&(AD0WC^g0#WkR_SN6p]Q!&4n,-gu?s)*gE=+R-4RnD,!?El)6uF&0m9laQOe5aTEAfBP]Sdb9kioOb_"CcA@a!***cqnH1,Y
%BnBSt65np(VuP7:;n7PO`]V=G3(X;DoWg$5l,X;<//2X@Jna#8eAsL1d.[noO=N$poG@.Uj\bic,s"aac)ZP>`H-X!Eb8GmZnfkW
%rAp/Z#oUWlMaP<pH'+apR*+g?;PUm1?nu4XH&QE@f&Vtm4:5#\'.+o*kR2km#A7QB<GjRg<e*W@4Hd75lm2d&BS6:hn6<u(Cf4YP
%Gf++4ZAj]3>sN&^4((o9cK(h4N$Ca?9g02q&;?gK`]]/P(:Z;7O\>m7,E=PIVTdK,_?9@22V?%KkH`oH/6J>gK"/',O\E]\6r"DK
%;24nIrf"Va6V:L2AE,dg9N[++Z<\&eP]3QPWD\s+!p9Vs.R_8PIn_NJ5^#dge:9VojZY3g"i=a^=hF$g&1nq(5rhaK7kT/XV`lND
%cP+-o*#q?gP^Sm$&>;dZFhhI[ag0A#qJ-U:G`u#fC2d4h4eQ[^g_0gS",KmH:G0i>T*IiJ#2fV(!3f!r;h.@AYOgDaK\+<@ak1#C
%`W#&*Cl!%s>Y#u-eMfp;9=Q'X+uGGffY'um4[9Pn_$aBiKaQdW4A$bAPWW,XXDC8lNGP26&>BhBI)5jP4>"lXE#Z/UaEAi)2,8gn
%o0DD53P@sSDMXJ`'5Ve/R*#4/Q2g2qfF!%#@pB'cisAWqY%"XR.;=YZSoAX7'_r2oF5d[1Y*$A%2VQ<J<"cuqgK"A$`Pn.,Z#4In
%q'FZn0&.Y)^@[+eH&-)cK*aDulfm=OgSCOi;]CCAOiA^X*m880Z<irUgd**0$Er+p4Zag"6<aV-KTF59q&qFX']Yq/FcT6hLi@%!
%5p0\Y=%Mg\YR4Se0?o(-ThIpP:%#X["LgH,lCH&F"Wi4N\iGL#pIrTE*XW9K&dOI_KB+AuH0SunkTe,$G;bK`q-X;&@%fNAYWQke
%\VbsMJg)R3.2\ii6bPq"n.]t$`$l$.%ufkaK?#P]!?2b7UALe->'-M\:]2V6Ci9+&;f%mB]I:0%?,@iqe20uE,RFpg.ofGLG[F(b
%fTPpL`@oCf`"N^l"FjlO_,uoL+(L!*$*FR<()E).Z^:P.7=l\gI3K0E4ddo)7H5/PkB<[2(%b'qncfLQHq^>g7-%SbYjm&J\L9:s
%!c8]5l=+`\+T!L&3[Rp8)2/&Z[#(Q65f&d$Eb:I?Bf'Pg&gUV9[gAt:-B+j<=8Z,a;BiuG9Il$UiWXqZ3QOT:qFRPfN6'n6^MR;M
%&4PY6L4#&9aTWBHbr@FG7M#l2"r#c)U^JRk#Ud\.PX'c,KF*Q1,(3-eYSSpT9J2@<:@<\G3[KIjT`dVpOEnoZ5\Aa!LBW*Wh_l,0
%.DNs$'du-nRi=XN&Y:cVKFc7/-aL"_Nu0-bd]=uf-6cUpYX-?)i:SI[O$me=fQSJi$0e'Q<NRC-\I)$E%:s?':rS%K,UGGrY*9T^
%9-K`1Y-d!?378`p-QE=m#p]f8*n)'7VD=O=Ce)k3e\J+!66!BNE^pc>[g=)m+Jjld/Vs0_>7-KX9Hj9[S+]L:m1u>u:N1]?E6.\r
%GDh]M#>Wnb\BIX26IBQ=bg!p9+Tp-<KTO2j&MOd,>2Cjh/E_T$cGnbbUTk)PmYk[D/ER:SOT_B4QmD4+0[8B*@WQ!%r<a>e0QK6%
%Jn]aT7@(gQ"6bD*R=NI1EV#?!0MkCES?\_+*u<:d!E2DnDIK+H.0%1)+GW9TE$NHSKFB#CfqaEd?>,tD"@rjMPKL:W,-QhhE^Y;l
%D+WOh!k2.*AVYs6la[BW+pQ43asp;l6KAlE#m&2s7/Z[%Lm"/mP6s(-1SQRI%uX[]@rJHkO9-X4e(bpO5ZrF:R3kB=fdi1Lh8=7@
%@fYV+j$ugBj'X']PQlrlfIC.o=QC6[P/mho!TP`V*RI8<94=`D>jR'(LC?";c;&81Fk[b14SMNg'RDllU#9AklR'\+M?2do_8`up
%Kpj/H)M<#"e1sf);J]ITo+Bc!f2$o$o2/o^l+HAQ?q-_<4H$:)/EihO&A"+gPZ:$n.P^Zj%PiUFY'2`tSA>A"7Kj)`+kUg@YVn#m
%:la7(9hmT#JaQ;V>)aI\ZY?4#_,>a`"AW5fiMi<#]S&mp!$t:FErlG$G[Su5cr!:rEtrJ90juhVe<;r,XNcT98u>VF!\hXq]+KkG
%,5!9Si2C@YB3_N/#=^'-88h2@!Us?ZE!=ZD;!``c9."%,KUd/t-n^%GVd-2u"_Z/FImG9?0e9jUa8XaKo0>U#@U.9"+=Z:#nJ^F!
%O2Nd)dtqM3_;tu3]F]AEXYtp8Q1A@afV1VSkb-=t'ISoI5`q6\3_`2*UtUfi_&e[eh%`eJ',GlFE-"Gd=32)j87_r+'@AB/#_Aq#
%;5tjo6*(_0Lu'm?O5g9RiWi9[BiEEfRgK,Z6rdZR,5XaS&qLb0SP23?4Pf<,3LPU-?,D[GFU>fg^C%ZN.Wn%2cbNJ5K$0_T>+`dQ
%a=.FPpaMOZnk+N)3$Cn^a<J3I+G/,e`<JR6YW7b;%OhboQ5,%LL]6/G6t&C?APZ<??K*+3.>.o9c:TT$&YS/35Wl:E0[LJc;8FRn
%a)KAt&58tN.S6V@40q0PFW5^!i'K:P:D(N(b<S<*iFo3a8.A`uF\[I<#iqTK5ab.k49EQ_C6=VBA'0goiaetRa;_L[4"74`XH:AG
%Tdt9S\j,#-b1%QA(2B.O?_VkKMK0nuA/8(&#VUL"<%/Dna2!.9j,?q?CR&[O/`mt(c_o?V1m$!2!,71h9m&n63u>8ch1e%j*)]d!
%G;MT,q<K1b)f\DZAW\1s<;Af2N;rH1PK88VHOqKbO_?HaECNqbllf%rZ+PV<%4H#E0j$HKNYXoQNRW3:Vhs.;&_:J=_GamR#dQ.'
%!g^J]'3NHn3Va'c$<%,XaGo5=+m"Tk-O2,s..\()86;*HZN*D%@%B%>*_EH?])A.8Z:Lsp#%O)6FNsrhMI8iG0+k$`cp".>-L=@-
%Kb+c.bTWp@:,I]YT$j&B#,M!fbfU*?arNj%%>lNCW'h5W>Tub?Ks"pToE^a2An<=@q$*h-.)6l,cN@u:EmI+NTo$?2C:0o27\j\R
%4J5nl@+!)\@43bEp59+5"O`)W#Nh@<BLI3s^Uu$3KOM$\92%WZ&Ek6NADik*>mdm:Z([Pb.Ul]A0D,]oL&mrF(9/rUE$A-A:S%[%
%89KXA##qc5CYFs@;A$(j9->Ge?om:2);-Ci:!&3EY2WPWi_8W:=&KT!!QMVtmQmcPUa.9f3L^FIaD9"lB.Ci^?`>k_oD4GU2'X%F
%7>EcD`+^>f1c0o/0MnemW?0%&0E+@JjT1(!WuE=1Ul[R81'`p=MW9JHK)73QXWW!ZAeVrm7og"D*5Tmr2BosFj\2Y-8/V,Q9utuo
%h1E#8"'_-0+X!WN%-2.Kk[$kg[9LpHQuZqr;7hN`"Pi)AG:T`j"=!:K#j%3W")j[qC=_p_]abn7qQFDT1Fs3V09a9%!^,.9\?MDq
%IOahPX^B@_Pei#"ZE.5a!!FBq>aGe3&+e"BCtr>X*Fq)30B"j?&Par(R:-FESoqJ?BLS#i!&V5_TFG1_aB`='3';,:_+PsklKcm2
%r]gtuphgN?1SjJOeCt!%!g8I9_%T1S,(U@UUd6me1T#!X(0OZL3JBO^Y<<@K:Jrf!/QkYsa>d<X'p0oh'AX*0.**i+a&3\S"tVXP
%UbIWmkAn!\:^Ppi1is?bKG-<`Tf.e(/$,AM6eI.+9@-0-a]7ZX3=,EsBgjA="i>m8W7ET3n#]_JFL1,SX]:R.M7P2`[m>*lMo@s#
%P^DAL.Vs,!6q3I?U(ds:0;>P7=bNN2(.0O;Bn1q'\X"%Ya\n/L^g`N86T;RDP&.kj4n`$gT<M:$#)GE#kNu!/lT*'"&h/bM\>XtI
%%KI2#,#naWk+DEQ*N@GFQR">s2q?%SVU[s:$)(FumT(9!_]TDqjsr-B5\8CU<f[=DKJ'4MQ\I3njBP4amEd)[;9L$S;BLj.HQY5Y
%!MCeeGSVPRbfK!:6I$=#)&R6Z'Ip-;'T-8W%4a^?b^]qqd!etJ$YUghZ]O"0CI>]M:fCmfOK0@5]$QS)d&PecjJ7c_f6`2[i?C4s
%(X8eua#)`qNV+d"VZUND$^7#!0iSVJD]ZQ`2T*'NHH=nj[5$kpaR#)K%(@HZV?km"lpdtQWX0*3MXD'mLW&1#pG*BR[a:-*ibLpI
%<tI`GM=f`j*%9;ZKYJp?`$@bWkD%oncBna-&j]27bgI,m#U85l'*M<;O&CSC"No?InK7'j'*Mq(\r$7*<H/NW+m!E+Oe*>DNDnq'
%h:p;;Igcf"XFsJgIJNHuqajL)<@&ojGj=.`_hY/ea/A%G[%:'2*PF*j(T5WYEnQbikGrTT$#d>0OaWhoiH'U\+tUdB:KBduD(4DH
%GbRCW08-KlLUCWX_qA_8:MM!CpS#5'9d7C.!#(1gK"*0@BAE9fQ<dt]c_F#J"[fU&)-R_uZ88GUn7WZ&X%uA'$eXa<"N#0[q*LHr
%#jRmHs+J?5,`Y`6_B8?uff,5X>@G'ArIe)W[t?1>EW@:qkd3H#s"5"Y.[0@Z^c@L3cnCC1c/`GBl_FspdKh[Y))-Us(`0P[IO1dj
%fTg.'/uHEi=<Z,NQHn7A[GHa$gQt1_o0coSe*_'Q3!`o!KUjWK-5FAX")W^"80Z3bA;>7Mpc6$hGmki+H>C=S]I;ee?o++aDd[D$
%SoW<_rXrCFACZ5MJNZ=>it#ik;ltC<%BD3NImWsd9HQM(2WP-tL((?jOZa8hE#KmQ.3a:%56U?s.T(@qp6"s)/0$*j.uA8_BE5"7
%`"^$<FFnLeEnYOGo]Qup!dLqI3A.l(5\rTYmQI(V7*Bh0+1Y8U/S$U<7)Z$5+bRQ_G9-B^@35!P?7:Wr=eKqP=SXa\!:9!XD*c7$
%&]VdAL/fnP,BZ':/oX2:G8(gi!]ILo^-..g#f=dCTp+AEcO:eE#*(Wb+qu(cCS<"aH@#b)jE-&Y)oBf,?5j`k)W<udZ$TGWQ,,*R
%HU#jY`ab`;"KMU;[Ad*2GO,!2_?W':#[.A._+7!Z8V1nC&jX!V$k&bIfd%8?_$l<L!(+)$Wkg49&Ag]GH$hAeAdK:u6M85aM,Urm
%0bV(_UX\AYL2`.qQ6_BZ=^7mR[acS%-(n9Ifc:QNfm?ghNK\p40F=7i"uOuJGQBHG"EYf,&^2-'1NU>>(<E$Z/L**t9I8"S0Vlmf
%X@DL>\]/BmUhsBZKb-_g#q`0V>RhdJHiGE6IQ!GXUE'mp1>r#Z/?:`XSB)#*7Vf&;G*FgP-rSp-PU"$^"GjKC@Alh<Uk3,#Os[HZ
%^F.6bIOBd]6a[[.Q`F78LU%,NrTFZO8fCZPn-2;Gd%&q"JgZan?X6X'e4WhP6rtP^2l'_iaOh#*HP;M3.+&m6*6<'K<tQRf([-^#
%F,!OF_%;eR]RXKHkQCJ6i6]:3\4?HK!dW`ra)<bK:\9fXD]%aVLK4^^Lp/?a6[6JiC5fc6A;2Gj98ma*(gddEqHb1$g`:tc:,YR[
%P(CAep<i/"@m^NUMTJc#c,I[+8-h]s<#8!OWF>GB+F*?N53gACN:BFMl+Vg1'^$f5@L[o#Y_S%aa_5')>t"VX&gDI+4X!A;Z&T\g
%jJ!M0'FpEr)&&\WH(s`X#[3h86:DK4n`WulTn\ApNKsL#HB/12JK\!NEG-\C."Q*4D%eTW>k`;5aYL^:U^YgH"OJk46=Gg5_9*FN
%`K?eaRe#XI:G1oBL.5:_3@+DY(W:P'I6.K8"W"-iWc&Dm:BV#["MF+F,,u6/c-SW(Fn$mh&K?7=8I,%V5].GT,%*qH.3=bFAH9*-
%)5r3Z"\VsOa^Bu+23'GmF@sAP!TojW;r1f2;'IGsqK$;jA]P7aBaMU")Li;98/I@.o"\E.,06Kmmd;f/L^5o-#QZ9.NS&A1--q!e
%'I8uM-iCdPKFp'+)+"o1'dKX?0)a8@(^qA1BI%J%TSuI]%^Iqq-+O[XB[Z%5(gFs-0duqS:)P(W/:&3Ei=Q`qOQQdTagrV7X[\_B
%!t=5<M5ZBN_)Q-?C'4jhLotHF_14!f_:Pbd"SO?rn@Jgkd#!.\;7diE*Hnt]K6qVRm[)kZ=0!@?PZh0UUda>_?kM_EoB1qF,\r/,
%8LCeIo\h*+1_e/R]YQl6VfT$0B9:FPilGTH+JKk4T1Ge!D?Lqp"S4MbBeq0)%+_*i:L5ZL+HJm<;<3@!6A3Itp8>`$oFAZRRk%K*
%]FAgh$#]bc#Z;,MMSdGu!6F2Z!(-/sK'GlB9]DC1fi2?[,@G5:26jIqiof*:I63f(.?t1d/uXSupi_C$0L1V,O\S)`4p[gH]7jKd
%'^49$%#2/gI%X$OpgARm5odC?%cT=oo3ej-Z%6$mKVap5#n'[]SAr+C#`a^#Ti%j*K=;["`RhU*-X=_Tn2h_,neL&"!`Dg54[&P`
%/V?H[W\brA(]pgDB/P-np0d6t7TT_KVM+0>kF"f`:n?+7/R->2S-CUk-j^kH!)j+/k5g?s$ii.[R!(ie!P<D8L\NJTVdkR-&9OP_
%4J8#P[TnnrLE'HuZ#7^U>agMgX\[EaZ)8cW/TCu!X?;LFcedkF7<f<;*k>+,)hJIJfJq8m1=1b;"@<8&QA.EaP?i!LDh-K%);35@
%l58U,NYhg"Y!q]PE.BJXKL(di#mC_0,310TObAlD+CK[[Nj"3>>0$tQU7M1lQaDu`Un.R=6,Q#k2hA]7T4,4*)H0t7q@GPVI@uNF
%,$#$W94hK:K`OIe0h=DWU,%iUL`g/?\3,l#@>BcZ-ms\+4-)L;<Q;OdTiGXAeE7HHEBjmFkQ-tM+ej80kAE^'KH(J=;VnB@0;0oB
%B,q^17gQS\$tDUJVcgff&)Ds0,fYre\ZKn&:<Xgi!P69id6sKdZC<&6;9!!j1ls(-m@^2Y+k:O,QP<Uf"J:Ldrbs\L:nAitZ4ekO
%%>)*di5!E4X$/j\?Gljm8d&-e"9oUP(!RqUq]Zc.7["*e*jW:ZZ1E?W4=E;mEh[Tg[#ua'_D9D$b@qPUbTQ9i0c[7FOk(Xtd@D3E
%*F[\(7bi`\_?(u-/qKOnb`isa34lXEFpCmgN5]F]iY'<9X^X2FXTjb<_*c:/E'Y@0DL8u42]Gtk0NQ:umPN3/Z(`*n0#VKLJPprU
%Uq5&k3eDa66b8dORX9_O6nW%9,<NNB[BKI3-47A7F%S:%YEcI#:<56o[tt\kP[r'C#.1WDhNNp+.GTJ#0Yf6TcGh>ocuK>t&mRig
%2C1g)9UKRpq0'7eZsgd9!ifjd%Z?ju"&5l?$B<su9N#Nb,iShH&0]#CV4*e^U00k;Zj\X"R\=^J+jCdjd5Z`<*<Q]V5+uOeAn_nr
%;ZZW=N4:;s#\S76)&5))=Ie^[j69I'*PVs(KX>/RnA6paSA7jW>9;8I/.gjtH\/ZL6]`6%l16OX;&Gp38^/;H6m^hRAH*4cK<%9O
%'F5QX&==I%Or=p"bm>,h5FkqKrN%7aM"Fbq(&W;9649,',<I#W"f`XMAp_W=1fr-kn9_S#alPJ"'l\<lFT6A<;kJa<J_X(>W(!5/
%WWrf2+^..1c)B>&>%fMjm^,S&&4p?G<*7>n[YkOuPGH]=!f[SLfcq'bc'3L29UlY8h25+O<tK,f.u!O;odpGLQ!oo1AXO/Q"%We(
%1GiQn@/hWV,,m%.mZ3HELVL2,o&M$FGjpYifg-[2N"7120.sL1CkhX:HJ5\bEg.6u7;_m%__ZjQlC@'-`lVPOO^6X,Q"Z%_fP,kt
%C#0K`@Oh)KYmY-`)Amo7,B"(5UV</U7N`@rQ7LA+%F\-_`1J>d*0Emo&K#5gj"[4=ED/jeU,:rY9HE#2Tb96AduL<Y3=&leFlC+r
%?37VGA55Vc&#_h8N:]c9]YYCKh!8/,!/kZX$BH5XQ=+s2'2)>N8$7Qiaqf_#9nkt8!=_d*7U!PTC12IsMqW=#(r;H&AI5"B!Mkr)
%7UW-V@sgU2%@h;Z^Qk4K7uQGnVSm0s%+$S@k1M[+A!G4W)LHbQK]J5A,Q9Gj*9nHm]u\^&U)-!X+l>c&D1=TnW/SoE84ROHI:NUn
%mK1WZOOeL/9bmm%,XQQ;@g9F*.Ru3[+u-<1W*koP72Sp;jE+]6@;<,A+r<kE9K,VW,SR+$Y\SppjHJQrSQ(p3$&`g:!E)<bddWMM
%&f<M<pIskOTkt)KZAm:MlS:,t3bT4FCLG[!XbPYI(1ohX/QO'bRIclb4b+A2fmP$a`pYDZi*]c^X=qL:eTWg@9@\Vn=\Pi-8:_rE
%bTqnh)BnX@B?C8XLnG9$[mP*7SlF=Qa,=.Vs&X1j3UL)r[1/.#&X).,i<F9P+;.P"KZg<6.u[KQo7:m3Tbb68%ujd2rf0;&A;VN_
%#r>LZ%Lk9Wd\?.;,;C&6&:=)8Sf7HPR%>HTUW-85E+12fTX'Ku-PZ1S-AhpY?lN>oV[`n-C?"Xe6LZhr#rB^\)'R>=2BK@X!&A#V
%Pp:NH_UugT#N"Ia0_,?l':bpLagg6FI$3a*L&YF3)0EpGp:E<',stXAh@"fp/fF4l_tj`qng0K@aR]1c>J=X(ArZdgmhdAfb,.,2
%A$23Y,a5eV#"FT'M3g'd#!Nt.mM"<7QqQFr=TufVEa-plPU<Hc1f:k,9B+=n^[%-[NhQ>N9gU+<,._W4O\4q4:=+D]j%YJc@T5so
%\`p-sZh,!*3Gus%AqX*2KsXG[3Yne?*NZ5nD\(Ve(ckUrNo6b-*(?Eb?F1CVB#5BH7jhCI6aQb3$'N;Z2)Q-_U+/W\QtFAG%/&!<
%cq+TKQt[H1SYsK(1.I(l6V?L4PP5o]/Ds&NF;0Wj/dT")e<g/VJKb\XKQL+;U&Se'"]0<Pa.PRN^J&%@%-L\[p4mkZadPrh6umSb
%!(nG]mNDm*R>5?[p-Kf*'$GFd/G%q1H)0IIK't6gX+bVoYte7$'/`.i)4CbTQ'If>X6TtJ4]r093k5kt?oJB,FQdKKa+<!#W`K=G
%%(N#<h^C'cCru=FJV_TbOfJ?[@K"JWLjCgBBRGuJ;(&_[:/"<!Cm75s>X;OK;WL0l9?a\Rc4YYD)<=G)(8-LiBEcSP'#la.2.NS?
%3ePfE8es.gO'YO_+lQKj@3RH/c'lt'5Y.""-"(>rW""HNT;WV1abWgV&=G-Qk,$*lD5OXpn_G&13l`/OE=jd&@1"(EEEeGfe<r+?
%NA*hmck.94W"!AO?7h[Qh.h&Ucm),W&=dHWQ[41>0q;[H1K7GO"P1=r-3EPnoHYdKGX0[j.$\cd40UG>6$U73YE3=d$[%Ug>ec`^
%12Xm6dUS$XO,h)\Wo,XH-RuqM[maq(bh,&h(Ec`80QP\dG[+gIeLV^un[.7`W,VsPqSH46BYEBoW&f-PC"i5V5IoT)1CG?DM?_1#
%-:+@@VGpbh:bj4J1r%nCIL_dP;6mo0*71o'1-pq3We+&W0:Wor.u0'q$#,jK7q38e/M]=!#L%!P]F6Y7b\\_4;&hTO-(?7IO?,0a
%/0[J(5Wf3(dC<I_K8Z6I2Ls78AspRCPn=TB#[m".AjB3kHLLVYb6/jTLY-i<!Ce%tb"H2dj9cIo(`>>%lo[`;Am.9[<&-(NR8>>0
%ABD>*kAA#PJTLj#^*1CP&2`KHEM<H0[_-#K!_%oC*<M:-3"F1(0#\p@:bD!b$;GPYjL_L;Prk$=WcQNZ(Ia`"d1"rd'uUCMD9T'c
%&?^S7o8;%Ai"j.,SE,NXL>?6:V+WZDa*KHq\2VKkTr93a6@YW<Z=F#t2$seF!rLuq1"r"T+,%Z=]&/n[*#1!NM@e^rRG0EW4!p,!
%#stAC$ER<qF/kp;,2<l[D+qYqTJciam&H5re<h]3]!O)obG%02GF+AP<6@Q*NY1eH;Upat<8cKP2J>a)#FW*o5R`qD-GYd]!Z+g*
%G8!e0OqXaG*/.Yg!hW>(NsS.G$mGF^h'MLT3a[Jf-Bots,32K4+D=ilOlS4X_\o8!g^Go2.5Dr"Fn[PoJ1XM"Ts_/[/'AV5"4>1D
%kra-`!2J?.!/"EFn:r;[O8uJpXT2t;GTd>OG3Q"rBQXC.WfDV2=l]uHAiHUA)"EB%FV(!V.5L;TPG*:4Ei/>\7HrVn;ghKkPM'q*
%^&tPi6Qp%+@.ajr<#qbF'XonjU:PBJSqNWMcT^.d&a.C9_i%Yr7e\W5(rbap'6SX`;3j;si*_6<dW1:EV[P'QWk3sU,M<f>,TJ4>
%<7\>n>*q,#(4eDtJUlkgi)-"'U%)^e/5ctk>liJ==U6hm$hFU%$[Gj2X3/C+OcKcm`<%iN(\$HPN^Rt>b7n@T,%W)Z?nmBm@cf&=
%N7ot.6*$.@BE`/TE_I%(&?5I.<'1cS"D`4hFLq3VJ15k.H"ePI\BU,gLPR`k;[/Mch?nB_7K>,p&m7FGU[/;mBFmUl>CsH4o!:I;
%L!6t&#WE'42?^@*Hf:Eu7.H5C*S^hc"Z6-N?A4aV&9gK*PP>_XCf4SO^sXYE1]Nk$,KqZ+ES<QUZ`U6dH'YCH\#V\dUJXcHMDA_N
%W(A";Y7i*`;9E!Q([,eF`3c!R_tjJTXjd0LcI(8mLWI1-)tV=^:^XM=@\%Afjpno8M2W6`s#8Og6Z>#Z4@!\8KXju)./qCP0GG(2
%R)KjFLT9S"E%GRZO['qP#iUP`PU4!`$t\EpH^aWX%eSqhRNQSQECbk1"q;RVKlR;Qd[S02d0_Bjj/J2%gjj^;.ToJ5%2+7GMc&tO
%.*N5H9Lau.i^<$`rZ(';jSa>t">c*;0H1^FVt<fp+Tq0$E2QdO^[pN`S)`'_Q1GaDm/#7kR8m\;,bqok=b[K_SCN8oNL4j$S1rl]
%Q=Jli`-c7<L38qOq#*&^MKseqj1q;gl!6lTc..;9pJVn`L4NIBTHY(],*A.CFcIFU?1S[;M/U8X^Q`aYO!I4Q49ddCPWDaK#Qt:N
%&35s0<KGR5LG7.1/7aX4i&6SCOJ3;F`(Eg_-6d.lY.f1ue9+oqNe!K7#%sUC(/&+EKLF5)U80g84+bkUN+Jl=3CieU%Y,s6/RjQf
%eNp=%'%*1'6^]0))+kr+b05O=%I#bn8ibA90LKWLPE+-naQe:&EcMl;LbP'E.Zb]=L=5+,)]ha*.5WH>e[PjGUP/:G:n/q0.F"`d
%:b(>21ds:/LmAW.2r$;l*+rDR"r#VJd\*+WFP$j;=6-!'4Lq_UhQ:,ub36h&LfQ5-57:hu'V'LJcWK?IJbdp%m'+PeM6"6\`)`]K
%iBXdM*I+ZC;dbkZPT7!VJF.CBXApInero?GqQOZgR18Bc0bTM:)!bW][%8K>XU7RiNn&`<ej]:uJ`)<o$PY,/7HSWuP&aORAT:,V
%-8EeC7;PseOB*>9R<fF&;\l2c(lJFIPhfKZ6WAZe72]!B(R5.<)PMRcS6%Std;9(+=n(,bp/&Q1OMtA6:1Br,f.YBteM[rX`i9Hq
%6L(:S'5od&@^YtjWlllT0M(7C.pE(lcJ^8WQ,!Zs;Ceb>Z3YSc'NiTM[OB%3:q,=c(@N`O;j_5H-#4uC+aITn$U#>YA_9SG=(FY6
%(%idnGe&aO!A.1R).UF7=:2J9M?)np'`_oPfj.IWRG?fS5-rKV<#XqQKTO0iN2brTL8kkQQ=+qe<'P!/Dg5^1jNsq:$P7Bs@'H<C
%!`im0CcK+f2JZj*k)hTJ(_l]JR^%_m1E-=9"U,!3'@b2S"P0LX!,aurN#_UC$JV[011qNk>/&='%SeD=7YLklT+M.@dK!Q4TJ.Y<
%H)_4(X>,Rr(ID!,;D!P]@4d.i=d>m$1OBFg)H\dqrBk7ooc=8GV*bgr?=;J\KK$G45)XBa,]T^F,g](glY?"+$qT9[k.%nZ-rq=$
%ll>SE1UUf#"Lrq@J7Qe^Hl.H?eg(B%NG!nJ'@h`k/-:pm7*-`$"AB]\rAoPX6qKdUVsM@KL:KnX8H37hdIsmN8LLn%d%'?B<]$Pl
%a_m6ZPt-PS51-/7=sJH1Gt?O.D-/FO>npniCX]LV[FF/<m'F\5('ER&!W,/*1fO9!e/m@T9aiVD<!)&-U.7I/2MF;X!j)_dOnr43
%IoKBtF<I5rL+Rut5GLc-@];ps[5S60N(Gl\?e4M<=f@&m.M8os4i?$=^Lg=8(r'+ia\m*%@`E5X.MtL.+X:SOr@(2mS-GUPJ-HlX
%Y)5s\N[![TB&-M_I+<F.#8McW7fcS<9*.mlOeTg.<Et$5N2/m.'UH*/<'D:pl8]=;V2&K/Ab[(pK5m$a0VQHR(mOHHR7?(g_4)89
%?6O/>1oaf;@.sk$1_fUq7Ig1BmN*>`IEg>2c8bg2!md:nk1UdY&:6be:Cj[KWDmFIKerZ^mL9s-T>h<DUV\g)26`5=PDBt![,tA[
%a!uD%@@Vu]2/\'*do=pj6o-/o&I#<?F+@A?8gX^8Ih$0Dms*=bb/MLj(9m)Y$SWr#G6.'j;%Bk,]HZDm#>&*&]m?a6nEOW%e%cCW
%So=slZ%KJTWJ<f"6-)se(d6igAo2aO;\',XVmf<IFf6d'9g?.SJJA[`0&/Y(^q%j+r$iOL;c+T_NtNti=qh4g!r6pI\84D@jHd,g
%MH2t9nD+R6.j4\*.?.8[-\3'$Do:,QOp<P3DX!97K8P@r)1si[ZL6/Lp4B'.9B`jm\5ti/*J]C%:#p59_D@LJ%8-*sSOc(AcEAN8
%P>rqpqTAD2Pl=jJ*1fS&d8B+_&[NlLS%@#[#W"eYhDU[$=7:YY*Lg'>&KPq[W2p;2I^0PT0O&4e4@h>4io?/re5o7rM^_GHN!(nm
%P!Ht^rokL7=Qh&-159)X>_+5DZdP5!'$P$d[>XeKi7(1",P3@MnKY'?7aq0`72bqni$;.G4to1qfskur_DTr--qEa#:sZq"$ji"-
%aJ=(!SS42nSH=aX0WL">%eC;TNLc^EXb'I1?Tg<KDd('*"^EEZ.@lq4EuF_lqLYkT?CpAC3B9:G>kjI>'[0fFFFf3BXMS+bNWm=A
%CfQ)r4EAeh^c)FRom;T8kjIWJd2IR-0&$o["Chfri[Zi\R",I@NpIV5[c)Y3*Q!YO!L&9]Ds(pg_MGNXAEO$D(.sk5e1H0EK]e[+
%fUrdI`q)I+$W(OHA'V(HjX'\>(![^2:oHG6.#k#o(FZ/]f$(E@"tNnW!i\I$<Hh>F<mT:g(r\\iWhc5[N_8NQ\$@FH"=D8>SB0Rk
%s3_5"<Of3E%ddEi5_6o04A]$J^Ch'"4-?Ol=rsEObm=/TOhifsDrjHL,FKs.=7SQRm/>FP8]<'&pK->lg5.TVbdtrG)Q"4S@T:h]
%@fo)8Mh67^b_@[b;"1#6*BerTC]ePLe/jaCE:qi%b6s\q`IJ(!5B-KsoMc,XL+L.jDf<Nd1G&e_Xf-U:'33cp]aV2NX?BD6;uPDN
%2ms"&6@]RbH*G!umD5X$nh:M;7B,-o[B5<V&XXHAnm,tR'!Q[["WYCSM)=S<%;II>.eC<a=!$Q,_;&SE&%@nU*joSf-6.fGl,A(j
%@<M![!Op-c:K*7@$T-Fi/K\IPpZ7ZdT\F6X5Y;PkZq=2"Ap`/gY[b#oE04<@S6d,"9i`iE5MN+'@;`:)FA%[\f%V7PAeQMLfoN2:
%f3aUO!.&Ec?DV4m46r\@k"6THcolcc$4d^\%R#3K3_h>QH(6T%Aqk(\mp!l>IO0<4eb>W<A>TV;5j279p1dK48WF[+5%_a!pAT95
%f:;Vr#Q*sSrB+dY*L:_^8e9NdfeaX/FAGCEbW3dq:%DFQTgl<:5?^h))0TB(TdCk?FCtLmF>tY](0jU&)Klk(]o$tg=EueFl!VER
%58\-rm"fHHDeYA8<=CXNjM_]\0IeB>A37-u@C_[2Qab#8)@1u(Tq#+;ds>uf?IK3NF#d74crlROhTAk4Y^0@u[UM*[BY3Ph'rsn4
%>dc>O8#]U^:sTB+QcbVl@Yn[>;[HR34Ori>0,N[iL]"!S4Sp<?g.S]cW0H_o3O,Wr<kro@i2A.42sP;$35+7HEW5nFP9"l-7f5$8
%+I2YHq!Z*Rm4[Oe['p2sqVU7uW%2EL+TI4*rkgF*)(*4IN7rcP2skCG;cT?(D/e1MclSr'=rQDXAON!N-Gf_RfXU:VEs6!6/=L1A
%m^s1FlF1PidgKJ#kO6`o9DU.WE?LPAX#F7n.f:@%gB"L^j3fp#i2(Gm0A(@R_fJa7:#F>_Cq;Qp:)W0h^SKGd<j(5oJ(XBXCq>W/
%Q&OEFV<uI`#,i,jns+(]D?V#cbDGO-=opM+R*k#o3#`&1CJ7uUB(SlVI%(]YF@cj28kht:h's8L!E(QOPX_XhOmZu,i:6rCHR5]W
%Q@OE))a/B)homa'9p&r>(`:4n2.*`,mBA*cnX-ae$I:3_Lh\1OH5iLa6fh/Z76u'SnrO%!^Kl=qJFg.%#.E!W+W7YP>P3=W@S?fE
%H.Qr6Q%t8TPt(.Ernk&b;o3]e=cZU0<?<6Uq`;?-%^,,N&7h8`od-8#0'pO7WMiDaZqa*fT2aNYpdeng+>!GK$nc$1I850m>jC@.
%EfG2HKbjIsD66-&ke(qU1W38t8a"&E^p,[:6HE_2E3q$6`<j['2l[QC@-O&Wnmi<,BmEeuZ%,jCD#m*F1[f:*,K``=UG/magV]Os
%fh\sHBX+)ULg;P2kK]C^/7UHQqD*r'?J-ktH-uICs-mrn`0GYGKX4es_Krp3@&,.ci%G4'W/"[`!uA7c!8$5<"@Bqjd$N$-TP0[[
%R^?pB[X.K/_1%=r<H.2>EN[iXb*2*oep-q/p<L/-YPV[]dtkDC8(L3U7aj<ii,#2$%l9\A+^TM>o'OWHdnZtbW"DC#M1_D2qS1kB
%RkSeBq&_A!,ErO([Ml*`_]JB`7kYnfL&UDGA$6gN,'.7Ie9-t>dhL:^L`@^Q(ph.%_eiO*47On')6UTL%b!u?Y1YjB1M::+&-_aZ
%@+9<>d#_[Q'8bFn?9X9Dpb?@D2%uj-/b"h\!s)>'N0XHAmjoDV1*7ib3F)nn7X&K&]c/'!?cjobD5##[JAhJL+_d\%(Cjp8/EU1i
%qjD1mHIp_A]JS!R3b;f2;eJA9Eg]e&-])U:#r<AoK&>+Z";#\j#\44Q4.TJZ[k?$3NtOIh3@iX55+oIi1So\9D(s/<0KL$?jI0e>
%+E81ae&_(7<N0Fh2Z7oURVg7X6="*NL0$leb-hGo-tXhr"_t2&oOB5t\-/t5Q).^c$eE8$HWXB#EQPLWd9f%[m)sm!]KZ$?$]Wmu
%et[:-Hs'G0%ujSR1lOUREE5\qE90oYX/]=W3O:=_=u2NU_5a\Bj:n^_!_oVL[<eE+@&k%0fWq$$p&X0,6>[-s#1J*N<*m?Y:o92"
%P6;*_.^`H&+>e*',5.GIM4V)U.hK>Nr"M"X@-TEsHWRQO$'u["A7:jcBLTqW+uKKKOp/*q,W0sQ82WiF/N+m+.ZcBBdLsVbNnbuK
%?bc^YXBWh\I9&LCs2Iri/ZR1'Z=)G/F5Vmn&u(1AP2r#Jo>TV!PiNJagY.ZTdl)FU/W;)okc@aG[9_-h.u4SM!Er)8FH/I8Z^[_\
%*cp?C5@G74eDfVhEY4_phgI>30^NWm7TrP_QY[5F-7fBn2nj]2pNH8D\`gYp`lSc.GB3)_l.KTU,crU+)m%be;;T*of8p<Ll\GRR
%<PhGSc-5n2KR"isB\%`oZo&!kc<M5sX+;hp\>/$)H)?"u[#BfQ[_j;WYeLBGn$!D%DD,Z*Ma=(]O<Z1;2TBKaCd]e0lWVT@"/8q.
%</ol#0YoN@=qE]%Bj=VSc<Vl2X%iJ5DP:tT`sRrtk#Ja'K/03W4Q;34`b<i"Q.mjimt[V*ItI5@EEItaG/,X(W,9$kV!?N0O(Esd
%G![[%/_(&lQ%[YqK=@;2>(T\Cah?`J4\ca;qB"4Ri8nMc$)sbd<t\DHG%@<W#9Qr08X#rJ=I.*\o;'H<0AqqB,44YI)i(H3ES8cB
%luCQ&M;Wk_Q74t2:l-c5Wcp1,!GfGUF.irN77/'^[HGT;Q?c6LX=X2@4j`:;\>bc9DQgH)C<Zt\9hghW@9W0%JS?m_?'3kgD'Djl
%Un=T"dQ+W!4$``<g*Ytja0/-g6>[g(+RQ[e*fe`G=,f7+_-4'S'Kr6O?+t_.k%_m1!gE"A9pBBr7;9gEep73$\FA!K^rGU*6/0ei
%e^tcFF:?Gh[et)k[A@;I[bt5_6)"'9><-fnF9)WkB!H5M&(IQ#Jl50jC3YjC]$5shWo_B\LCk-DC9Zf.gVAj:p2C_1F>^dj;,L(h
%>9&u)gVY#5F0dG]=tH^2ABbl`4:00:W*eZ_L)EHr6?X>Y)ij3=0e9B4@;CI`S?,bYV3O490Km@)C%5p5;3N</`G]J7'!Q\:D7IqN
%2J"G!C/J(_eiJ.(4Rta#7R,Yu_khL`LTT6_Iooa*AOS<`A$R.pFp-+Ws.2IB=+u'sWcFoS6-<9>":s74eL3bVX(Bc57a!`i!:",b
%g_+rTPojU>bNb`A<4U*S'^dEPS6m12Ur=a<3o9:U7CKn!C?a^NU.W=Hn%_0^\9s@t=PI:[nf!G?TB'Fo:]A-)(B6Eg+)I>pJ"Rl2
%8o^kjen!JTUB'a`_9i'6fPYhn*oPHhs7XfV"N6!WPGYo3eZ?scG7WO/PqHf29jj^oTCGaQc>j>Mpn,Xp^UJ--_Kf-q/fGA>F2oDo
%m6Q&Krums59r(]LqXfZ6qJW1#n9p$S\]$e?o5?rW$fbmAKr_R0o\C-Konq/jX8q]i^oX$NE/NJo.)"R#@K-7OP44O<hb]nZRJF$d
%."!?gdcetEeQu@a@]SJFkXH>@-(&H^-VQ%$/8G&Zd72$,rJB5q(,5K'(U@40UNXO@5@U(g;V1iLGe&SE?0ZO'j[Y5/QA4a.q;5.G
%#!NsD>Vup2B+:^B#p1mHm"FsnfGA(;,ObXb27\s=pWG,?W#9O,km+nMI'PQ.0kMl97WFe17I"pFcOL[?>A5'Gg@(8F(e1TmL(-#%
%,$(a!JQ\65EboL^#;C=dp]7i4E>3BS4*&2WV-SX]S:9ITkJ_bbfk\[k^;2'U2<X=cMPqmLO8oR(FNd3=Tgh;aGii>V;YE]Mg[2hU
%Q5d7D63jtZ;kmNlARoY26M*a\>YO3g=4/MErm1m6SA]Pt@*LA_YG;#-UtqV6?Ies#Rr5Hm&PEdj`AV7_$$+9W=gh+M2mjV`'Ln6R
%gdkD[9gXj_'13IqX6c3h+ok,P=_iiSLs[31p$h(a)5gpff9/l27DmX0rJg-eM\./6eHINSlEN]T`-V61o=q3)X+11,[b5iL2M9YT
%9UEucjCmPBC8__'9b!,9Yu^p6#XCQBJIf!DBp[KqG-2)%FGp*jW'I<I+\5O@Ud:2*mr)i\,s$(b6.ALNf.Id)c/D-M;'";ho:cWm
%qhDH]ne0n$nLk8)A]MXfd9:h@#-jlnZ[DG>,-g7gTGBoYP>fm.4@4rK#50`)\:>rCgCg6XE(\p5BHLj#U=*fAH\)B"Nc7B7mDSG\
%5a.F,[+W)T5^TcN4J%[faq5e)+`J$/2&#Et(UeuY+V`neo`K:TMGWAu%4hX5d@o61W,*8cfWqDqSGA&'CcB.CW%?+i[qTiV]p"Sn
%i`iF*/iX/c3SU\Gg?gVW^=(rS$fOeGU38ge8QXaIT\Hk\0Jj&G%o[`%[6?<s7+k':W9-26U8WEL>Y?Ao#MQ+Bk\[1+BE=("4'7.G
%\fo$T:]kffd<9BDG+:ph6#/GX[d=@R-3h62,17^G<)Q2e#&&r7C(smLrU5W\T`0n(?5nXqi-\58kmI5Z*O,gJc.Gi>$+-n.UW^.M
%Ql*^ip!I5O3J%6:aB[=Lp2t'[NW%EW/=aCsPtnEd]:u_A!s"1#Y-^99GtsBTS-%LtMr$`CLd8nO^k)_5KIl/pd-OB<bjZ#qfJ>im
%oH;<tJ'Zao0oB6J@o5WO$Y/bT:aX;-K%N?+,8B#"-k"mrYfR!)bd4F;RfRR,g#!_LE%]T\S#e/7'EdCl'm8u^hc(49l6^MceBGA=
%.S_iC^5:kf%2.ujUdt,?,MO=]m''C)oq*^j%o65UYo!u='CaSkTuM(6qA[%O)>:JafIe_ZE^Om(ngMqp@"/q8)j%d6ekF_e'+\_9
%"jdfL(6tp*lj"(NWQ^O4Lf7!okgjt3Z>B+JBTk>#T6[09Y<pe2K]F@s/NDI9Q\qU?)\`@<,>c4V=R<?.6,;0'e0=]36:\\?><nua
%JNHLkc]C4HB;.PX7cg&D7<)dH>o9%HIJ%O`N`3O8>j<)NQ/u8'8F^L#po!"h9t15Z0JjLV<-^lG:?Y%.K"rL/#OH7B\n:\3g6Qqq
%qR0L19061q-M/-THWsF%6-07\0fcrgq]2q=/&4Jg,;8H&emX_],!7]u1s/GSFl61HW+f)(8L'K4+pJ0Kc:Km;l`VKF:S5m>AC@pj
%>1ePTAmc-eD]"rT.%Ec.g0L=!16h*:QTn9WPop_%cr-=LG*`!iC^,<7;RSsqInZ9g@hSDJ`l1En5i;=Lh33g=NG\$W-.,d1d+Cjg
%)g$ZucB6o5!*H&Q)dTHcAZ.R[,$-D;"PO:=,-?rd?F8U[]C/drj4lL89jC%pdHn6=X,\;hFdV<-nW4)bU\89s?/U=*'SX-%L3k%p
%=7-eooJC0H<$Z+%nIWBlR5MgPE&Q=(d=d^?8jFBt4YUSt-pPq#GgIEeNaUTb!9L@<s+baPihF+pTW(%/"lhBg%5OVtD73l\J:$ZL
%:-;*f@L^]M%c-dkN&3/NG<5rjeuk_5Ce@ilMB[SUn#Do!KOWu2YG0'XMMro.NjA0j0I0Xuh8V.*$UN\V\Mk=u'1D-_V8Ja:!o3,Z
%$#?4mEUN8@Vk$25eq"!0gPM*1`P>/8ghBD_;&\*D)Ym8`.SJ]51<#!o#rb^'()!Of=mZ$dk;7(<Iu/oH`dsb"jJ+0?!hk":_k:8<
%SE:WdbH^B>.X5UY.[)<2Y"pRN<1p#ua^WtRZ0(KI\>]G4Bs<]V@5XR0R+OaS=dQsUZI%s?$r\(O1US'mN&5V2@'%FSNu+aVls9mn
%6OOko!rC,UP:Q-bgh8VM)P"X1^gn,Po+mupA.?oNe.srklalZ@!6qNBQ#N+["bRJuXH4OH/\LI36=03q+K\,6<WhbVf<kW3#S'O>
%[)W42Kf:970sB'VV@q:ri3GXUdlt_P7/A'cPu''c<tiA?mAU5c8Bc*!(tUYOX^!&EZ5)=`MqV:?_Eh='a)\Lk>G=I8#V:nn"LL#*
%gbYY)U7+00$UlX@'&>Ig'c8pK:>dsBFH(Y\TU\n"C50:CcIiqR4`j?a%"<^krN<E'Qb[#d9s#Ae!q.ZkT-hbr#i]IlUnb4#IMj=T
%=PXA:FpnldR<>]SX9OU+$s,"#,"f'U0!j1B3Msn'7^E)VS-s,8b[3>oc2=^jg0'nLm$b!ZkaSBMCXB!rGm$PCT%6$eg]CbP$6j$R
%3"k;Ws5d1Ind+X3.,UtTbhHP_-e"=+,;CYZ0nIeUm=58_4:(V#-o4@ME(ngc_2Euaa_#u3GehF@5cR)5fckp&\CYO2$m9\M[S`M[
%Tn&>!ZMIm:dbH.G\O^nr(6Fp$<(7Pte0i%7FU3tH7>PH*/OkiZib#t2j[OrX(`*1AdB;_eXBNkT(PSl&JrEW$8N"l14,U^GUIoe9
%=^S7d1c?GMqGo68:T:*_4OIt(\._^.*-c#X9hcA<<&\?aib#9!'ggcNo_$F$bs\S*U^kV*ZputN(>t$#5Y-Np-DjZVLGq8QOH@IM
%c^McHX.D5!kqS=7<ngJ2biIJ%1A-/<h'!tTWFIUnfeU`Wi[OLI-9s@h_f0f^n5#Z&P8WangjV5ueY*"KJ6'-"3>5)=kidMU2VsZU
%cqDX6A<=9q^gsU"D]2d_#-+i6JPO.J;pJL_ZM\[9l5H.:]BiH))rtfQNY(TdWQdp#`^'1g2G=fp7e\aJgZBCT%))68XVYCI<B1pb
%PNAr7IPTWf*-*(u"#:,T)T2nJiL#R]3RF:"XFf"$3/=5@3#!"]LYOn:+?V_Gfte0r@0WunbE!hf187*lGJuT.9sg7;(U5\k+fPhY
%k9a#=8=c]_6ldn?cul#M_OLS[C*Kl+R-B)p61P2K_L<fpSri#iPKM9%%lZdFNDBYS<6cD+1:]r^g9eILqQ'dWKWRb5f+-K_-n0il
%<4hfio$!Xr#Z>qcMLOj[CkU/h!-aP@D!+B>Bq3/"!WY^(:UnUl%t2&d2AmfZ95oW%m)djJXR_L0KL`eUG4+d)o`2"ES9OTqs.ukB
%<9qo<3&r6]:OJuE_m2.u!1SXt!)p9bK-;u!V:"q?f4/O,$3uG,_F+!-:n\6\/esDpb+Xt\iNnpcP6E#<eub6dW=q5k'6r&%TL[Kh
%irKM(n/FC#I>f(Q%LNEp^<.=NeL9XN6`?8u&cC3cJ=]M_;1_iC^;6d;V,rI6$!OqF\Ao@VgqlF'&@nj>_j=O&N"_=oKpHs8%Bmht
%DHNh=[MgRHhaU(+[F6s_3+)0p,aK5LhA_G$Wp2c>fE7J:NMrelP@@Gro2uW"f.M:JKb7W.7ubgqF*-Lb74=%$Mf=+eK@5c.&AYh(
%>2dM`QQRM$M*lEh",JuI\DmQ9=mE+Y(=Ecg&&D,_W]HS0FYnX_1J^,!Lq.a!mhDnQfl]9/p5pVg[Z/f<1:ED`(+SdL3e:?=Mi/;e
%-&'_N*_$5=%sT!=eh&(U5XU^qYY"*c?/%&@US6/4C#b0g["E?MkMAKo2Vq2\IXUQF/8W$H(R+$B7,*5O(<LZ]R$9Oi?1BEWi**B7
%ljbb?Rli/klA.r,P\0>a!Y]jRA2BALkgRSQ(sq[:%P[[@L;Zh2(DoU;'H:LX9e(19WZs)e:nK0-QC8Wk,oda:A<\D0qRPLi>YXT,
%o\F)9S8rA>=B^3c@&M,gM&)Tr"a"e=%+.[-dmHNW.N;<L5Vls/pC[j5iA<+o8%YKV&QpTCK-L:3SDb*.^dt3+Elh:0"3$%64&=ML
%(N#=T'MBigQ@tJWO[0@u^d3[WLR&P`!\UFW,)Vig;>ck?A!Tq'aKU[u-u'qpQim=+3\fp2TQX"^O=*fFR9&8q5ri/#$.WLe(q=\c
%O.eS<F#V8.;Qo."l'5<e&<".4dbKfDQe%FYiP+Eh)_IkF,^PCd6J^a469(/'l4auP"=>D634ra8Ymb/)A8;q$]*RMT0g9qK`]20g
%o_W7",Cq-Zj2.F`U2RncMe%t"KGjF"ef,1G6^e,h/4Lp_UcabtEp[^5W6G]`kT6NPmm,$>A!H6akSf)p9@HKA*uEZN_d0-K%GG6C
%MlKbeZfHJkgqi`DQUl17Tb`9&6&ZPl9K'_uYamanQ77f&!65ZgHGVF^.W@P9s5]r`0FS<5MuqZ\\b\"Z-E;[E;\6"Vr;X+t0"mDo
%flcGi!W@cn$3\"dbj<u?%1Sat!>5t-QdBQgYRi@AKoRPg<&'((pMK5#gQ)/jHSZ_22crL8i.+ZdrOSV2ci$smX_`</*_<iB)*)Uk
%qgc_&4U-/e)Z$Tn$l;I/I>&eO%pMVEfrl]L-:'"E\/!CjBtAOK7B$B-)s)6K'1.H'UU*aVW80uPT!hN&N7Ki>n#YXe(cEJiI*8Bi
%6nD;R<_t<'2pccOnjY=qG[XQm\g/T*W`%<I+aX=PSTM]_jd/ACQMj0VJAS>)'du'/E/DO0NK+^+0/=?o,&Y8C(g`rSKLGJB>bSq=
%r!ltcI\c<tPUC$l/=U.0AQjii=W`L3PHkgs@dT."<k8>`8jH-RnNq%5LqF"MF:Fg/2,r",qF]#Prps=8Q\[4).RkFS.Kq-[#aP@G
%+$XkP.a^9./KKnDIcE;^S,bMVR9Yd%Mp!@,"\iU*$meV'HRbOUn4]G&>J*85YD#74()oTD[e7;BGh\?9k#)'(_qSKm>F)4j!(Oub
%BQgm1pSc+eW"mj/o;H`Ko'GeXf"(-'9/KiUY9(0$E+hL3?/5oN^dc>L.Acl!mY)Cu(,%\7`&U>AQ;#T+[XEiXdoBn<.lA"]RQ6M7
%?>hS/AdB#&13KqZ2&V+/>/taTZ`ZrOk<BFGj..TZq$NPp5:>R,bp')f*A0K#H2[EKXs![eXCTqn.=D3[9i4p*$*7XJ0KnTIS5ls?
%psZ!M*/J5DmFs;a33J`*I5UHWd8d]!*S1P+dlr2`IL(!0((Kl^lusc#rCI_@M\<bi0O3c[^b9!)S"clXBb+,d?,Ja"AbEYb!%rEY
%c5%8U/Ka@W_WHFd1g6bke+E)+(a#P[PdCk@e1B@1V6=_>q@sr`QD>g3[R2V;Ed%T!SECag.+MBqFu5C6gN8<+C&\5&oq0Rr>Jja\
%NC/A(&AYRC]1hNEX$Al@H]aX4U)8GE:-V:n1R'n/IqXMNb^)*@Vn\C<!8%b,:ue>:eu9XS.r&'MAqS0n0:8oSS=<@ei1YbNXfX1]
%64I&^ei?NL=>9u5!gTD(-ksl#(ZNB#9F>:=VSZW4$n8BJ&:<g6hdf*F=+mFXPC?]/+30u$gFG%D/)Q"61u<Ru;<sPZEs"/QC@1Ou
%[iUm7a?L\u2Pm.gd1'h.d\jXX\D5UESnG44f8i)sFGJO\r\d*:*#g?q>?=+R;d,[\P"Fkh>]B\b9Q77k;GbpR@%X?YHX2t`3s/-"
%*mlCB]Q=laq=A=%b,nTa#;W$eN+:NE^F$FeJKoBbUoDKs^oYo]=5=_D<VL@[O;7a-g%9:NTjJ1A`Q>A@1b(*n06<i2UlSPd(Nj;"
%G"1@l8'ZK.7X9Mq0(DT4b=Z]i]HX]qRmWYb)^tu-TEU[!R)PANeMh@HZ]U1@(V8h7jh1o2(j4]TX4I'sAB/`D.bf_7+O1l;k8)Fn
%3h1i<)"WS3$mZT\%b]i%LT'c*Dgt5AXLh%3PfM:Am[qePeBm:`fP+<aNf6RP4*iu$ZnCk&$</F#lVqPqs*R;7b%rmV.Z1YsQ((F"
%':)8#>VV<@fI4;-b/l;QW/b/MHL"=1qTk)udNn;,SHV&t4cgdu[C_a,7>QSuL*nKm(B>J^]k)#egf7I@qm7s8:?pH;WZ_2je)?Y;
%(+roHhQFODVb,RKcIm#SA.R=,f1@=k[l/_j/#S#]N&!a+k(+s--Lm-<qbC>p3mJeAF.d<P[<##qMR&3C`_KT9#u=CD9En>B8jsC,
%5*!p7HZG\RU^qVDo7;8>_+_`b1Mo'X_bGAie8d0g$AO%W\9@[#L>/e)=oq'1*c1.$=9)OukIr3]JQW!;kkE7NGn&7GU=S_,dou?E
%KTa.1ZFOf;WuG!^SYRMHk19C#C$%]kWpoIo/4j>@#`KqTd9N4?$qDGjF`%.1'02%P#GAA-b50"KY/JB,V`:tel`X&/4`.o<]D.ka
%0<YFC4X7HZlV#B-*fg@flJTj@/`@YtY!kKcrS/;GNI)CihFV$OD,M=.:j!;4,A<=R'^1El9OQ.'dT+4BqWji6Os[\ik/lIUH4i1*
%1bEAQ`SVT]/K*'81TL<JKER;D3?ArcXiuZsdIl_$'7;`e%l`IQ[D3A(]/i`Q\/Lb6&XupNnq?Tdj_0n,V</74L"es`^KXe)6r$/p
%K\nW1H4d(6:PH1^M63Pr0`sM\fuL*"^-X]dTLGH7;'O0E>M$D>@uO!*XRB._8:^\Ug-1uk6Zf6hY@c/[*Z;<WASZu0&6n/,NPq_a
%_LZSNqkCW8OQ"9kTL2A97deB.4la+W#Lf,A[^[<R+N%K'\W/[%ZjHqTg.\B-;<5A(bS-&_n/e=V*'+;HW[?n><"pWi=aSX#BJ22s
%Ads8H2@8pqSH`U_c3]st^[GW7Xat+XRQ*M,dVsTBZuT)"8^'Z]^eipSUS=_kSudNI;:VjU3R*5Q,`*un_N[r+&LWb(;h^P&9$;No
%;71%4%^F1^7_T"!>Xra3c<f'#/so;+#?1H=KL[<7M+V1!0#VagYp<'(&9#Ou#+RnC^eIh,8PIS7%_QTb-;n[.>!Su:X/`G[I6`lM
%]4BR'=\D%u,;gMl$\?lC=4X'?[9i*BHJq<-JGh&uV!#KH,;"b3@Sji;KkqWX_(kpkrYhEq01"XhEI**tJUCG5HlR2U+;GZKh5+'6
%A2S*uQcI9CBeI9X8t9pP(qHnde)Z`-q8$]Nlrr]?K)>BV`J[;)Rp;lZ!a,dg[0"gueLd]C^oK?lp&J5kZjj3I;T6T1rLD6'r@,Ol
%;Kg6*g1d"u?'].UkW,Y;,*>#[\`aSJB/0&qUsqF3aL+..@,g1ej);?0;UPdbLFY&m*:c[k[';PlEG#m,/bRpUXpW,Y\ak-L]k(s8
%'iU$pDA19TdUNAKjhI&^`*!XZ8Dk,kBd"&:nd_bSo2529h<I[/hbX\]k*"8h*!:$.#bpUMeH_A.<65@j$#>-'6IF.4a.#W0cG8%a
%Iau-C9R9j`ECgaGHh1P@/cMi+p<^/9ZcIF9*'r[^jHn18k0E9qPB?kk2*"ec/(,U%e`m"k)\m0j_%AQ<RaI$A?[6dG&^>dD40B^S
%:.^!`*,eU@Y,$[]^F>m\S_rS_:k&RD&fo\/J_\1D;F%/oS^U"%h55Rfs#/k!<RO^9WDoio2sakXCbcnL<0RS+q(@j-lVt<eg&Y<P
%.[_V"<TM/1O+2Iq2IhXPPc5VcTX547?<:/=1;(#[c(gl[Er]<.N<Zs.KKD7]R18BL">WnUs*ia:bn>"2eRTD-q7+NYIhkc4A-F.?
%Yk-=4^*IJbSa7"`SuLLpi-i_J#`-@gp<*p.Ba&/5C)5;[&.2t8P\RqbaHB)0!LFh"O`IJWkA#r%>Y-D+`Nh+:Q\FiAj=pDB?fi\"
%Hs-`2N%p6ncG0RK*n?i@0+YquBRD[JrE<&[V(KR/')`ej_GN9r*_bY:DCVm&:pUW^$95]5p]m%j+fF,;p;n>TC+VlUl&bJWqHTPq
%8`U"B[*FBU8>Jhm(k:?H'ij3\eK6G=$$!8&l82YA?2V7M8g%3YkuoG:ktab*S>FAVbJF#]cb6rj/8RPA'25cj492Msm>3X>P]TE[
%AG!u=qdMW-f+tY(g"5$f6b#(rH:oHX,V:NYA9j,(9U@A<+tTuf-<STs]@cVrbY?Z\bh!Gb9U0"$8Ma^6Zi,_(3rRtD:a2MShA=!0
%4^Yh'9uk^K*_($rFL;F?$!sZpYf*@Q?c%VHEtbFs%2Y15O[d_m\0BO2eG-'+EE7G@M7Ff3;MFiuX_DsZ(q39H3^icD?:,g:#7.PV
%-gU^(^<UV<d.s7)a@%m"rb.*96G2)mfb"FN[in0f+*elENu_s!UjZZ6J,3^da?AfgAq>J<5oqB_Vq9_SPBNY0ANPma8Qm\j]HSXY
%!'1+6<#/]9O"i[qWBCj7oB[7YiRs:5r93J2CeQnbQ]j1P,5IY,ZrW?b`+h9?#'Cr.o=>^)D+?PmreOA*)5uM!6[VAI6A;GJW*4J&
%8"=RJVLn9gUGT+Q$:tIehLY]-2dTi)[%]FZ>-fTCd^^0L!d8J>j\,l9Y?D%GJ"3s&YA@(kBC=CaLl.YC:GENT9[IDQI-X@*TQ,Do
%Qbf^Ccn?r4c`O'?hM^[ho20c(1W/nMYd,*'rh[jVrt^eg\E%A(ro<:%ee:)35$lFNjc^%V%`RaR7Pn,c"c4'@k\]eq;g?*#f:h5m
%=LV7<_-n?TU$7Du!2am*DaT0-O"j7jbU@hW#np=J,3(E5p%6ZTs628HA?^H53ph$JR/.L%SgmLrp6TX-+@)rcR,MQ1(AO@aTlQn^
%,gclOBPK5qpnSM`?]<hO+d>&+kFQ7!kl&<9=Icra]%olHeIr?'\Lq.tG"n1r6ceHp'LGM/,\J'/!dDNQ\,8S$8YPLp?O_mnnmt?5
%"+[N$4".Sm(JL%J&`O;5$?StS$LLYi'#62nZu!"KGN#p>F%0.jfUB%PZ4he>TGT@FH!k]<3]i,-iXpV2UnOJCO(/]73R$dla([\h
%^.]A6H3F%ZjYuD)'6%kqiPeAM2dZhr3[r@enE-o8[(ee!bhYMbK@sUiH!ckQ,!>)K6mmWI1s>,,bA/hZM'pDgUsg1!;:K^E:]gec
%R%pSNVsmuh#IDg?PN,tL<5*g2D6#F9%%7T@+ic]nmQ?!KcXq0M9$=>bB*t.ua0-Pk!*tF$RRB,$Y;?RL9jn4uW\&i('iWI-iBgAt
%_1l=l0&5Gb*CE:BGNHVnk'"SS!VWk%7e`/`=<sj\*=sT4`=Heorfkn)":!.#ZiM?[RF)!8l$84QdN5(.cXTmGec_>mM8_Z,l-HMJ
%iKDc(rJ'm`Y=`]8lb"D+G=(r94L+fU[T_?%E^@jn:e9F<./7?8$>OuEpCp`/WR<_6=BCN7KTb=L,oW^;Winp(,f+C(DRgCE>\\""
%[LCp:V5V?"Pb!jZn\9PIF>\#X8I0srQ2)Dq4dKT%#02gG5\rYf>mD**Shc$u<-TR>BjeBIfHC#sAa1OAc&f#eiWd94[IP9_9ZPKf
%A+a>BR?S<Jj?Bk\9V(_"Y03ak)PP;X*RVd(Cl187IiqMi6;;_=EMJ3!E;BRdhf:*tV\8i?$7B#<k0+K=G%I79hn=r_V.!^K4H_-S
%6:f9s?"u$(U>CTR7>=+ZNR:]8LBM#mC5dJb)5_bS<Ue&WS]!:F;Gl2*V1]7p2&2Dj=;rW_6s%oI_E6+O8^;#m2Q&0[A*9ARN3J*:
%$,=EZ-^t:,B>TYb32<NFSL4E)L#_GSnheUV!.r-?g$,!k=MTquW$?9V\aP@pJuK(j8boHk9S$;FedRtjRgqPnUh)&:C1fTN^nE#>
%>)*<@7Kge)W5W;d=fpeY!3?JT7hc-fCM+bFC8toX^$qJ_]hWH\B,iFdpj/XVf1_kOfrCHoUaf=Ll:,Dqe264gBg\jS2=eoC'H^#"
%<][9qf2-RO3[pi_<JCFg,dd56rnOWd)FD%_l86>2&tOPn.-5Gqk[unPptPI15R:q,+bn!CKJ0-?V,>NdUgR8k3Hn*^8WToBXM/T"
%PJ]9D5c0u.-Kg[Y*LGAp6iC?`9c>ZmdVeK/4FK:clbG?"Oq5]Ep>J+sBGID."ODB49`W-5f(9;_[1pobD:0r01qa/L2J0@Z.)U?J
%.e!;*)Uih&;(6h7#+pY7bVWQ^Em4Rbb^;HmO2EkNF.CH*2H-/Q$B3[.3ob94O/K2YV4-U,Wcl-pbt;4`HLo1jed7^VIFr>&38YhP
%Rda3c;t$3X_`<hM_e-NM*]Mj0H>U)#Z-q;I2Of5@";ail>??kMKq`@hor<J4R]2l!-ZDn)Hf=4f([D?3jRTKZ79;W)EV\pQ;i%J%
%qsE(`r9N!Qh5mgAl#p!6)Go+8^NEMeQ`opi^Bms(,1s<\\tHi*)r10lh\_J')m7Xb//Rd/E.VGji2(kO<<dpl^0oE\W=9*QL!-8Y
%/`O5"i&#-tS=Ghd:)CS56#g<+L3rp:YIri.RiE)JH9VO7T>@d#O0\9^fi:m?RekgRLb9bf%$R,9;_Y*^Tk);@fn=A6j!l>I,k<))
%U[Q)DG$[nFo*mA3DGijO$tn^?Kp<+olh[Ilk,/W/7?hJX]tu;gPnb5fg5scb>0.rKZ?HHWT$)WiTW^*=KLQ7bcZgr#ddKR.6ES><
%@YZ?gFla'QJJ>ppfQ9O2fHPNT!EZ([IYjA\falEI:N;JBq6o8J"H80[Y[gbaWp*h-m?:!ki><u+#=e\LZsAN0VoamPm$>?BSIG8-
%::o;e6141*(OM(G)RlF6dc9!)/o"M#%;e7*F4&A>URk?NBAaZ`]r%PifL(;Ve<1$8ZD$n*jtIP&K96?T0A&,/PRX!=?5WLiV(,a5
%RA+1,LB<_%b3>P;b<caDB>dm(YNp_g7Yb8$44hQMo7<7s1%LD6J>XD[0I1nLBf%6P"G`]kqKeArc62^JSf>8?`8f,PdE;MsN#3\L
%aO.8\S49n=Ks)TYP<_O7!]F&8A"FP#j<0?K<&]on0U7)[\>VQRj%482B/Qhs'i,)>eh:&'c(cj4%b<i>BW5Uk;:fupY%fuZ;cN0'
%NaUq;,@(PbMhH*gO;#An,,M.@-9.&G1DF/$:]l9KU+KI"+Xl':cd8"FQu>(E0-/j:+pB1;%=h#@4"6SG#]g"?7,-Chbc=^%])]f"
%a,rZVjHsQ&5([3F&0bb7Ta3e?+:#j*#_$3bL\DCN(hY>ig3:G`l=!5tWgE/C-uF/BM!qMNT8W\2E5^c5]76[S!>JYQ(U%1)2Z6Tg
%7V\Ca*64=\@dihLVqn3rU:_u5rH`ljU^B$C<0RkaRbYiX9\\W$KDO9V>QVS0%FF0tLj;]rHfUPB.NPIMEmd4^!1]N6(L9OD1k5l/
%Ap&oLbim"K):YDJG_k5$Yfs1pTO:aZU<1g:ckPM](%U&I'kWd4hJBNlj"frrCbEOpVM6A,_+'K.51t+*6.9M0"*OO#]I,X,]:RT3
%H$XR[d*tZh%Eo4@n2<^XFd@#[m"T8d&<4<HZ9rTkeU!Z-$j[%gJp_Hr$dU`U=on0$b<L5"h2Jqi4+tCf'F,W7KY#*>iit18="N;H
%McitY^G:0gZJMrjO_:J@aR":`%A9566HQd%ONQ4_GU%FVWbIBq!Z_N`^m)[W_'L.D[+hP[k4);N2#0V)rLLGF@#itG,b0B>,#s(H
%($LA,ZRpRE8]Ro=*75AtqP\alOGLLih<d!UH3fA/$(.C)"X'M1Xg;kNh])be)IPg\;!jiEMUZZg''Zp"q*DJU)+WI@;!QKo:o[aa
%@>sQ7dgp,4=GAj=eR6KNI(!]D9I6--QD:a/<XXXe9,9\C`1FPmdCZs+p,2Z>mU@M%R9O!)fYams_Ykc%N/e*`-E&&N6>UBb_ncqa
%luF%i0LbANA_8Sc0T*-a)@4u3/DAiTq`VW4Wg?H\/,"Lj2t=\eG`VNRY/6XU`LGGP[&QC720\A<Hh677IRsV$4/YTC5Zi7)PrSP-
%34.04L"Yl[/--='o$TieXJjdp:K?)>OFe#TU4E?DaT)R/][B3CqJ*LF6AlK2"N7/b5aX5bX[Pg8T*=Lb["\UkT0!qGg+N!^ei*"Z
%a!i>l<p'k:'^\<b7@20mfPJ0,j05;/g"gt%oE:-sJ#np64*)<LRq8@cC1L1,S^WV!G;rth+PU8iYee`fNJlY+\hBlH`r4'RXn0DF
%gLlW$q#LKO[,L7nb\8K[RO\;Ad.rY2>38)!<)=Y+9<_t__ACH4YV']ABk@j=9M@Bu@?]S[J4`^1TDYPXCk-dcgG]!@8i:$5(PO1D
%L!L3Q16,^Rj8CL`NU0,s"`$GRMI5qrXsHp9!/hNoVl>9Ch#LEN4V)H1oi;93?gq5W1HI`b]tD4s[.-mKmsKc]N05%[<M$@W6\;NU
%MV1%X"99s4[L_'As#bjF.5+?7V"P5\gT%>RcI$Bh9M*K+gcHR.QA01eWnf9\_r6\JdX/nCr?OG,8+:W!N)-:.084Kc"s77,PV,Dn
%<9X2,Tlp3o9L_MER>Z1]Dn,ZNbXA5"lM91a2GsSJ3V1iI+^PcOjkQ%hL5dO!-JS=5*Z<`WNJtQ'V^&P'Zhu=Dk&$nrh1"Dt]9?B8
%4E\>ER@"u=W*\#3;;dt?Z'RL9[YmFR?-*,/&RMl,T##(2&eINDk7'Y$Gpa+%q0Q^d(&$)5MG%-Ia$h:q3r!]ib_8;X*ZujZ-*!*8
%q!3\25]kbTO59.!N$LDFT`l,Yaa#6%rr2",pu4R^?Bq]AK)OXCq+NY"XFMQD\;IlHj42$.OF%?!12U3.J-=,d>IVaM-O;UF5uZBU
%Tk>%%G",\D#gQmf`T_kbW(.#q-GOs&H'd")l2YpFPPrtgLt'hu-0QTto0hVe/Q\^-g&#K,EADqodp<&T_3*p)j0SLZXJ:&.jIi;e
%Li@hmnlV<nJHrXcOU$UQ2*oXsX1T"jHb-*_"9ArjiH40(&o/[s/qN$r'7oBH$k]c\S'!Jl1*o5gRVNN#.`,[,G#"#1f8KpN8EDeG
%bSjM034,[KPjlo7nYLIE::#.A1NB>*K&"GR5(Cg1V4H1_1XfD]]R?t>`[?,f_lRp41n65Y_t_fY15]L8RLpHoOs76,"9u!kE8i04
%e'RhLgX%iAT@hC[mL?+g+=:&!N3km+(SS[T=NsM6/e['U6DX$-g*UI*j$M?)q6#-#">W_tAeB5HRGMa!/g#M#*4p>PFW`;,Yl#%j
%1\RZ<R%f2srbG\)!]6S`-59kAj!SR[YWr=B0D+QQ3hT"MVKAr\c$tiKJ.0PIDH[N_p=(mb9QdULc')-hUBM,e<=PU#C66LI';=\R
%VtVGCW3j!HpH_8tKos,2)`9^s,q9e<6=5bT*8(D(:!5WJKKNTO?Rh3rJRlNE1&ph)AE;XX_0%c@A'7Ng$?HU<EU'cGN#Fg?]%QEb
%m'K&GVP7m9$$k`WfNa01Kf7llD>q)"D)ond^J.5>k([i>$s"4*0R,%n44"SSQ;O^sf2Ai4#cRTSTX,sr1T/hZf875)2#@Y6rn.rk
%AYg.4T>+F,kBlj?Y?NsZQGQ@Z;,0F<?r(lpF%3n%fW$\L[;jR3T4Eu5\cn:&"t>\oP5sj)L4d=ZjEWGZ9dll\WsD7516B3X?s59a
%Cr@;[jTW+A&TXn<Er)N0ERC`4n$qd23J_Qk5>O'iY.ZiS<&J7Z1q,e/r?XaX9+fZhpR0tQiX#,]#ncFi#?:oG,u6h]b^GAmC>%)d
%+p$W?d@YJFYH=@iW(%?2c452IAG_gZ=-arnU^UJs2l0eU'YoPBrhM0B'A-m1SYDn@oO3L(WWi=?a+#g$-.6PJNkR4?Y?RQCA\<pX
%iIL;ENg>17Bd6[^haIoq2QiNjZdU=B0mcFui$b%B7EGo?gN;FeF\#nE7rS'"dA;$dF#tj#e:rtP)hD\dQ$eFKVAYRIeq),,fT1pe
%%_:-ZR[ff,l.27nas3Ugl(GRUUnFP&PX*Q$s7Ic*<IKAR-IS&/*)/GG:1>\?4(&+g%CYVP10f-,lLU:IU>oiEco2S^>-O!,P0bM0
%BIX6fGEFAaL`2P61-[mS%$]2)Ee+nqVjF%KFn;'Yqo;H)OhUF#8=,@d8.j?-:M8.%1A&Zhn_A*lJ50+WlST0EGf:<On(>hu`i/!)
%d8qrN";9rd,4HSpF(D\/)Z96uUV?/(V!ffnl#bBd8g0&`+Z:#YL#T'X3-u<S/97+@RGmRHbV!k[cqJYT(lBeOVbr?#8Pc!sp'(ZU
%lDCG,p[XMr<Zq3m=1%\C2bSG1"uDGqFd(BBnT180;ir^b85b.*i.me+93uJkL@g=7d2F.MJFq[gV1P[,[H)L.F'?%L$/Dp*F^T8-
%_CV*ah!AKiLC)rF_^1>MjJ/%.E$u#MPC'$Wn;KD^OK)O56]DVmpN0F\[&;u-.>lJ5!YL:M-?ciaFCJI(SIS3BBU.&Blh!t^G,Nf?
%ejnUG;DP35<iTVeCjpLMgd8hZJu=,ce>?ae8a-T4e^geaLm57ui>R([mT<GA3dYM#EH'4iDgX`aY=d%2WY[_ak>]<*jEFLfTVGi:
%9UI=2j:)ffo6h;N!ap=X093!ebYb+"^R.mdVOi84Lf:sj84$,)Q%YcoLe!7;gr*2Y0K%d\<?n-MN8B?k&ZU45!D)JH(_[X7R*.CI
%XW?[>JS/8Q,ubJr*0u#b9lpXD`BAsf9"YX35gVqs9<nn0Vs[T.Bi$8!A==CtZ=f1$gmoW'QrDuH2\CY/;Zm`X_"9c3doX90L9:aB
%n$RWnSImWm-^%29_JM,)n4%<oWE7%ok`r#E6.?[]9F?=%i6ERqV64V!fU.F3@!8MN29MTs?QC$M(Tq2M7TTF$W=nJa@ts'aqjlhH
%7"LWGGGfY'p^8H?M%T)J"7Fl.d6NYhJ^b=T_%1fn(31I/0T?Ris+q^a_FRi3L>m@)WQT#c5>FLUG@udMB:6'Kq\'N<gGp4Ka9?JM
%:-C5Y1_`>n,lqQo3I59@[)HVIM1OSjU6Ed"*LZCP&4P6I,L7b/Q)hLRN<Mf$M%`.T^d[kIl%]l(!iS-OAmA1s<ATU<iF5,!$oNu9
%Qq20)r'is;aaKd&,P@Gt$p'is;1db"'_COgVW\$2(m57iVGR>"o-CB%0T_/,D#Z%uLCQnki#+kuURpUd64":=oCnB]Ri*4N<O$n$
%LS#*nl^-[>NN$<I"Nom#kfP&hefV0E:fXaFgCuP[!hh^b@H+Le'C''!njr.AbqSZU)JA!O7"o4@/]mU&6!Z,r-3RNuE!??^9iA$R
%3N^CQ/du\nY=B.`N(Q#hlLYa[O'#rDM9ATYMB^ZSIfS-^k_2,dB>,Q`EL2!FKV%=pC/m"EO8pQ$S*%H^/"C'/grQ]PdV1)orJQ=&
%g=u7H606_af-"4Xo0PY^pVkcghFa_[;V.f(1:F:9ko-"'54)`H&0g&9j%b,08q8%>qQ<E&S8'ehIbq>q9/X^0=Y#Y9Ln0-;<mun+
%N_qPpHML!FA=W&Y4gsn:h1XK20FcV=Y=-r*A\rSRiY^1?pR_IaJ0<MQ))n2JThQ'*b&TR(AY'@pT6'"H],<pEP&VsZ1B0rXJr18i
%Jo\CQ#q(FlpGh-_*EOj`OH)-a=<KStaX!B1Rd9INpKLK;@R]L\F2'#1\%uH2k`?r,-`Iirn0;da%T0[H[og0-kmX'XJEu!dqLUBC
%LuONUp=bJ9]"ZMD]tW0U&1!ulXeQ=WB2p#73.-[<A`TAGa+PR7Be5UUi0A=gEs<QX9%gn9bSJ.iA.n09MY(tbDG'D05-\[G7dhP-
%[`sS=?3jW!;r&Ldo?#<hA[lnX<d^lSX\-!IMXq*-d?53p8[rgn?i_@5_X\KloN&e-6QoJ>AWneVP0ZFrpARaa4^RR5Li_AKHNju3
%5q+"BZ"\mm>b2T!M(RH4Fbb2tM.Lu==SL7$rDEsr?NBBR^mp_VL@/8hmZ>\h$ORMdFZ&<?T1Pag)]Hp`i0JtXi^sL(j#i'$)9;&p
%o13,"R4`0A%[gMp@B+jrl-ec]&am\t8*+q7s0=N2@?[^BmZIZEa*m%@cK86dj=k+;OAQlA&F>p4]nA/Obc].\7.B[VUs!>3>+L.)
%FG,/fSUKu%Z6_;[6ZRD+:nkEc*4<2!A.!W4<L?ZPmqN1aTN'-blPM$nVbMI@=**'_oX"AhoAu!Y@>4XW@X@`SDduD3%`4^%L24F]
%ZE-OXJ.k545S,iH,jBjtbGT2'`8WYV'Q+@9m\XEH<Q\9k6R?KnoG(,Y*Q&8**nC\U!G20?cNIFdDTOnY-FJ+eJ-q(-k`<"pk'i9:
%UJlb.R!##KIkiFo-&k*(H>t&+)3@@J1'4L)3"*i_%m(bI]Kd"RA(ahW!cHQB]nKQ96o.24XY+=ij.U?g-UD6-ASUHhoqg3C:@#S<
%G6tsW4-645bI8]a09tmSf&-tZ-.o9U74$CY,9foQ9ECW0VZbcUqXDpK^+ObsDAp+r[,i:lhM#Rd-WF8![5kqB5Yk7\_BFLh,cDJa
%ZT4ZfTJ_6Ll`V8%XKpeY^`m\^IG,BqOO3IoP^Y":=bWZ([PlNQ[1rQ7BJSN%"RSt!,F[.2BYc(eUq2u!ARd=1crbdBl*^QHW1ui8
%o$U\OLGHDHiHb$O.:\Y0:S26M"83SmBZ`7UAj$fcQ5Uk[FBHs#%$S9#3V7[So,qF[;-f)1Q2"Yo#C%OVr=ohhBG:>i00JHj!HF@Z
%C%1.*4Su5"+Xr`Y2$;hH+Sg7`=<B[W%cnD#KI!d"@$/<i@\B!Y1WrpNXmWL$AFBPV\\r=[>4&[g^"WX+NDXuX[DZDgj&;e]1`1Qe
%*gtu5L:Di\/#[jJ!\@tK3D@)S@jJ'\HLZJjlqto2JXB8o)3l[!e[re@jmeL9]$7>c1oXX"':b57Of$^J=_lTe;%DCj8a$[5L)&*[
%;LgqW+c7Q%cXkh2'6;7$dYGg1-4(hE'e9g]VD`YRI9AO2hF/c\N2E]%pkg;J%%NLQ&4bU8Vj<B-%q,KNP^A)1+r,1;PtZ3'k%cDK
%^bbM.UgBC<^kpm2Cj5j&-9<764Vni)g2p7\9]kWHRBQaPE3!9u8DQ]]q]+U04oDdOb)g6?ZcQXc#VHO(4:.4[%kEYDV'!d%+-)?l
%MteaZ.>a[FQ;N,J?5d)-RY\4[QpAR2,2PU^QOLAT'\\KU/I(EHD/aZSJP5oJHB:C]lA/CBW`_K/O=rI@kHL!tfq"<#Y]Jtq&>'I&
%lV?CH!3FdFNF_E<Qu<@gL*1f+fjY4b/VWEs)_2UAp!&PF1jesKEs[)=()')W(+Ujb[nIKs+K0\H)R@Vu>hZYZM#c,MALj5a>'hH:
%cgjL%d5'KYq#9AVG^j/l?Sbg+.^nVA5#fTT>9[>>`5p\<k%1$U'RH^S"S'/1S'&%1%Xo:Z5apD$8I8e-(oYQM]bf`!OWR<oA'nqM
%nS$GjlL(Vs[T]e.<FNZJ/2u+pfCc%e,<o*7[=Y\'J!/Np7+Ri[.t(RSV,<e-BfU&0J$H6a1:&NHf9A)#72,?L_>q3)8K_`7-e=l`
%p*IWo4iM_Je6;>0H'tUY$cZskp?RoFhJI9o]a$U]DL3A^]CA'"a##L;acq37\NasY3>%#Dh;A7Es.t.DWVq<ocf1*%=A<[[W/GtH
%[7REa?EMCsPLQPejeLP#?D]Nse;kO%DE>D+YtVPbjd+\;TO:n@abDM1<l2++'gQ!U<c)^i[*Dl)C`PS&%0Gd9W``<'[*,Q7ZLQ<o
%VQGoJ:fC8T/3po^(!@\E:Gj3Z>E9PY;0jXiZ5T3S8::IB&_1>[ZE;)k/4J9E529#]]-NtYEfDV7aEPe'.i0u25'G6Vq<)Dh0E,,2
%c/3pCM,3[iOX>Sk-%Z>*e$dDCG[^_Jr%UB[=J`NF(%`c^/Si_5EmH('4YR#k\>5OQ\WQG#b*$R3&k]'`)]f'8$Z9i:B%;`u)M0&3
%"bt_/cngZe[FO;8?0:-g-@bD^W&A7]"G&Bb&\1(1$-J=A;S_U\V6H>t?B^;$g*m>\(Imgu0]i<D97g,EX;"iH/R%%`X[%fE"S[.<
%olQkQU%5c-pbF4Repu]&ih08Ii6BGPD.qI,r')iJ+.Zu!f&0rfbRoLr2%!N(K?bf&P86dL6L%`'8gulRRjC"fX*2d&b$#CO;;Tn_
%hNDiR_BGaC]Xu&T4kf>Ejb$Eu:Ut'rnJ?aK<9$?!7nM6Fc5c@tNPJ'*C/SRW2!s9K\Tl'W#?m$J%VfNOpOpW4kPPVR$%47rl`tZN
%0U?Rh'Jdr0S8/\VSgFF3BlTU7R);l/2eclGGaA"`F;@'o*o?d3Pa"2Q/P/bD,n,V33rKrJE/0.JD41M&r\7E+V"EW%7sP'^lq[p"
%K=E1^<;"+nd=OKW\A#c!:g#;$6]%;ufH_8%nA&RL/jM@CW_iAZ+]g(6SGH'4$D$-1OB`@UCFc%iD\D64^j#KEH+'@e&&dAhR,e5G
%m\cE?`P8oiN8L\+X8d[!M#.:Pi4Aju/qZT6[e6MG9`A/!T<"WOl)DS)NCeP?&//AW[ru@</c,.PGLQES"J.5/(gBP;hnSQagjaF8
%Y".7(F+=+#YN^>k6@*klok,d6_B9QWR+2H-:%Vt^2\pn4l1XSSa8N6%&u./]DL^JQffn'ugHs,k-=/3;gJkU\na-+HD0YidbB/66
%pmQtNJ,YTq5+]#D^DcQBp3/NBQ-+qF>"M_j>f4!&,S^=`D1X?G#Jjtt1>8'L*@"\BXtR,bSK8$O#+o*3</%Gj*gZ,M0$F4f[cubM
%ibS7?J+@V5YI/[9X6s&-dI2+Df399S0.&ZrKT<_"T"KLhVmL,+oQ^C"\2t);fDSCti]hQ0A)$QTOPA["%1g3tR3!Hn`&m^KJ,Yn/
%Y-ou*L<'&_(-aefja^9)3]?WOHsu/E]j#ElM]FlE-&ls2OgDlH,M2Kr"MG'dYP""epVf;IM?3T-hoB<3S>,m@aXNi=?9[#[Va$qs
%ojAOSDMq'H_-E"^nPO]$Xr"p\TO,B!8a)7C61C.4=D&lR6Hg4h:jU"S<S>ULRan3!&1)M:;\q%sV7n8h`[(eP$4eFa#MR$/i/hNM
%%_2<[Zq8HLT!QTt/1FOVGc!NFH:3T&S>RnV&N$A*E$*lrK+mX:*"'AAOn*VZkpEf(2`+=+r`e4LJ:u->Y@/>EUK$D$Q>-($.:GTf
%i!Z\jCj<Yl1obZN[W&e^fojns[QR,Ce(qZLoZ^;jN6"#nFcF/U?5Pbmp$r]XK.IW<"8&^1e84!=`U%E<-=*s&h+S""Yk)&WA#lk+
%+Llc@pEM)o]/uPn)OV.l)kfiEhZV8LbKi\.hSuafHW/iDfH+=aP'1o&hkNqp.eb:FfM)amBTf]WH_TN/!.$?o06;/.S8^k^a8n0O
%MW$+)>/5BXQ6nm0!CN^>X\E5PN.N[qAkcn?aTE,?2D=JfTo-fX2MHk7/dRrVah>&Me8o6*/Tc6gd[oUeKOb_:U,U(0J>9Df3b63r
%X[IM:&TtPVReVl`YA%D0Q2o0k4gNnnI,Lo%l3W:op)9p:8)&.+a%j:$\HK][D6*?NK3^'0%.1L2"+.8bBeZ\^NhSc,?ujs&mOC$Q
%\6HKW\*gsa_sb=G11a<=ZPu5dg&"oNh:W5ubRXL)MaWLQUC$0uE<**ga);Rq!4bA-U"0HhBNffkghm/oqeQisNU5Fr6ma(*#a62I
%O(<*T<Bpd+h77'uN&M^@\l5C#o4S*)B)IYfY]UD&K<.!QiV,^.8j#BUbEH<:4tYJ3/oP&:4FHNZ(qE>$T$cA=%n<_*HO*+7mlh%I
%DBcWdqrm"&>-R/:]mo(up@-Otnc"?rpYB3;faC$UMYF#p$qo)`C:]YADiYeJ<"AX.i,3l]ODVYN-.hnI"-`&M*WqT>Y2/+]>ZhGP
%\f'u9D3sM/=BrlCj'?$dn/BV[peMg&>f1Lk;:L(%9CqlLOgS*tiedoJj`(8QgH@a2^?LMNmVdT9:R#lXKQM^DD!HWL='_]D+V3?+
%\ZW-iO8d8e]tEnWK+pS#C:SZ[o7bn=S*rKY\D*S`5oB&Vb4U2W+Q[pH`usJC^d[)RqHT.\Z.t-3[p>l/_m#-pa1K(RiAI4An/#0_
%G@,KR.EMpL/?,P<BbIIO!tB7r8NtcJ7fI;<EfqWSj*l<q8IDMT#ftJj,Qb#;qV@?uJpLVmnXbsZTG3!eVccT;m2He,.k<('WUB51
%X<aqE3*8t^P.JeT5Td:plKXW>I*YAjQH-HEe!5t.k'7_'5-@<62:`<6aHP]DnX-d"mjo.jpPe0)YH5nDO"&1LBmV&h.jlbI<,V__
%;Gni$Eh9'Q6*2AcEoeVCTRV/5-;Wq(8,abi.IguI9HuDDC?R,We,,#J[^&)$UAH!)>Q'[&ZaCaMEIo:L4K2+]k%2^J]#eOb/(r^]
%-//Tp(Cr.*Z.(OMk'"<+n7XZbQM7W(\&l%Ck,A's-cPQu:nRT4NlmkTfT^dp;MbYM.7]SKrr/2RF&gk;q!i3A6MUm=hM4mmLd\(Y
%i,3@rrZG6HDeLaq]-l%dU%k1QQN.uo*c%,V1<KfOT4&Z^&pY/T4K9Kji>06F!XB5lnSHXf@bn[DE1i#O>(B,DX^?Y97"jW=>aDt/
%(o0\S6FpBhRqD:a4WX8a\E8-(*?Jr%Sj(ZG*ur1RMRp19-GfQWP>FM0:Rm.VS:o4AP!n4=ciZ7c51@eR<!PWq\R`\2jGB\(%bn+k
%H:7W#L(LE[\L(cSIrMuqRBqoe0<'WfAl5h),4<*[](lDj6RN3ui&!e2HbE16][%TREP;,\a93d`<3Yg5<7_SiJdXAS/$LgLlTUsg
%\;ZVN(@J\hAZJ,5IN^*6o4-jZd"u>)L+Y9mZt?J_9n>ue>QiARbL`8*hhf[rj*8RTV1t6GETk2QI5c51QqE*Kg9-<L^61E`m65V#
%=$=JZe:"h7\12=:Tdpf!)?"gOeLd9+@"o*NIFY@T:;t12@5`BLk3`;cTTkldfha0(NIIKeB[3Aja?U)gnKC24'ImZML/]2%<W.+=
%bTMCiXdm\e0i27rI'"dZl7`<qGoWe%_"1?<:WE3+39dH\K3m0421"].2Ns`GbdIPeG\T"H-:_?h&!1^u6V1KnrnbRkWl!EAXPW'Z
%og(rHY"t@HdRY>4q69.;8f&VBYB789U%F>U2`s2$`bsV'+6/?$e]Dg4k^mE!%6b*rN6Et%AbG)q3\?/m'2HtrEG\o=G9@B32C(t"
%N=Z3W.nOc03`&V-q<'+gG\^XCW@9+r;RcDriMj)PVRs>eY8qrr=j#I2)/+l@9FQH3#<7k6T2]"ABu'U)51gn`Y]jUC:,"n]Tm6)m
%JD>X#S(P^SLV/--r\E(a5'uU>T1Lp=jVJBH%tFE,s7hZDJ,&cQrV^+%eUMuHrqHH[^]3`*rp%Pus7l$^q]ETQn%XcCeG@\prO^s9
%qPjMdpV6SYJ,J[urUGC7_gd+7`D?KR5Q(K?kF-Ej07EK5hu2Mp^\aq<nZ`RXXh%Yarj.(jT+qZm0%cLSq4E-1qu?L'IuFo8+9(gq
%s5B$2I,[BjiV.j"rGUTn?iU&Y^]14hro&oFnX]^Kn,NBJs7"^nhV#Q^(]Rk@R5_n\pq-Rs&&8'])P#^adr.JKp\<'q?gs-ur8^ZQ
%dr59Up[<V+:]L<15Q'<gm]ZN=QDb6)e=OA8(3&RS!CF'mDNp6AYUZ`A3[1+>e?:[hrr>A4?f=B<%)RUs#-pNc-p'$P%/j:Ve9%LA
%#RO.bI&oW.#9<EQ$aX(i/&JV9TH3%g"0(T\U>hg8H9T?&ltM"Y=.QCK@V(GJ<1_X0?2[*T&YG4QQadEWTC*lf6@f-T/+7lj>$P)Y
%0WK!4$$tjq+pdrtA=j:tTCCE:K5[R7K_k@`p3.Br]NhmVkX!VCQ.hCn,81lE\=`7=I#@V<:N+=Hc9ZKU)G`:6kZ:If1Lc5H3?4&)
%Q.[G@B0(-U6GUHm":JFc"\=#/?1F(/\A@UO#RPBOP8;sofhtL/[fKb!@A%\8>QU7SAeuL$*_*\&fLpllP`PPcX;"gA6Cj7tm?\gQ
%_e=HZW'<Ma:K3t$Y?,!'m@i8AeWUN+E*%nY_(:99WOS-eXNS7mbmBMD;f@4d2BHZYUc<ufo?j(%j7<2KRCu,gHiGDbJKi2*n5.m%
%d(KQRfk';M@J`bp^&V.=GYb^$8>&Pl`FNMr%*o\'B;dnS6N[^T?S?XD;Lf92s*XTjI*IDqHh;OCBf\VYB3nu_D8'"MTj9i_)WlE^
%H:Z*4NJd\U:u/l]-.DB0m(?"R,6sLL_Zu#@JW*pmG;n?-pVFA3n,@1U><IDmSIIM(heQt7<WV9%H0R%H(tG5boKmX(L])X`;NE3C
%ZV;L4l3ub6-e6s%K_OLChJJ;UF;a%u3li=J?RU4ai!^,P'.3_THH,9'&$L#%iNmb-\*YasJV![mQb>iO:"G&K9lJG:=hj/PE\+SI
%.k[SHbYt?`D9ZQrPMP/[Z;ZcN+FncnS'WF-MJ=b.e.+Z)2,YA<-JgU<oi*0OGMa"ejFDQCs6^u!i?pg:h;._-'d&A^e2e,t-3c7P
%-Qde\S,BTo%IjA5ql="0pW;1h\p]tFmHha/AA.7doN/d)Sc9U[[dTpj4iOm[p*\V^DS*'OOe[R+I\VHBI:=tK@s>pt*u+4]3QLIO
%m\U5MjK`(CeG[Rng[+p?O4W7enZEDZ?fLpn:Z(j&oVFJV-mlss55RPt]g%QN:UPlI!@md$M/D-I,"OiB-Wf/Q2`tDlT^SN0NI>S/
%>i0_6gpc3o/M="!='aG1rAPhe]DKKO++/=6ppNuUoAB1WpFR?RJ)5?5HeWrRp$&!1V*Vnd;hQks5lZf^!:"!%XBV!>(6qODAO-mC
%&9(rpq_KWVQgKU7WN`f;Fd5H91;<jtIC.Rq"2I.d%/bS]k-Ib%%-V-AVkC2Yo8X<so[Y6..A+f<SFK':eM"Sr:XM?%5Q9IJ3--=X
%W<2`FLl(7kphL.p<>c:1Z?n>5K`g%/O%rHPg<I;;1/3UGWmarOV?]aJ4-PuDXD6TmI5h<^'&>>->CKOn-^oVnqc?El7MflmXDXO^
%<a,;dOm#%g,89.6;j*bFTt62'(n*:*D[lb[5e57+Dl(84"7o[(\So5)^0?FM>CTY*;m_jL]iXI,(r$;IpoUKH7CT,gP#WT967(`e
%7#iUFeu^eBbo(\%YliBd0d-%h*s"Xl.?2k.L7%%j^X2=X`Plg?^slR<@I&j*\f,2;.a6%mG@>^62r?PkPWHLa1odI`MU7O2]pXRV
%V!XHaJ,[T_9tL:[8R!LLc>Y;;%7qh-Xi^n:paU.cY_a]-;79'uiF@7s_Q?@pd:Y0>%R,7tdg2fL@$9/6$C-FZ2)fkd\+AfQi;ki*
%IL]3'odE/KCfD$0fpZ/F>l_$Z?-oI$p_$M(Jr38]2j(r[SALSE*"'cfi(V:t;b6rQ`KBuJZ/rc@_>f1#G[T^aJL)_-2Nh45e2f9k
%X@K3up]s$j7?/),PmIGp^.6AW7ZC`<:'jV/^te8j.S:,u,(Ch8X_M%$]YP:_kAB.aN9AI9EAt!1J2['d)ElaOC52i;&'q0s$NbCc
%E@[<8,Z;MBn,(8^mCTb\^u8:h?g]6sFW';NoLk+C-5@tH931P1*2f+i8Z.A\2Bq=+PE&7@:nI5\k^t]k8n=im*>]0nff;H-_!!u9
%7.k^-&,Uu^,h\D.:L&Xg)gZV"EBQI7Mc\adYF/WD@\HDQD)JrtLFDdkXBPp/Z*M]NXVK_m+.n!]Nfc@b=b^2fA-$TF#goUbZ$>(V
%WpUj(W"SX0Ok0=6YO#6/h:VW7*,QdAV'eV6Us;1I*njW^;H*2XcIqYN:F9t$_Z,FH,+,)/'<%E(c=</j_>jfd**7+fio,?]>q^0#
%,O/pESRg,T:Xc;4Jm"?d2ef[5FY_\EFIjcbOQY*kq7(p?rp\YYa`hM[.Y:i&QtQO7XW'1p^%rLF'joYIU<DPl=g02f(pfRKk-&XU
%G/biQ9ui6$G,@2ki-0[RSj!2EA^iS.H[16/:DCeZ5MjH#%Vb=HO<WY[;'H@]T-d:_i5RDV*n8*W)gKT>EIdo*]_RrFO;ge`,'c6Q
%S<gbk3",.BW:fMSmKQ8m#Wdn4?QQrUiUjl3r`AG.KGG3bi]?lHcdX5h!m>\d"XeXbZU0AQP1:ule6R`+`)RsW.2S5I8k=CUV2N:g
%?oQ[H"`F"0"5DS'RAbkU#ZZGc'qoKF;+H'S4!k-?Hns*r3`LDNi[&NPgb3mES^PCm7q`2#bc)^Z.+@O_KFc86:pY$tYFDoF&D:Tm
%4ET:hk#6Nh2R"Y>8Yok_q1*oH2=`CgBWP$dQ*l(@dO+c5-GMfK04:]*]f.\?VC@h"U</VkpEB$/\JTPWfXBk?a@)GqlbLq.<HWK]
%Z9(C1E.sZ_W]nt*5M)7)^q%bKDc-[e]rf^M]?+%&,J[32<b(`3+(dUHM(e@o/YLf.AdJ8\kSF6\%)CB!!I45,BYA]e$/SoW_Co"*
%MTFJ63ZsjI&)dW$iE_o!AI?VVf)O4A_o#Hqb>]Yff]\lc!&EHRO;/VPYt$V+3qfGu@5m#1DR"&#@amBCe##F[$hcpT5qlA"jQQ57
%A+WJ@MkQ%X>1Kugm-<IgdDZe`WL1i3>%<G"e?#%K"jH)T+;`g;*83-*oaS[*B0sj-#WAm5Qp0&5j7]<$r_9HEa9[7K@c_:D9<\4[
%R#r*0dO6GAP-YKt=428'f[^/).N;i^5/rW-4KK;7?s7,XH4BD-YIc7<k49@Cia_=5K9L6TlL!7rn;J'M4:N't\7OL6!C?8'i_G`9
%D>NmQ8FeZVY@p89OpHC5hZ#X#b8&<0`M-^::TYg,cpIVML0536l#ef+Ead/e1'I>CL0<-HbJg;BI@Buho5sBc[D]O(k]_-"T5B5l
%YmCqClU8pe:8"e=)HMW$!6!@AY];4WV;Q.Y$Pj)ES4WRP[.t#i7t`p/hH4mB+#FidCCqf!G.)cSTA'G8(>CaP=ApT#R&bY&-eEiG
%S&oRB-al?g.M35$fkn:ZA3'?t:=02=;CdhXm,k2,Qa0n1dI^NgUP4T)F2Ws/po&M&l'9UK&Sj%(M0uuhU8)`/M=I=3Ru-QRX6XB,
%.3\eg4/]'Q[b3C+_+<"ue/fjdY"55u4ldF*[@cm]mohgBmOqpjKoNfrqegbjmU'0NadT6JkPE%jgM1if$.<C""lt<s[,*86MH-P&
%3*]/<N09F:f,5P[E(;]S;NfThs14b9<EEC+l4VfKfB(c.6s:p?I.b9Z8`A3[G_D6/CU21(1:K#hgu;8WQu<$j8o=rhRha_3=gnn^
%.9.e)i+"`?L*Q)I;0VF:&FIU<>f,6s>#1eP]@`S1e?2]D<_1W%=?lu&X1i)r)Pq.R:ALO4Xem-RH+3Vb0`ma-8D6X9(/VW7aZkk$
%-Qo@NSV:jaTB"eL.PmMSR+K[2@6`O,.b1QPFHK2FenEPJ)rB6gW^ISd5u1taG,#lQ1.OS7QPpM]jXOmb]#q%Z<4DF^OMs+nG+D/u
%Oe_LBg)^]NTI<J?H+Qr`K"ggBOG&M5p,>.*]32Bf>1M&bMpi"D'b117SDt.sUIAL69r/e%]TGYa;$b:#ei@4'9NKl(Qf/$,9B`g@
%Y5CC,1.R<D$?(1:eR?FdqdAXK`FqD!O6Eb6lGq+MTB-YUhC^F=$s$C7<*H[dT$$]I(-qJ&.jU;Qld?u>eE]j1B^Nh:8DY`c5g)V1
%!&hFWrT?%iGfcDBI_8!kh31'</q2JYZ]i`RKRs$H:Trg7T?M@[];Z/l>![9\6bkG"oI)KfT5Whp%a"()IW^S>8?u5Cs4\A9e%nYL
%'ppVG,V5:==n=uFHQR&V>TT)p5L&:ULH).\Vcc75e-PF^GXeVV%9`E685u^k<4-P:UsH1]8S,%u*kjXcYAN)_ii#f/#RVV.%&?R.
%2N:i#3')s6E^EYo2Q)27OtKIQag,&J<1:3BP0gM&<*6=A$_FYY4Ao&M,<tcPI[u?(k2Ad9nV_b5-as-RPthWd1r'!>@:$AdKgTbr
%m2<[%GTHR-Em+Gq%_@TopXes]psufI'F9@PDNGj=&n.FX]rP&Ek(YN(J0)^*=aP]#in23:3Z*UMS8@d-WNb"J5#rLl$!I^\r@]a-
%7/E-#f>;[r]94ZLOuk^+:`jh`Fp\Ft-M1j:<Ll94C!#e54OFFo:YBLT%WG3hLI_p;A1JW]T;15-7oUFM9?-L-GN[bfS+Et>9N8K]
%iu97e<lc`S2)9d4s%m"cUr'Lo*XK(2HI!h&MIst6e8+,f]i1mA00-XM.TgKnP;8@6BP^lZM4jE5BRNI07B<1s::MMu^#=68o4lNi
%Od<%=]8fr*kt,AZ%[6=.PG_I6$oShiC>i$q+"M;2*Es:>loNJ)oleH[=i<p\?2=EWKbsUPY\,hCXP!Oh$;16f09_[2]W:-F6s%Ho
%m[47b7aO&Y(i1Sjj!WHSD5W1W=KPH.=Q[tW6d&ZTl=DFtoL]>+/,[e\]iEqbYID&<pqLb(W9V0`&<*g7eF?\gM]'^[+2JlO+f4KR
%A7S@YSfQ`^Pf7)ff\G.*Y0_0)qGG@.K"T/*)Nd`QI-sr=WuCh`ihOhSl*G*6?Vh:25':*'fG\;BGA*(.^B7l":X2li1/ac\0uZCd
%1nJJ_DH?TYkWFsT/PLsk+e])UZRF@u2+[%4Q89a7S\>EoQKK.>I9IaGpb?b(YrR28H'B8aQp)C>VTYhBXs*5-+=Q!AA[UCmH6<16
%1\5t.k,3.t\lH[UZ2$cu,"Y`c[UUD.go4#>ou#q0VNTugc"H]IXmBipFTn]m5M:Dp[`?X:2d`%MnqT^Q:H%+G/]jW&^*..mX(Un7
%+_2@:V"_PMgBnc]h0\HO&/OEMhUCp5$J[huHd>1GFnaa:AJOhAPTX*J'PnKD8UH/ZAkf15Qo^PF8AS_DOpctFKnB)$8Xgn0Ao^Fj
%I.Wc,JLrlqp8tcc#.1Q8WMfeC[Z_QOCt,N41$=i>B.EFFPIR+@Ta?'d!0Ek0h*hYCP&@R32$kdQiQj`<cTgHII6t)Wb*etNURgO]
%Oh5`a9hpF4J]f!^^8o2K]"(G2B[7r<7'7pA!qbWbbgRc52g*9%d-(#^6C`t*]N@ii.I,bRFkOXGZqa4(EXRo`2(?uT8D#5b6r>WI
%4-a`3r99"<"K?'P*d^eV^Z?7Y,tf_mr=YIX]A\g,Zd.V$E0%?23.mtf%!F*BMF/+<:8SdENjWPYW0(73VkF`S>buD'&(fI\h$;cl
%PA<i!R`Fsj)FLO5AtRRIIDA'm`1-R$V+>OO;N`(H?&0$cR't2;'ZngNm()rjb9QMVHRo$8[6/RSkt^PJ>#2/L],5e<ENCn0(B[J,
%=7/k-f?hpA_aE_]8>:UdkLI/jf@H$)gPVjGF:$brn23eeP\(8pG_BOR&jE=>4s$!c;=(KsRcrgA`)1JEY-?jOr\.JW@4T=:Q1p&j
%o]<fid*"G^,aHCO!'s15;09d&9WeBoi+]>ngP#^UP"H1T.t+b0-e#""%G5!8;d.(e6sb(+'flnJq6`U_8>>TSCmd??V<>AFY*kUN
%8%q8u=V-o1SOuD"R!a\/\=0QMIdMr18(,EX*;/!-N$uae5ciKcJM"d///>uU!d9>>P2g*ipLfrbiH<FKpfOb0SdCH*8_J1@?g%F[
%)VOi3S-AP3Xc'R]ZR]WM@tNXE'n`W;C=_+u_jX+6iD^.cFK0^<eO/[s@2Oo3>q$b^r[^cSn8n`t358u)P=-f<RT6+[X(/!*"=T-B
%<kpif\\sDaA2#[1BQnrY1_l8ef1oVpKs=2qMK4jtL$:qDjkN\FQDc3L:40qs=k!Jc)OaDV;HmDG@LYI<"h$B-aJ>NDStUn[L@gbi
%g9=EX!tHH;3;S98a4RI*]cNmCJmJO>rP^ZUh4`4"Jo'I=]?>_>4g=n;S\cGH3;'j)U$R'2H8*@V1J_%qSe&_XndXkO+@F=;Y5OR^
%(/WQ'W5:u`@5t\JHdYdJ9:6hWVu)X/$95;Y[o:euE=s[\`u3A!nqYPYAo\oNl^ll>9hak?qc37@Q2-U5oJ+[>SqE54hgh"ACF<f@
%CdhT)bD`7+T0PCuc'eD/hJQtef0su+gZn"J$=_6&8)FhWN<7$NqG`L#&T$`1ZgBX)#bPk?OeqHWAJPs8/\B0I9)S3f"$lO\<<Rei
%rF)[B$m%C(Mg^!9.0,"Wi`KO0h$rI0BAO8c(-Ge7fdJWb6.jq?TYgHB'oK#:g]>j7[P7qnfAA.1'("0F,^PS*&($=PYQ]tWW/i2=
%Ggc0QeiAo4.)AuG:j,$!*'N!_,E1s:eFUO@G(hH@MIeUjlC0B=1M5#2%TOEHiKnO$97ZQHj2YhPkjS`j;U;.c4Cp`o;O2eCqm*iL
%UdKQpo#$BPl'M1q<V$#6fD8KiKqESk4\d%d_,7Q=i59ru_OBqj6V@-4pNu3H``J!GGV;-mH1tpteWlV:GCjj/9%.h_.uG'pQ2=`5
%I'hZhV'lhU:FbTmpQcBe=F!QR+Va2u,<clB[TV!2:.iXeO6@J,Hqc6A?[VH-h#d0,97I_EH;fi="d\1EK&'&iPt1"Ne+KT"o><b_
%X952Y4^2nrk9-TaKpg+3*A?m<qa&lF7>3$+B8n.)jr1t!e+:OKpak]:$Zo\Q?_+KO)Q:#A9:$5hiV.:1CN89WLe`f3CM0!_%j#P(
%kL2!bJC2pPgDQK'&t8$\Woi3cc;Q((;J<2-=TQK]#]e2GR)lU64tA5<;?K,(^EOm\UQ,.Uo2$dS[/r_l=d!1/<Ma#OYsd&:!^h*u
%#R0.VR^3*R(=0B^GDq./2Gu6^N7j>SYg2^_7sL5sCCJYDZC*HiNQZfX':71G+"!1X\A72Tblh]Z$/4$o?*'U>^T5f<K#X6`gT6PQ
%_<StB?-`n9&Bt")["hFp2BKMrO^1jr"k_qN*+,5Kf0tSsRREgI8o$/!JnD>"4$g?9RK,S3p,JiardeHDAE_!iLPcFX8X?X=!A_cK
%iN?H3="'X03J=HlRgDc;g)6N*D!4G9brhI/F+m(2+D<I<qhoMliN<hhm>"r_0>,Go7X=Bfr(Wsa>,P[PkFTBCL\ogT:AFbA]le39
%KuC"*AEMeo-/WkeB>?LmRE<f*&TJY]3)">'Ct5JJAQq7bP"8N'!\d91SB)P;/44l-"t(gif@+W1Wi?4:WBq1;WB]fEWu5stfV%6B
%Kj#`l2h]PrXY1+$WrfVWAYBGH;-iDq#IL*6>9k_&QJM$I$Lj>`&5\WW2!.?2.I6q-2m0gJS*;Vq1<J9!Ys$lPXF:Pc`snAsFhjX^
%Y(Qlhiof6D[jNUkI8D4T^8er!&0>6!d2Z0,,P5BRmHWMa4T;Z'rk_,cV:kb=d-l+k"6PkU[>%75n"R`BWOh2KJCQ\)7@0k:dsegJ
%*IJrh7!Um49-ac<_]DZTga1Z2>qV:I1mKcG$c\a1$)&SY?%3<XL*-.99C6G]KfUAu.W0u9E^q](&GU;'felV>Vp1<Y=r2*sMsQ<m
%)o1bY'm(%C)iW%YF2;N*cu-](NI+r!piD0r]D6EnBdi!40&f422EorOhR?+a^Yd.&#l+K&G73,>'Z`hlRWFE-LOiCgC[M+5p:6)a
%$>#l6\,.!iLDhfBLiohoL`aGW]a]5:fQB-H35AHLh4<)7U&.[cM#i(pAZY]"-9sK'0^iosC-o*M]19o)IMa#!YTT,0XLs()k1-i^
%NnNI^U$pbBa)7mG2uB%`hPeV_['6be.MMrM0g#!dHfdFqVkal,&%giM+?,JKL8)Ge*5?HCXjsu-h!a!#ZGu#\_rDY@Ki7<l,m#1N
%h&_YeG)jLEQj-W<d8Y!u)3;?b5jTQ0&<Va;OnmS\)Z;ZO[s-_gp>QZ*k:n$Da2f'9^NqK2G/?#L)OYjPXX\/QLtTC.kA>@BfWf"S
%ohr2LFD]:TQPW0M9/fLMI`;4rNd[<ohB@$8Fa>.Or7XLL'HMAI.+E-e#e$cX<sA8Hr?'T&nJE"CH&V)m4[L\H"Praj$Je-Z#aqa&
%I7<X"^+VHS`^DGh[2jqaiSO@>SU4I9kndQ1M[qZWg_8kNN6tm5(K&"7'9#ImV'd(UF_->SEm'C\'4-"I=7pVV8,G:d7@I?B35'3(
%ogpT';J$IbYF*MH/&jB$c*T!=&:Wh6,\/k_S!&>38#=K&`_N8Dbk.0C'`,>fLDrfHICOAQ&L&1pS4_s[+WA`/DF/V?h7u0l3",SD
%El-bQRmbHeW(nY@#uT_7'aP]?WU6St"f2DETh;Sl!_O*&QDR>@8'B:g;<2BsV%eJKFJFXLC4*k/5/I&s)bFaFdXa_!=1aecf?bs=
%K8VsmeFKlZTY^,YT1#B0o@=qVF9r8mQidqbdCM4]T0>Oob9LEW\B\bh$SPDcD?3JLoO&o/&Gr_)Ok9cOs6Kc3VJTIEZbeZTaElb4
%e\tp*+[emGe[0a\%ZrVQ952,8`n'-_88;t<6/]`$oS'Vc`U67ml4s_`Gl<#M:;M9PhrI*'c$*-[F?kN9f;YL-`":jbAq*g+33N*r
%0o7itK*H2$:KMlG@1G;*Q!%M1?LbZ`6d"bP*MXV%eX!!IEscldV/=9M`\^V,:$:$k@Q.>X6UbROX`fF(/JL@k5Sm,f'*+Ro)!0C/
%mmUe0oN9P^+is2Jf,eel[%\o?a#CFcit&De-VI=V[I:G](+T]$9jo$@lu.pJ0aZukAeP#f>e00T.!B"bi#:3UaQR0tZ2JPiNf\-/
%>b;/gTWdT1cm2a#pnaDUC^08C*;uL0?2>l(&Rs8Mo]!DLC@!rm0=G>UVe%q@i0_k;c+ENh7-F2De@V2Rh=m:1P-c_MEhVear)u6H
%WO6]^f4N-:,lm]WOF]3ThNSOD50i8cOX7H_/IdHX327*k!&TC3Nh*gNjt'$a`BjGg2*fuj1p#E7??;6Gbf@@dVf$WSA'qG!*%LU2
%C1C3KKK$"^IL3O*'jK+SWWuaXPI;!/)&upG/l(q9o*A3#H5A5!&%G"Wl=ld6=$R.3Bl<1=-eoE8Fs&eFO=o;,A7>8[m_XuDP9[AR
%AleT7L/Hb1M%jP4"ot:YF<)?fSLM!%kA?`5UFn$TH:`Sg/5<@'O_Qlb%'?3lDL'`G#cKXt#V[bb)de]4(%fH=mZYO9KKLpHT9D7R
%l"tD)8+T=,ZVn9#E@9D4R1g`V/ai[A7T3Gf_n@Lu\-6*!J#s2q7O=!.!H8qJ^9e(7L'q3;^2^mqMVdk5,n*PLf+*I.^D6rcrW3QO
%-8Ze`M5t.^A4`ZX/<M#U>rqa/j_,I?8VDu!NIh3KGc:&CY(L!u3j^odMAW%)bNX/>4dHWXeM?8M@O!iWP2m;I'te?DP@Zq$n=p>Q
%rWrl;#r_6si#m$T"L:G"Tm\sA^1@@AW?-_G4Tuc@cVT96dC;3JM6Lf4aqIC!nRTnE+)5J4HGWmB:ecNSNX8Z:.9bq\S9K*6G31Lk
%"q]D+E;gU&GDQ2Di8D4HgXT:(N=:ZIpkBJTRX-YtkP7.(p54D28d7Kp:*me`g'1PQJZ>-D'&60nD%C,4<'F1rb#C!'2qpiM_6KD8
%Ut!uA%E`.E36tBrj"ScSe-3idZ::uckp+s#Bp\@Wlj)X=7_^;K'U9-Z7(k78*,RK&K*a*n\Z$%k"MnqYD)!k_;09QkTB/7q?)kc#
%NlaCCGL,\3T>"Z<YtZC<a_^ZA7c](oB[TbVpMH0@Jqp.S<'-Tfd`ppgbH(aX4U7M4D:[>M/9`IAjCuC:U@j>+'hGbX([iaVrU$3$
%\:=iKNu8&YF/\;G:ugEQIFPI.MgZEjHD;=4P+A5IoUT_WrFk:f9q4[rf]Pcj`[JN>`P;Aa=0g[mL","^,S7pW"Ojn[ZCjuZP3#(R
%9[#O(%pq1dg!bL&#9e#/9U;)h/0T="SCc89;<.*_K9&*t\aI3Mhg:kW24m%M(P;<u)k3b2._dt?hTi(1/Z5WgXlYXK*J3oc-7u#/
%66nsecIX+p`!Y&6-I0e\L>#"WI#L-Xe:(YK&At9DF<d\?Q"CcbM?<<D^25g<jY9JhkY#$8-*"QbIrU\c8:l;BAnXFV:US<u/1451
%84-CpiUcsIq3$8Kda7`.LU+KiJ<J>T%?0dUf9\`oP]^OV5*<X>D=JFR>?3R)R_^+#o+)GuVF(Zs]R(_u[^oVa1s4'aO6!X0IoY.a
%%GHkc_!"TVn'j:L.&GRDqD>o`HZa5aTWjjkZplifcN*UnT'ecoGZ(=q2&s@CMKK$JiBd:]+\m3!m%c]nAlXBrYT;F5`'X%O.?Xer
%J#J>bS^)p;oA)8'dg[TFrQ.XGMJuK]D09d"'T54A!`,snh.!/f:";M;Mpk&%X/!uG[PIJ)@_[D<h#9a@*07:S;IBBFGdI+6PGU_C
%g;m[qW3WMBlo3P>G!In>E2)*<7rcfPfE(1C9m4aFG2oo6cHH0"3!J4L"BeX^bbHK17u)s)+,u;p6,d6f:m"OB)*kS6?aAj'l!](H
%e4+H&A;8X#N1Z_.*1oBQ6Kuf/7\h1*"lOkETSmM;ctmO%$#PuIqT6Ec!+iFW@442lVZ)hF=/`htD\NYY.PaFFAK0Cd[KuskBTn>?
%@.W1a`L!E"S\;)Z!:"7lPtANYNb@2%FEVt'ajh%a.qOkP'\>#Sq2CbOF3U03LC@`llY2:LU'a#n,3LM!V4lA\oALR[>'l2QrUAg`
%q*H\W0+Xn,FY_-q2Q]7IG.SH&gb*oLjiH?(EL&+u>&QD<;dN?f*>%Nk:8aue\Y_H+THlRB`,We(l%I,0mmmtNZ/C&O9P^a<_6mN.
%@:?TVfaXMVr(LB6.Fr2k!g31:iraBdV*t'Oma_3%6d%kneKdi=C8M-9\*:TZp??h7C@W]Hfb'3K6b$^"oMsi4d2AC(XPa!C(@J?L
%<qh/KFuS::C8VTq'l#!hfdSn5O7]-`;?K,+#5l7<2hn6-#O`X>5RDNTPj"`@Z*gSf/K6-e,@T2g+;lk6*GoH0N00pPK%u#])G$*+
%Y$a#0l.',Ug[H^LZ?Ad.@bjF!6&Z\pmCJ%T=q3R#HlK,[e9M[:6P<<E#D)ggTr0=iL^88/?n<haUY&o7Nk-5@+]T7GW,mF1Z*8;T
%^/1X5m?b0^"$K!&dW?CLKHjIO.nJ5K)bI5ShU:;mlD"P6ZSnb6#g<t&iIr(sF[XgH+XE>K)3$@I[nj0="_e.3E6G>6$jKcpM&?G?
%77NYuWV5$q^iU1i"T?8YB4g13@95I;\q"ufJn36f1+qs:J>Rq7T0$0*k]Y*D_Ln7o`:kB2#;THmd-(]I++1B&I;OlKTbNt@DA,<A
%)*htk1-:ukBfY8-AAmYgdTL`tPO2NSp<6CJ"*LO?gEV852CXZ$UD(\8=q>SX.OsYp^KCf`BRo$`Q$X(,NLD]25:_'T_=$<o$ao\T
%FG9Muelcd;4Y;0TG<im@l@3UaJPAAs?X%tcp;VusUe5LeUiIa#a(uLu?D@Of4D>2WI=ecB@#_jlaT]G9/jb`L()l^`#is*B5%RF`
%ne2MF*W/(>4?4.S8^m3%@-I,JLs?@]:)GtFnFD4&NXlYaEW3(A>)P-W0B-6(;N@s^6eOPE"/FH?MKu14T?_/m3%ZGFUqW1RZU<&_
%`p95!^ERV3S'coZE5q[$fZTQ28YQMHpFc,:Md^sp.f?edY\A?cF9LB-!A(,Kmp5@QeSoM!9;hJ9KZgn6opR.=^LT8`Zg[eVRZeq`
%\fHEGA5)HYUE/*9<P!C+md/&C>W4?!nGg=gENEP0U?(KUrM>fU<Be1/jms:#>ad]^Ace9&r.%l-hYqOoZHelq(Z+QHcb/"Tcp3r;
%DRG'%1RDe=X$S+>gH_/42:4L)F@AoDhO/4sVM9KgOh]r\J+H51JuVsX@G66ANom'WVdi,#7m&)j%@+_b:_KUOeHVhZno7/E&BO?X
%d.#g=`!=<P!'Th(IuGF+Q)D]*]\@FG2u%\=<\BL:Hq*P5dD]Oq"8&'7fNN(D\T0q=$)$-H[h\(r._t.t+O)!7HJ:+3]&Y/coc2cF
%EMX>1,QR$2O/Mim8<GhL)JO;Th]K?h`He!W"HL5oE>rk9O'67kimih%?@bks&HH3;:H9W_3N2(25J5`JP2cK`=S^=-q&-3K@qXY2
%Z[,GFC,]`Nmp_3"[qXTTA<N-rimfF].#J2FkK3=8GjUV/a\stg=YS>%b#S<gZ`\+aO4\d-4Mc2&dU(316#k-N'8]A';m&"Lqjk!^
%IDhQcf]OlW:r#/V$Fm(jY?an0!FquWV.(FBs6du9cmJ9YA[#5,NrFl*;eE"-j7)d6$E0gaIrQ;h44(@7XW@*g(lnfBN;B4=LdGC4
%oCZP,C=q'ZdPe?$_(N+SZ(Xo_(Zloo:Df3b/>q:BD$sDs>FO_1^NjR[OASS2P6Zo$M>5RaU+,H7HRd9U-U^58<.pNL=&K?U[Oe;]
%\k/e"hO:&0rGGNWLtpVj"8&Tjqs26U0>-_.D5WH\DN>cMG9bMkDFY_pF2hW9pFda+6JYccaLf+j$e+uKm..+aEtdP1(p:o5U)p!r
%?9E&mG&"PDD9`NI4p(i#LHekWZ2p0"s30<-+3EDc[nh-JDo.LG?%kd.aDR[Ei;.q*@=mA>5\_7qICEeaWiPKY^E]]$Hc0[lMMfBF
%q-h$eD)K*0"EAAJG&O@jEUq%I/kre7U*N[>-L5mm@Z%b6]=i#Tr$hbLp\St]d'nBhRcI_Y)QI5/J<oZZfa:nLl83?BCA0Z7;b-nY
%""?uhLg=Ja"!IrGZ6=eq&u6S_3JHG:I`um&g"X1VaLbjcJ)Eig'ea&mn\WO"2BijN*V$qo/_<b::g,-%9U6sf5&@pD!#:]55f"Yi
%],XP%739Qj`hGPgFOXbI`q8)R85!ntQZ55C%=:(r-hljQ:^U5$"/o-83@))_4JnjqUC_BMSn/c,+oll`@5"-jH6od??Wp1]*TM;J
%\G[T]@pET$G6B$DA2XL]A4/Y*EYLI1MgKA[j2;Q%.M:%K#D;S-Pr>Cmk[2t->sBET^aTm<bCQI1mKE-%f5tu`CaT1k]8CCVTLodZ
%$f$:)SefmSI9&o<O#qM7XbE<PG6_J%\<`'[W%0qi``+/,dk?rnS2kV";KtMI7S2>ZnqQI\[9/e+<;@)9DPWCkpAV/3J/P0W>/fXM
%W6kg#VMb,\1>D:\/GD&j&L6(i'$]L8#!;=K*QdAYG]72n?:YaCgH"SnKM@WtP"Um/SY")=:<PMP0Gu&`8N%`.'e(^l"0)QQW`ihi
%:@4sCJ*Wn)4":f.oYDCo`,&ME8Gp352QpD."=h)S\0Cc$[Ys>CC/C[6=QfCI?'n0e1I/Hf4t?aek`c]m-Bpq@Y;eoj'1n&n#P*9T
%"*,l8[:"::V4gEoMRGpa@Nk:>d`a7h3h18j+e0_G",&kNoJ5h2@]Z;fouFa@dDBGQLc?_*FK2[1.0>.i==SZk\*6d_6p`8LAse3n
%:.dqpGY,:4_/uI'-<#`aPL,\%M:PR-\kQ8P;'W_Bo#";e*dO7k%;.G^Mqk:o*R,bl"!*6E!Cr4).ED's.fU?(G,k"ChM6*&'p:^4
%[hbgX,fq/WfH\VAI]d-GYq)Qm1Ci,e.Z8@_X(\=hI=%$`SSS8F+QRs>2=';X8Gc0g_"HAp+%b_^@^j$N'@b&=M"h%,8inW-=4189
%$`?#!hd0r+,*c:uMpX%`+)fOCs0m>kN).fOC:U++:>aB<B=q84bk'ta?^U4@c?O0q0#0FC_<)?JRdqLq(<n"[ScaAZ`??KUH88PG
%01FWKh'B36h*ID9A[8'O->>qpe@g9#2]R+;=-MYM4kSI$AeZU#nEaX)AigV?6s%DZ'.>Y>E`dN2rlF&>+>"lVLJA=fGJ]lp^+48J
%"54o5Blg0mp=D<e%Wt",KBb&,=FP[5Og*?*IeunGc]Rq11-dAqGJJ1'T(K5d_cg$3[S7`6-#,OI\Y'KsST8T!JU89l@gjK1XJbXZ
%b>_2FYDVMiD"/qXf'pMpq(ZOOR1(+]1^u']dHYUZ>f9PGc0Nj?>CZjJ[.CYj!&1BE&c<2X=5<d)G^#KXR7TeG"dr@PLAtN&ANGV=
%9,7e;[d:Ya?DX)1pA%836i1C]r/.l\\kc&=s)^c,c-QEo,EgD&9g#8pZoH(RT0jJ\+ZC@&I7SCq<25R99eP?LhJnf8k8AqUbI0&'
%6TgI9$)A5aI[Sa3GK*,X):PKf,*@6dnDMES8AHI2qT5$ooFN^Hf9Ss*HdHFjh%FF[.R*2*F>ej#^@-pA_tT_qKO,@Bj2mkmq)3o8
%Gd8icq(teD^+HR_,CA;ab>o'gIbYfg.3im#N$Qoa[f41i8Ebd#:Gt\*i.<`E%iZ`Zl)2;1D[`LAE1a$I,H2>[p!JPSOlVo\)>LEj
%Se&m5NU\NB`M%T=IGAj*O3$].ElY*\P9SOSmZU]BSVbX5!VU6dR&XX_:f+.e/MBKclKl=ell`ed\smZee+2=f"i-G@_ipRBF2O[t
%DEnkha>kA`QMrTjACM^kr7B6tLF9Nu_I&\AJ3Y<$ZZPKBP]i^(f"kY:q"8#g(r6[&T-Md>d\QdN$:F0,RMBM75\q$DBmL*9h+Nlo
%5?Cb'JeYeN<4o_\41>*\DUOen0[9Q2;GUp^Db\C60M9V&!n%aEbVM(YW#n:6#[Mt0,jCWVYD!90aq059dNL0LC\N\lA'j?(gdEc?
%G`$,m8a(Wq-pBm<,Hjj9LWE?qi#Cr<^-VYJ+C*!39Rtdk+Q93]$baDO''HW.Jm!UKiJ,-.P\4A>e0s9g56F%kQj:@a%F?_u>)dt[
%VF!h>k(eUZd!mXO3Xj+-OSh)CKc/:hL5@I"U7(WuMJSL<jS(i)LpPJ6g:E'\j8q_4K*A#j8?u?\>#4jaD`<N'9&[r&+`]VP">6E2
%[?fQbTLUo97.\80,;"!G!dPIrqOd0!0*'qNTn_NU)3*A>0jF;5,ft[j8;j7S=@+1%#X[^iFm-cf.W_G<8j\Aha[:nf`-bLD0YqqO
%.]=$g,]&V#AaD\nGgKI'qk4-25K#766]1ZGN,s&Aa)PS_;Y4fsaRB!hr5]Y\2hs`t7V_$]h^VNOibF2OoHR+22AD<158c2!W3=I=
%=,KP<+mCt=%MJ<^89GoAZ',Bp90S6j5+IECOlmj#IUT0>`qB4Go[]VE,a'^/+d,t5h-jrp_E[A15r9#W$X1BkW%!^ZSc&cO_Vg_[
%GMLE,hi]gr#`KM=)4\=Y=8Q%7E`0%`,.]&/[#tAchlloYZ8rVh'GAEn'=h[#7d6b4qPaP[n=;taVsJ4t=R6OUUe3.CZ3^iD1QksV
%9Dd(Y0\plfeI:%Z!Cm4$UJ'8)P_]+lic*j.7V=HIF['aVW-8]SfOP/)Z_o-G:mhY2B*@@'rFuO1WHa\0\JALooDu>`C=&1ao&eY3
%kl%BWo"OpfWI#:/iOa8XCGT#ai;iZ5lMn)T/(iK3nl\+,48u"::UbaoWuaSqq,XSj@cNSN+'5_7QDB@/3j55_OX:m'nc0BQUiB/9
%UtZTEcu-Zgl4dmMPF#SH:!,n^<!F=[WAJ+e?n$EUPgJ'a,0PGO[$;(k:+rUkjK:Ian]YC-'gQhU$K4fK,aF8L$E0EZ_bg]bMKbW'
%QZM-,>1!)6c9OXXan.N^LaC0&;@TOe%8!9$iXSdLHQ[Qr$3@B.<lglY]g@e99e$"ud2^<O_-u.-+$NA6-he*m.)g#YE;#$%%I.B-
%JkcG^%nq4MeB]s:\@f$]5$NoYW<6\A=^TKRq2;0ep&&EXX_=)mI4%2;-o"375_1/>OKK3]$S"oDe`,nkcWL@)Um(rjZ"RC$?.$?e
%.gR1+o:J_iCKdU48T%Refa$@n6=WPW#paD2[]/t0hPdt&[e"ct!gRFh.H5W4-jsoXQQ._M2OpOPA:npg]#1)j8rA3#J^b[q5sDNa
%\I`LAf.<MOJP_5OV_*%!Q@Pp6oniQ&_%I$,=T+k(+A,k)O3Dk%;H1iB5'&LL6BJd\<@n=p"=]KY"t8L?mR?7(n"f@:5HbSbRA-aD
%@ZjIoOR_bH4u_C04"S@Z'+&]d;#A+3ju1Z(A`M>//LR=(qc[BeoC=#iK66r%5]H)E\6Wb=-3;T0TK9L#C`%<U*G@$3'npAjrjZGh
%P?'J(a=!-rMP;*+6:q:a)+qtX)XZY<I[qXA=PMJ<8a'3B2`WT+oZ7J&j5$mM\L'qWSlnqTY(R!0G(O]"!+oaM/OYP&FddugBbFr-
%]1A*F+G.UNffs)ma9oc(<@@<*/'>$t:k;`s;QPp(2!&::kL.72@sd1;PeerH]@UJcN1nO:9]l]Kf3Il&LVTt]?,a\nBf&Abi?M/C
%_0!uF5/<S:OkR^b]t>[sJjmb*4'0!,]cW0$h9RdXZ"Z$#ko7(KFO3r]/OW`*QQe6j/isHKMp.F+7OL8)XOrN48ZKmE2d3%`+&;Gl
%c"9^O0WX/=SM?K#a>tuG/$8)]+2cs>N8<fdP1=jJd:Lj7.`J[j)e[a-11H,!f![Xus+2lW=YYd<\G+nta>k(\fHD_C`"`b,-$u^n
%+<0k_TdeI=0cQOq5s<Y56]Zk]F%uFJJ7b<NKLjd-Om.$f5#"!%qA%pMU?X(3Gi-X]%:2<[Jr,sR565Us*,OnFg`TjmK(^opkpgkK
%JqPO=W5rZ>]epC;\5#.J^%b#uY6HM4TdSLrVhLG7:)*mK6aS\ISSqcrdWE.^W@WBlk^9M!7R[qr!4V,:`!:[UNkKI.E([J'"8:NO
%7fk^hb*69F3?hRFj)\,U.o)DUdCsB$.9c3nl^Ma6`$$R^k%-"I-j?)0,AQBQnIeKm)tNs(ipBNRis9uKai[l.\,17K)'Eu38g`L+
%ct);p(tE!?>[aJ5HtQJSd\H(K0@fMR?4m=X)3XM<SE!2"O(Sfc&;#ESpE2M^EXG96dN6?::'=<P;B00n5A'ZOlO_DtL4ll!6)qmY
%G..0b&=)GrU]&hbgZ>I#Hnp<;qIYNL^]WebXJC8l+VJP589I!(U)@3?-Ou!V#AVXK>C:;^JTId7QXn8d1l7qlkUt>9Bu(&R*fRO2
%/a%-AOMOLV)3N@(>=)XJ/r((q'=*Ch"FbD*kG?CtF3qR/1=Ds=;q_)17,Q?^3(.hXY-2])c'R,dJrTUPR$`)Eo2o&bnJbls)>W5F
%p!Ysqa!WgbNMb-WEoN't,:^O&(R&fYA+#c/IXpcREEu*N&/?u0,lu=E*/k``YeMBJMHYX"VMn?R>kT/ZXHUY`k54I`=$,*)fTO0j
%jSNKS>L\r/cKX_;W:uYQV&(&<gli4nYHUkJS5oMQhtlBp<k&#5_%`#lf^-35!!^-m&TjgG?rB!ps!"Ueg&?0`e@<Bu%Ig+@&igZX
%*JD_=6F9S[5L,f5ObDL0_5^ZD=X!V9%'H;NkB90b/8X9go1A3oafe2F=&=.N)_/Fq_hQs<e8anT>5@BlAD+>cn?db'O#Sk7TYCX-
%0&oQ%-ttFq40?C4I:n,@6O?Q`%t:g*rTnsI,a,X>T(VK#3neG-RMj>CU;5/T&:_giA:]g_dnhk=S[`HZ2E;YG8!=MoSEj^0$j5L"
%0>lp^"RNot;+R.<B@JlEid]a[Um>E1<TH"'G<[2H[m)\BDt])/O@uQ5+Lq;UGjE-Cjj*a0m+L9L)DX@iZ.O1X,P`pnV!4\H3"4qL
%q)GPdi&S^2kU(bfA!3Ap!;LRoM(4@tLm%uWH<BXb4tA(JkZCe:%ZUtE,QnEN+,4K7[?>g_rZ#_g?A.n3]MdpF#?GS"Hi$$WjY%o3
%^2:P&i':5<ZsOEbErMa;kF9T+bR:3b3YQ=hZ!$e$%sN<C:sY!-4?YaXKA;8%;b;)FG'O-8N!A5()=i&Yffb3)n7J#C1DC*<@'.^1
%lZ?f*+f!)6#_9ZUoNMGEZ:>UQ+J5+"^Qpe,QU]r?j%R!l^"^:uT>HrcS1-lDKr?[Xp2ph3[9FBLj08E-DGh`+)2[cFDPnR7F?1UY
%@qq7i0\Mh.NT>eBg)oa=7uK2KS)#M:8(6Fnf"YDB2bX[r\fNNN+'s?Sc`>'5F#NI<J1cjfNKcquXqSG62H[AX##UpTb^i(Ucbf!Y
%dfG2"MV[[&.sBB)P(!\"O@]1ZPK6VggMp+#,%]:\8O>jBeO.8Mjk,gC&g)l"L$?5[ZkN``KX=g(lO:UVQMERDr33d_,dREZl^n^(
%(\U4!Z1.[+[b.4;pO4\s7dl76omH84%3!Wbs0#ml4A_PDALhVsN+qDilJ_ja]2Mn=(m)4L_/<jD?<3KENjtk,-tHB')PPD".PUE)
%!Fe2ZZ;K=%7fbOlE4s`p#h)r);]XgscD"jf?t8mH\CGt/PE=p$[sLn!?)5Y#qV9D.#3CDJGe7q%db6`Lfuk[^7"!d>4]GIZ!_g)&
%l$gQ-!E4rl5le*&iBMaBj'3V#A4qZ]e&h"AEkD4:r"A)%iX>=C%+>S+eZ:GdjrBo,#$E!/o7ugC40E1l'YX5RSZ:'\^B%p9F/Hbb
%$\(K4lkITiQQ%36dh!^hDT-50hWYgjH-#VGO'Cah>9n.I).jEfT[7>t=q)">i#UaGa2NG^XS5iPB7')UJ5R)08qX^/+a6T8!,[1r
%'u'OuA&O['Zb%?5BGk,;b==9STE_;qoH*,j*+gp%GpUu#<4T-C"]3$IW+hi@p8_j`gUQ%&;1#AUE%I+@[Hej__%bEM;9G8n&k;<M
%%FjSPN`G@6foH'hgbYXX>T;j<1-rs?X?G&\eo25e2n.$>qtTc#^H0N\2n20R9\rGH03%U"64tTiI>BOf'sY[8RN+)*Wk)iKgIDtM
%1L^NL/4p\nKX7BY[.%_*qV*7N=m-Z<h7SMdL#@_CKr2-p>GY3XNj-']XO==_#S8L\KURRcCde4RR/mt3J<PSbUlgIed]q3M_ik+'
%Jj\##jI&8sNjTHS0(BB;6DU8&%@C9Fn>=J_,AA;!5U)GI)Kb>9T`/$=AsF>t?_^-;X:Jtn>qaT$\VCK7Y.FM$`4m2$gW-R?7cJ7G
%lrsEM>][E+AT14I$'r;LDir(1q-@`Ch<?cD!&rnH3^&uVK1Zof#[t<,efeS0rQO$A).]L&I`"]E^\kU7kUM80]Grb;_n'9s?6eRE
%EjdF/VqF9^QL5(S7RYXm=G!]-(lF.cbiWWG3QIZ@F3P860B[SB\D*7.Z5^<W/4d)Q#?^p*Ha*>]P)"Wmg"eXMI^Y5f>Ad)ih\K'[
%O?CtlZ\NG&+WHsp\kQ#q0pXCF&mC&[B!8+VH'mutZH:.&fV'"32UJF5+`cL&?b:/,3HmW%2J]P1>u[p]#)g!i;%C?WhLVhe!<L`%
%'q"Ptk02Ya;aK/<'-VP3C@3c-V`"J&?'gArG\:eeWk4#_hC@NL45hQK&U^<[9sbgXBuh?Z[Vd29Mi)bb`/eI3/XQ";)#S<RH?2YV
%NmH2_e5PUdnB;V5:6(o<J$%WMAa;Am&5R+E2'O?l#$?PX.;*0Udtm#j3%eHd^$e"G^>XU,3t!grTnh+m#4RZ##qA%NZ-qg8%]ZlB
%Jb?fR:8qL)maW"i0p-n83!<JV4'JaR)R%cr0b,M:aT+4YQ!3*Vm9Ur_(j%YUHeBD5).$bGA3''UWK"oIA0j04Xt^TOi3kUqYB_gc
%Oa]O1)]nPa1DqSjNE1sqk&a0W`ZR?o[d;[9jI:Kc.2-EA.@\$,a)OTc6OOMa6Q9_n`Q3]/?4p6DWM1q^hlWbfgP']PViQa6W8s4W
%='h@@g)tL>OFH,Mai8X`"P^4#co,r:5q'6gaL^1-W/T+YdN-F&M2SK(,E$l4ZO+<6/mM?#?;86mPni?>::]D6V\sNIHVrBFrUds,
%r`LN+:!,?V$9`j+'[Or2QK;m!/.#cd%+>s.XQ?&r)iAdTT#?rXBc3u_2BQ.6"Iq3^*Ao+RgQ7eD:uJ)lW].tQkI"67$Dq=pT=W.(
%MQV0]1$*LVE0J>Q2F>Mo*1Hpp$8KDt@Q(jHWF3PV`u9/QBYpj8$7!Jh@[2rX84Io9UR52@36<?cj-%E\&/G-TIf&7>;^C>n9%]M3
%MVB&q:s)[KDR+@&Xn)-uDI:=Fp,D3S9Sd&q<inGLj,`JoAOpb)^Umf*h3=[O\H*Ek*At#nH#4U;lRFIi8ji5?VES$X-&P)'ouOb6
%UUrRcR19i3*%dlhA5=CsiLI%hp=tW4r$q/k9!,<%IjcP&SE12%VB$GAWK-d\>"G7pkLF?OQ7qsfOtEd3Y0_UA_$]#EqRGmg:J>VS
%EhT=[7#@q)";NE[0)S6MLFf/Bf.^6RgsH;*KZK`,DGh2X!7"2&0J$P3``^G]8:[`pH,\MD_U0^X6FA)%\V`sGY=]8ebIa%L4]9fB
%fi5-`"cfi$aNq&$Lrfdi_D4jELIMZo`cq;+kua5c\bd&@oRta646ThcGH$2?C[n([hB&%)E")aGp<KeLP2s4&mfN>Mn3qlc_3$Js
%ne0?)+/H1NBi&<_m]e?P0JGJ&Nk363C8&4<6N?q>Dlk&%6_6YGQ'uef5[/bDg<>bIaN00c=aM`f277-PeXJ'[FFqGQ^a:sAg,n$F
%Y6[+]#<>qH4[I@G^&W-\c]\`>hk#<d+0*4PqS/*;9@%Y6q^iRGq%d?YeS,%Wne/VTMc,mV'"pQ1pV$=iZfTWcWtJc!&(lbG@6eaa
%O<U8?p0["![`P]hg/iQ0&M<NqM_^@7?g6]km@)>?hH-![r9G;kM2Yh&'eeqq</A4RBAMoJ8730)k;Ap%=!Mf`cErK"gWg(A=9J_8
%$[)GG.sqk'/kFsFD:D_E17RLWM2(SR>'Une(/Z^@*WBZMPH$e?G),:N#qa"oh#6LEU.or'G$.eDB&fe]H3KF<LPE[rLb5L*<ie1b
%KX$A<&2n9sl+T=XR\+aE4gj)BrVa9OE4&*7\EOHKhJ)U\!0nP`e]EsjfdUjO5cbb;>F;n9FU[m43q1es]eNWfMp\^Vf^]sI2;54g
%F.i5R7DNu9?)/4n;biRl$ec=2d=3\,UWo!Ad=R6T]i<4:$a)dT+^f;*5r`5[&RKCL:\jR4nTa?Nq.,J3#Os00BccLQ3m>:Wck,@e
%o/Yl1\riH;[RQQKl]$\+%Y<jQ0RpJPYROi/P$Xgtr)lo96M])N0b)9-:ssr=)><#X>KR8^!U^0&E6`d!`'2LqK:LT-.7Yd"R_"tI
%(K,cCT(Md`aQZ\DPS7h1,P#^qju=S0._-,@UtH7<-0IS@U%ZSOHD'\HdFjg$4Ua7[N9=-SrJB5cn!R4IlirV&:#BH!UY`$`i+V1c
%G)bGJ(CY%QZ)u)]'UO%SLmqr_I__o4^`0;V8C;bV3uE#=[/__[e*!0"(7jW2BJ2!_]CJ6E(eOPdGp[\Q_Jh<!?i`Co->n]>7:"Wk
%)3LG,oS0[]kS6b2lH&G<VtYY$($$,<Gb9#jF0IcXdV`-\AJ5"j$(]V9c@3/io]b(#Mf]4-BP`ntg:m'7)LJg2Y5\.$A,N$(h^?^-
%5JPbS>YkG68fmh>rVB[*NHIKfdr%-7ZP#X1YF7h')YAjH?nO"]11EuG_)1\@JgbK0!%/5me4?YcI52U`Qpc[$-EJhC<qpcrIpSku
%[j^fMKV!&kc1VUug;k%hOCQ[kCNWFg\iRi`j[Fr]CO<u3@"rBmoPH00is;)q+a0]$Q47BU'@@RVU9Sa>N_)pO#T6-]E\?L2"@fZK
%-r2800j>[*cCfTf1C0]7A-G@B8Y?GGnRr[:G.a9UDsYk?7d5kGrqIPP-fq$`1M%W"?[&./GN7N9)i0gkO4rh0^E<8\<U]TE<.9]`
%k6<%tZePJFQ`9a;9:ElB>%$/dE"4SG=\(H%(+&E<_5:B-d/Zaj^D<21`^Y`IJLBc11\boi:Tc%%>*m)HO]YdLRP+)=pck'C""G(6
%65ZhE#1fp#F$BW+4rWtjQV]R:"*C[]>'f/h?OngBq'o34CK\<'8>*,rFOjjo#nO19fSM4o8J\Ub!+=B>&ZD#.`ScV&44J]Qmi<Qh
%&Z*oklsXFcERE;j]P3$-D@RCgo=D+B7&&s%CM<d1M*qJt78)"^e_(3,5j!Xr]]G38'8uXc,i29^HmB(*J=Ju[@!S5HH<FJAka?P6
%lQki0?N'(L>PB7PRiQ7TaZn?A*+/5H)&24r"6%n606^n7#$Ka,e79?KlngnN\Cho$fm1eofSnarN<\jbn..rap.)SlVtY"$_&Q]b
%&3i)^:HHeIQ/a\rK+05'Jubh!FXVF3V^ZQ3>OQG<Fnrn#CR"nb$iVWs%W*+6'Q/epU-=j]%jmI<2K'26PLX^cZjHLleZi[Y*EAOm
%`9Ha2a([O9$#7_iQ^uq&UJ;7b3dG!qU"B7rBI_+:[7S2_Ej&<8fAPsBPJC-jS!-h)9n,^2`-2\\V9t]5#?_#FShhnM3A\d_*oshI
%FGhV]k12b!*_!nk5AM$L@o_oVL'&Qr"fqc0Z!&Ph*:]H\\261)Q0=csZRp;XGbIOkG(j!KP_85GUJas'^#/OUj.t$8"0a&,!>gP4
%M@tBm8=,hVh2<XUHZed?E\TGUggt.Le=dt*0Lp\->dtj\W9>q@Kp/eC(c&NnZsduQIOL*6E\uuVW06l-o3cFr_:18_21D^BE&(J1
%,cC*^,_PYq*j!iGf[X<*L1hNIM"3$o#,J;$Q-uVl8p"7YZ80!#$9[d]7ER_A+\C4-(=`t,aVO1jU?9gu+MGJW;LJV&d%+f!ObQaH
%N#Ws3Yj=.*nX)Q.$iM]O#msC0.);s2m(Ff62lS27G'"%.HL4V@>74`X?d@q1dl'p<E>PUB+^P[iF0oXigtWi]#/jLd1J>bJ$.]M4
%;jkZDRaZ[OmhCD.F9^V)/Mp1Q!8#qj.9L;[3cR$IQs(1u!![/\#b'!2?;4gPFqc"RfFTG!T>C67jV.cABRa5R5FF"cp"6*E:!I7P
%XnZZa6n)l5ArO1W['S:7%_Y^k[RSHAN/id&.W260XCfFSRLVkOcNA2K9+tEuoJCg)s,G_uaA>]i_eJV;G^@[p-aZU/&H=n1'aSJ2
%q1H,0TJ#7P7;HS9"GgS5^9pWAB\smRV=G$^Ht)nP="&YQ[:O?If$!*s;P"1l[]I\tPX&7spug"+`l<H_7mV.mmsZA$i5a.t!Q]r!
%&s=79QMO>F/M!M&3e0gNTQVYIh^k<JkU3*-:Qh9EJH59C?\KDteOAEQDpOE0hq]G)9Us$aPF[hF,h7<8).*j2MVl%J5I60B-BVJ2
%]2i'n%Ei@L)YZ.[Z$iZ?2b8!9Kh6XKA;*\#651n8SK+sXZC2l&ajVFC:0Ra\W-qEh>,(E.;I3T\e:]2CNp[9!>]hZ-[]6(;3U6"m
%f4ra^IBdJt%'-4_4T6M)gJjCd>\=L*:'OE>^rE2C$MQZ@l&&]>a\.!+\*$9Td8WLLBu9Gg+R/'1!MT*=MC27YN>Y$RM?luu5jLNH
%/Sd1lpG]cFg;(q&(/>!/\nd"qOhm7/'>-\.!#R+=-,'LJJ49r#jLV[/6a;dai?QE`IqKl+J^^*71RS9L!=Pc_KJ.#H^UMtm3*-k9
%/qH?8G+STlU&D9gHJtUga>@>jfe6+r!:r-B(b$-YH%9EQYtC)nUa%`o2bW.j.+MV8h&X>s":*\aH_8i`.RcAF1kAR.4pfhL^Di&S
%$t1&P%F.92Kk,Euh)%4gDDGtaMR)"jDTm@&EM-H.D`/n)hgsNR+NNtl,tG=q`Jk4Pm6c7O>+)_**49$<InU55NUj+b[U@#_!R"`r
%kjAX["^iiRZQ\WQiPO_fFY[*Q^?)8'*Q0NW/"o8+1i!:Fa<oisb%fq_McamrYb7_LLm\E'.pTM#LZoqE[YmfmO]qHjTrZCOOb%C#
%GGD)L+.A+TlOCi7_;p9iErW?H[Gl2bXOIq,5Js):2($elo0(4+:sd&@N_+=6]'O7m?X(oEb[])BV"=j<j8S5he=][A5qt=9/PE3=
%CVRSA$A8KD-LpNG6k=S,ZCeD9`(Jm+NHSY7/>-HK/P-Z[[?.UH=B*O:&5CQXgPGQr\,^TQWWsa6J9QJ:foJP7/_F!bH@hRqc'SN&
%=^\2W&+9Vma*m.*[Z=484CNSo5F]X`6f=Zi(o,bS[3M4NPI^1^*3"K@Ws<!r##*`N98&<]S]r.>@Bku@Z9ha4qC,/pBd)rhlhYIT
%l4ncHH6YH+U=t0!*%("9*IfJ6>0r3&k^:FWqN>(0r+`f]2&a')f5=dcaqg.1JE4BT2LBpm/r`ZG26TP>X*n;R#BI)oIQ1ID>t*^-
%RAkJbFTdhofpbO5l!-L+m_heA#[p82aaJ1d#"XF\r%W6WDWFtg-=m30^)"&9`RU;h)WK:6^J9BJdAAYP^fUYdnJu[RVI@Z#l^Wc>
%*>!:CD^-nRrn4%-:g88.F"X3bC;uV\`7q"DE"O&J[_lY34JZ2M/<Doc7EVfIXZqWQ=O$!hNGI@$HbhMJ(u49;5PdBQ=<aL='[4)l
%"6Mmc;?H$`=@WMJKKWWmoI>I+!1kVGgajX`aWjNe"l>Nb<46)1%+.e&&X(W*e_F01M5%r9fRW;4,+,g'Nk$Qs%TqO)Akmko=q,2(
%"PHo3CC(d2Uc:VdasO(t2,m6b!mnA-8RV^Gn!_^u[p4OZB;RQ56n`YDDgJ-7#Sed*p`Y2:O7Y9b[=XsB$-m@""VrbCfFdGJ@"m3E
%HMps]&$,#\L6tN4o^jY^FSuEMgHX9^PB&BR[=IQV$t5)1,SI<@gCfLP-D$=KZ8Jg#XfiIN2+uf!6ifEcU9)t"=e?l/Tf//PElaDG
%T@E+SM&OP`!-^Ma+s"HiETYPEHUt$31nA<hD%</_h>F%K\KiKUo[-6q]BJJI6JC/N_4hc9poAE_e&)-W0#.Pe2T#8(Z8%P/(pD7h
%("C%T1_hN&Lq@L9T3!dq_K_L^<5k)AJpntQ1WgmK;H7dWb=UXn^(eB71#(`?rHDFujQ"JCr21uC&F!#QXrI^.Z'E[KVU)jR&8G*k
%;7PZO>>]MJ[!RZO@s&()6+L4&Pb'T%a_i@:;nK]25F.Eg3&<VqpDL8GITP!C="Nc3=4)@?J=ng]*31ma@)Z4/?,9cZHFDcC.fNsg
%<%D,D@ia]+_PbdP0Y)0ofPHQ3'\m,kr7<T19o$#?Z$b,S/:LV#ER^NeAq_p5m*koTUs%:e6^<1]L,b&P:r?m0TU+!PPf)7RDb3)]
%1dS+gX^;RD.+<R._%tFjM&bDf=O6?j/!Dq^A5ZCC;X<co3SVSGl,%28WZn`n<o]B0rcY3tGUeNe*4-')]IDU3@(6"Og6SB5-")DH
%9H8]'@>[r7]aQYA,/>TENW(,,@$).D?s084@2>\!HX@9Z+dGA^'rPk8Cfja!!Md6)Qr,E>Zf"*2:h/'/]3n=)[Z]aB639X(S.g.)
%R4X"XU)i'1AMYUUP?mf*q-t9b.G[fdRf`(YPWU\7$I;8NGgQrjBE[kj``GG1d'rGF"CXEa[M%W5:^K>5VH,jd))6oO[95WaoMrR(
%DN$)\L0WQ3R/Mjoe)9b-e8Z*4=(,W-&4jqb$sB-Q#>+1E^)S^V*%+(Z))`nco:&kgS&HLPM'iUm4!n>#T^@DjOcKee84U<<N;E=$
%U)%8?:IRi'?d"idE*6E2hs1pRlM@&p_#'2d=@qIa+#HY-5PrFO?f,,djRUjaTE"KEk1(Qf\c2Nu(H5].rTBeZI<-EU@mB6cXtT5c
%op]%7?bF!uqsNWcIXgt*,CfOObN%V`Ff0)),rg,HMsE=jY2B42Nie.Q/\p4uO8Wo8X#6rmgN,malMB'"^Np\$VMh)FqTZX!8,W5.
%X*:a"DuTQnQX@J?Hnu7TiA@/ikJ+e.o%dC-39q9M4)F[1a$]@*53Ct-pX`c"Fnl8sl146'lYke/a!Wie?LIdQ=-mj>]X`LgO-d$l
%3pentmr%rSH>[jMOm6&#f=\P7M^_g7?YKIUef:6m8qGt\H]o"2hbY5fT@>"mpct*?]jM8?Fdeg1,mk^)mK<`Jhe)M4"\C;=2B]<D
%q/FP]Ft@@;!]&:,0a*iAe6cRA-hER%[ok/LTISEYa8IOeZ=oV15aQu=QN\V)W'LBg^T9c?HN&Kp!kp5C?2<]#*+`/3i]$$#MnM!<
%O'?+;6P"PlU);K?cFVoHG\:jSp/WQR(N6a6[jq[a:$V)`j(q7S'+Y60l/C9mTi4R-LO`eZ?n'p;(rZfa7f@h,B2ghPJ[PZ&4cqHb
%BOW!&R.BIGA3C8WQKHc9;.toC9nVe.8)e.<qk#A!m?+BdalHj\ea++QV3EJ17An0;Dg)YY62@.g!lS](ZR^Vn,,lJ,RY#;OgimH^
%8rN_Y+Bp,8ofcci<pKMQd9iJ-HJ\'-Z\@7TURc"O98$4>l1;R_DZ18oW$2X7.N-1hI=R[fXs,:2,1>P!<TK4f*(d0uVleG+KHP>)
%!b"q(ag"adj`VV0r<.Ebn_;aNURV,a@4bSU,8gjZ#P*:S$i4kR;Cq'C.R`5ah*Rq=$/iqu>_=K`oU.lCURcbi>!;uKp1[,AI=?)!
%k=M,6e8l\R#6ZiOUO2<:1>cEM-><orBuu7'TkqWOk9nEiTkG\Y9KMYXKJR;Ki$kE.%u#<8WAgi=Zp]XaFV40E2n%1F>8h5fpM\))
%3h9^),"T4@:;Ru"A<EI",]K&clIARP;)0p3a%*c@C8n'fqY<Ru7s$LV=cf;!$!hSRC;RXVQ/ORfI'6pW4L+*F.aU5e`s="8BNPEH
%Xj`0>5LBP;)AkN7?Pf^s^X!>)]+4?47#eeNpY!UT(OlZqcNEtEfM%*ld:Es@J\7rDD[']WV3==7?SIQ!/i^gpYk6_k@IsR$J3ZQ.
%_0&'>"EYgA-/)8V\n4X1EneOAe\<J.2o+'g#GcW:&1;TV`dN0Lm]i@p*_GK8-;!c&`JTi#F<1)scQChk@UNRe-rEY]%RKp>`!oY5
%6gN&0$SmJN3T[eWS-*9B#s<o4#^8RD8JKAC1Rji#QnherKXC_PdBQ6;RiBXLfi;ZX/g^)U82#iuqol`<\o`<L3oXJ^8FgCZkYAl)
%q$6.^_Ts#Ep"?IM;BZD`A6Kt3EbQs.$q,]k5Y0VPEj[)L(0_W2WC/!CI?#)/#*#,l,(\g2#RtW?Mj8k<Fub@2p$<DYIFH%!Vq,\_
%S91;cf?bfT9sJH>&7JbdDQ*?UQ5+@%8UQCnEC0.JD(])t/X1kReP,.>Kc"s-er)fq,8![`hdHkeE,u#3'XdKe`+7.%o@#Tu4FN84
%:TRWl5"6!m.8KIq"GZ.UVb6B1)[h=4bTSrKh,-108/IGLr1]!e/CDhZVX3u@Q5"+Ag`@taBF,T`M$=gAVqlgn^^UKmWr\Zgk-cHV
%R8%sb,TF4L)-U.u+<#Q4TUE7)MgbGXSh@Bp<3mHZ3s@OE-`T``_;n;B$@[5#HR`PGo?LbP9*ahK+gNQ!6ZoZl+t(`Q.6?P;Pr&bR
%>E2[TcTKkWB7](_J4M0jG$"P$&HnnIfecTK"u00cEl\>1=%AkJ]l&=X-\]lP+:X2'l)*iF0p2bu7SSBQLK/)^QtV%0]sXSUeJp)e
%DiXNOV+T(<(O.-\\3<F1&E(7F!fH_Ve!4rqX;J=FZo26b5b168bTYBP1Mu^QE3BH1#PdY0YB1UVPQo54AgGX.CAHk'^^=`d"4hIj
%WbX2=&;@R2>),Ee-jB91>fFcS6#RPQK]Q'ja\$tp.S0%c>F;:5&(@`6Te\qVP_%]Add\eg-J-ahSB:*omAT+-?O*-PDb5=FFWIjT
%]SS1kW2c_k'WIJ!L1cIT\@!/gCsdCYCV"?U<HjJTOLN</eA3nA<BXBs&Jf3NpRlC-n[Jo*-*1S;.oV#48>[]%BIbqaJ&lI4[9(oe
%aTRET9\LH9ltL]bTKgSdDdZ'L8n9Ba:]odr'Q]u#Q_YQH9hDt08:E!'dlpSPg?:iDACBrLo"W!^KtbeYH-WsFNf0BG$X<eGXdNs_
%GXJ,-Y$3;mQtT:g93u.Q*-asB!+if#']p]G+MKe>Wh+[SO7q6\b^I\2IYu"(YuCs3dk.fPKJAc)BL2"2Ui3EV;[[&W4K'Pp!)0Yf
%\>5%7Y*.Em)V2ac?A#h-2%?l==;,5=LmgE9s$NnA9`QC&$6k>')e-l)Cr+SGHKU>)KZ1h_cQA^[3>)8Xc>rLH^60&;]=`c+?1_GY
%TD7gE^8tMpe+&O_22F$OKs+AHXf?\F<#sJ3LC38a9mfq_gL@\]VYYMF+L7._LJ=OJU,ds!E9mPP]]BU%?>B,MjAI-OOCbXHD%Wj1
%<<].tY8"HdDX&DYaAineXH)^O3ia1R.dlONRJ2dKe)%W/hL<juXi3i^dqAX[m^R-4L>"$IqE7>>f*A`fTX]aKejea82l<Uc']03`
%g&elrKg0_2R*pC_MYkB.4DS8QbXcOD(0kQ05>I>E&13\BWo=i+#V\h=:i/IFi491o6%Iq\K2s;!^qnS?02;o)#,m.gN-aQX$@AIZ
%96TP[UE6^*56N[jS4ubdD`f=p25XY/Aja7r`C?B=]]_&+3N,A[HY5<&&6aMA"F/?JZjAqO=0(`lfrqXg$Rh.`9FAlO2g/-)J+NZb
%JMl^%db1ck]mQPh#!=`-!r9FXEuVb1">K+ZA+!$VPsOeji[C[3$Tt^P1I9d7h9B1O<#Y83_/[q_(X1&nn7jPAB/Nf+OVi;3,W4LS
%2b@(L+,=R:qK+ZLQ7Gh/BOe6k%bRPKpSUM`cguE4cM+[dn)3kE1EGUY<1G4I/S09R-tK'p94:IVNJff/gHbC&llIfF.d9Q\aYAlq
%`dl=<<3)p8R]WnBOnPZ$ecD:SVX.(+V7.h(]Xt$A2dLH']CZG,k[59c*il'Vg[)59HfV(7L6:gL(5@c;OGs0bVSI!*OQ\QRS`6U@
%ejik6PNJrkBWH@:Tc,\(dV)dYZ\kSK"YZq/nh4i;:oqgoLPSKbq`ls7S'@`66=5dS=pj^mHrJ!Lr4WUV0<7eIdGukg&4P-Fa%r;_
%:VmK_:X^)@B6eq-0f@V=M(<_:C3`+A4<j1r==IhpageHOm%(%MqP532^[<(L5;8;$HG#92>rd294j'BF)_<FnBtJ0JMoQUk5V$G!
%cI!=N;/[Q?rV>bBn]L?SlroSua@:D0#D!tsnOgYId6@H.>_5:=8W"G1787ckOAkAo.84T(OIM1#\:uP69-Hp_^%'cA9okF'^.1kT
%iGM8Il)Z0)G$phl2u2VhM_k#rBAS2uX`Ne>W!-i%m8K^9-f!k]o2#7jDrtbXA2M-P(1^6F/!2;e#:`F\bHjC7Gn9,E>DW5uckl4f
%"DLDcWlWS<8S4mq5M@)[-Uil;A<45$AV:enMZ-%O9aU;o$ft[fmjKM,&f.c::"ZL-``hY:%2qo_08gkiTD7/#e?(NR^@gXd!'Ke,
%oN[r6D4(jP2p_:>'eQ929Y4V_s+q_hp#sKAK*c7*Ho[$KjougrMt:HNo)'=6ZfR/iI9-nP[OA<@eZSS[l-SSl!1?o._)I6RqP`W2
%[g_;bB6nm,Su;I1^k8L1J<h`4H3*SH>"IAqX4ioOFbg+75WVD#U4'h"IL=X55O\aUg5#u'`T_84_c1O,Y%_q3X_Uk[lf<L9c&X7Z
%d'r(shrL(;?e-dAfo^l`PsY9NAaLc?8,:=(QHc[qSi=tma+q`@`;M8VZt9)2F_oj9[RGdEU&!,ir_5`Znh6i2+HBMi(@"o-IbaA%
%k#:*1`6A?=X"719@9V\+SR]"&<Vom247sMA;4?-i+!N)ZSEaPE_TUmo%>07a1F)P1?JolJkZrL2ZGEX0.D!E$Wr`r:R3]oCXsMG]
%R95AfV0@!I&^'1IXp8j)7Me=FBo5*S]nr2VG2BXmDs^3*\qHA_]R,i?MW[@@3fTlj+sc+de3AV=p6K*:G<Z`_?PMC;\!GAml`S9(
%"7Y0V1T,cn/n^MtUcu9Vkh4<*M,n;9S/nci7AXVADBbG<M8g*4#A&j.R?TIXP37"<&m9iEnBE6IjjVY1X]A[9_6(16m`qHMW<`(p
%m\(<ra_oqHUMiYF-!gHH&'qdR6+<qo=l,B4I[$qh(U9H:hD+Wc9")CFF-8)fhd#T;O&,>"F=jLVBmf@BQ5n]k5YWpfI]*nHRCi8A
%<ZT@rn)c\B>(cmc3;;oDkJuZGY'J`&c.ab.EB:h5@Cpi58DQr^1H>`/)sKhW0U"E>$_*)GU"ZW5gZbrT)#Y[T*OsrnKFe?F4\CaI
%=q4o[=s,["Xk@3NUJeFf2,<S<'Bd9AhDO,7+XcEAHY2OGnmu\l1r0O!*W#K$L@&`*!l(WeO-*LQ8S9'/a[t`tDT]t;SU:>P-Y+fY
%I(jD-X.*6V24n*_625qq\dGK%nf4m$h5]l!h)\r5rIs$qP)ImE+q!),Jig`[GP)3bqrOH7JG:R;i]EpGR[tX>4N4%_k<3!#_3inh
%qTNa!"ee7j"!:Gg$FUj6W_K`!"in7[$2F\^[P>h<&Ib_j7?`a&68KTE2Sj^F;N[cegF`TqHWju"C;73:C>e>T4jj0%8Ps.E2);%0
%hnMs:o>Oe_QZ!tK6TndNl@I_\2lho$#hN6H%B8f.4Q1<RgY=(5Z@ijP3lUK&1%%#$C>N%AiSM=;VcDI9*ZuC'Rc%]LZk8<m4rNj!
%Brp4ggenn^_0j@+,Z5h3A<o,>8&OVQG]-36G$>;6qV>c)_=l?i<gaAP;1IDtC1h=u7GQ]1CK4ZZluZ$!U>KfcJk2p7J=_qsact[#
%o'lF0WfW75(J--P:`J`hWQdLqEn:$L8h(iqN(&[`ftim[V4_Z%[Ie7BJhhF[90G$BQE7P4MQlgMUu$8d25l9t2K:N_ZR?;-Xcdt`
%J%_6QVjOGNGu:=ZkU;dfg4:`;0R<;^M`5D;q1=m*na:R.('S^LmQ"-uD6&F.g5n>51'u.[3(u8ZbGr5Ab10'eW(r0M>d&27UCu_[
%8^=Sc0O_q=A";8';6>I'Io=b&+:#a7&t$*boUdFsQ0osV`i&K\E;.gjXh1.I:RDWW-J0l@Sh7bD+YMI2b0!t&>;3gl0gCS)5!]2N
%lOIi4G2Q72$LIIsZ>nXr*o!OuIZV90P]<,n/MNamGqr5iO=DTS%je4j)IM5"]1Ml1qd>hXhP@GE9hbm>":2?UTWkV`-&#Yhn=1S(
%oD9EV:XC#+9#s!/h_8$HfgBR'OXdQb'KMi?ain7;L:jn,fm1jcs4"::4T6ZD=%"K(#:kiGT+Zk%DHr1h_RNc>WZ)c?UBMu_nZo2O
%dju)47/j*A$YHXFUb@P"+cXg9_SKb+FbE#Gk!RZB@%3n`$ntd3T_LX-n#/H6NA>4]"X=AsU^&OTF.gianKr&SUI,KcoO5)?iC1s2
%dhJl.h$CVh)N[6?6-q,p^k7f/hk($tqp\lTWPdLr&l6m0eQEOFrCuqgP=5Z81^DmC"JT$Z[s?>U::,\p"[R*L0/MHn2;se6/J=kg
%mh#,#"$pF.:RKrP]'C':1E!)hk0\S&!B=]c&O3?dqqJkaPM2p%?thq&nUDO!A\e1Yh\HUr]s\eKXDAS2-f!0Rhf/T_iDg48\1rYE
%O2`8>Zs9@ggfCU!r.0IL$HmLS:o<-DY0hW2Z=2ET4de`>/Qb"]BP>?D0Ap)/I'Cn6+,iF#n;<lDXU6]=Sad(#D$?)0#n,;s2g+]D
%1@'Ylp:p.T(I.`)l`55:^]!0WmAp8.rV'[si\u&cr;.A@Q[aGDp('BHgRgEBs8&5^-&I+tQKG*-*gnY[HiM^tlaB%NJ[kIs(]WfN
%:D[Aef)PLu54l<kIeKQ03;RnU%-.W%*7-UGnp>@rUBuUFREV^4Fl9L?H\ektJY#XdpdR1ShIqhl<(J-Wg/7q2[F&)dAOD91p4c6N
%=d&AC:BAKZk-9]+(/YIIT]'Y.RfGD,1>:+9H0Ou/\:m6nRtD[tku\pOTOG+hrc9JD!+GKeSU,&a!tTj]%Ht#_Fsa0<:B>B6dAl0<
%(4isIM\kdG9^igkf7jg?MS0J_"P`1/nU+Ta<(um*dt?hE\7Xq>XbQ/U*dttlG&V$(&RH2\-`C\Y%.[PRhm4D,K>gari%t?nZ'g;&
%$#12c1jKhILm9Blpao@>@It8uNK't@eL]EA[_Z.E\F*m'kQS`WG\MOR8p^-=="h"-5Fj'TqWW6o^@&Yh??_n5)dFQol@I)R(H%Ok
%C#ASt^=DbdJFcI+9tPU,$*XQI2SRPe+oL/oD*U=uKC@b>r50'6i;8!/V]4[0]nt<(ESPB:<e#*SX[0B"UKLWn&qk7<[%WC8iNSZ1
%cS:d_QGtB;BjN?Z6^J)7FI<sK0sok:(Di/7S[&_o:)^X]o:r^=EJrX(YW.m&`!:"]p(s85Al,=W49a*K7#55b)GKHh3*BU2JXq=[
%lY;#pU`?=(C;Wjm].!_'iE56PK2=-har!h_O3MErQt7c(OqbikH.U@Bgh,"%&f,A-#SZ&6h+)[V5--?6mDGK`HT:WH[@lr?bnB%#
%?;V(N&%eET)Pr.F']0t*fg-'+i5_n3L%faAV<^/si?Qp;/d5`@YL2ZmYVsD.=ZoBlRY$*/[Yi"S((./S@_,T>/5AsU/q*R%VkieR
%+@SCRmD);mR(MM=o;eXeAq`ic\2D!2^IR/sI%7pSmO`b]d!DVXNW\qQiaFH`mMBo[AMOpBj<%,$mM#>p+%H7ECuk&?><e)EJ(_o8
%&(mI-:AQU5ReB.6c_W+kFHoB,6H1GWGa-tj0jmsHe;U&fBPjJh=p?3r#&c%HMmjRhKkqcW\<)[t`?jk%<oS]H=KOHKN1Zmqj7i%s
%[b9D:c#o"u,I2m"TVW@#(#D`kc*Hag^Z5phpf)@rG*d)_IX*tVSah.5#oC`4a]tG=D%r'<\qai35BEGg(:;U$k@mX61*n#5ft>!5
%;%iHJ5`pJ`X+f?8Z16Q9QR,VhZZX/*E3@[;);:Nk^S-+CCL#/"NYor#%i+tgn+,apGPija'i2&(\a,m2TjUJ237Rmnn8Ue'B"%Q@
%?:\7tojT>PGqb\V7]d)p2+Bn-OV1AS%_",_3%V0@E?K65bIC6PKo!fi:([SPgX$q_9"$/"9GLAtbE=ibRb2/4P#^E'cim"5>sc]G
%C=-iHFXO'Bor](q@Wlj>Yf)8j[renT"I\@(>/YGaQJu+f,VM?2;0_ATgQHEL00a=4Whiu\8[D#l&1*XeF<.s_r\TARccMZdHJf5q
%n!(WPZqNnU4`QJ<4ZfW*5\f"J]Hi<N>b8.k$C_eQ<X/VPM=TU`MNd&S<kOSDD*,5PZ)uGm6@OF=1a=tqprIS92+./V6mtgRn24t=
%+A\V,/PTWi6QQW'j%3\qjEflS`u1=KY7p+Lh(4N;=W]5TB.;M*58f*S#KGno^X'"d;Zo@\WQddDC`?gu,WC]8PL5'S9r,U7R_`YI
%$:[@1lrW5k/HJ6^m3S%`&A5/kp$5Sfcd@`NEGTH<HrQ$s?SLY>bZ75=SCF,!B!G\?H`37>rV*YQBQ^pMqJ>2"BA(A[`X,7ZY,e11
%00$jp/a7mU7u9('/]DUU=YdmYRQ/V&j4+7LqonLB[1R$ZiJh"*cj*#e.C[td^+XVTPQaWmlJre[fs5IV%4o;_q2!&aa"k!`nR7[$
%9+o)^rWr*.9?bC0lR9l9`Y,U]Lfa;a\n]U^&>qYf3c3Q0(6R%#fme+U81di(Y*>>"/Bfm$^!#IVD"kq+6'c=i",4mG>MduRmTVXY
%9*i5Lj,;'3I-]QMRiu#LU]t@JhJ9*LX4n&eMd+:(]JKt<L94WdNi4"q.pY^DC(]h\dsL=se[a[l]:7=J>a(E`:LE)2"0_F/([<1O
%,r-IZ']r`#_-t\%UE[';`\oI'9;.9bbAd#=&89pj3"KqdUd<SJ1l1p/5-#u):_u"+@a%:/*#^d%^<jc(Oec7aLnu\(TaM2I)4+r*
%#\*X)V.6O^Of5Qk+1)Y<,#.drX(<KU<4r%CK]ObnBgK?L]9OKe3cUYS2Y&CElBDr#,BGo)<t>`.1Tq6e.]?nN$^.#!gp'It<OlCK
%]kl6bjK@N!6ZY,$o@,\5:M$N.`X.=Km6@!);MS*O]^-+lOd)O7h)HA7'Nq5Gp`R`m=>FlE0<X"[;/!:5MK1I)H!_[tJX_kX?*[<T
%#H8q=!k.!))j(BF>k^fmQEe;LH]jR@f2Q\sg$0IXe$f4N=m7Xh!sUE=m(s0AfUCC1b,.mpIEdr"A9fm:3NY45'C<Vmd%9MrfTU_m
%BE=9$:W/XMRs+3o?9Re4T6n2<e6f292Y$UW*p.\[`d%00J4"5m?[\qtCR8jl*Z7W-]i*8Dc->r>O0r-fXfkdJ==sEc'u)\!?1,hb
%P^HqZDEbrF\[ZC/OF_;3Zd$Qq0-2s$?/l?)9M/W)Z>2&B>5@;Drb1g_crVVAN%,G.pX#FR77=IC&tmI8(&:+Bh!,eR;(&2l+cZhN
%q:LW8311A%nI23YNT-BKc*UZPDrOV"a`i%%a8c,X9`oW!U`#?6k#PrdfX;R?/Q=a\:*R3l`muW]\D;UDHend5@E1nPRWnRDQGU8R
%7GtO'TA[HZk.[7r^&n8nMa:/as7H*3_WVYOJWRRQqao;*XqcOl8cN;QM)CH&dBNLC,\=)O`j#?7;A<#B-^_eWj'mf2C5gt3qosQ$
%;Ihi[mH(Wm'0>aP]a\I6A"U`Hp<R1AZU!?XGdBj4F;o.6L%Q_3DBNL;N3qJW^Em8^qE?fjnWIMY0`$ZkXCclh_sT>@CcQr-3ls_3
%V\1[Kh_q=)2Vd$U,fhP@;-9PXY!0/gcXKneHt#Tf.J\jFSe5-HW]53o&^?+oQ+OM,!X+#Q)7t)HVtK*_,r!$`]B?s_6CR\p,=6CZ
%NJ6`_&TL=,P"m&%508(2I_EI)MGB$jF$[qjgN%Mh*#\3=]i4gQIJ`F0]tN4K9Y\9M@>mJR0YAC[j0dh<V<-dEULg.\j3KGLFYZ,'
%SSoEM#LjOXI/QRTis"M^Hun1m]*99]luoct]!F(sNJY$)d_!7.6:&:74jeI9d0\V;qj_f#7?jd?$7tpXSI!9+ncIdDR.o1q/'bsY
%FDHquMk%-AjQIjK9tjg',MJFdN#mn'S@>[NC#)OUADO=\Eo.@]><M-DSe*%*i]Z>q$)(S%2"hpHgpVt2c+PKXfUKP1r?m7IWQo_6
%!KkR"eBlSVSnqWf1Xj>#qakMt<3frV-?![5Oem@b>K,I2VGk)t.a,pb5!?ZCc%#>gjQQUb5Z_ZZC9:<;CEi)GRR).c$I'eq/g['S
%1=0=g&ndqu;VT#"Ot,L=\;t.V66"DGeb$[Q@\8n>5?*ppi%5;W*hB;3pVu?)l=&F5k$m\K]*68PSsq=</.G_gUJNB_@<SJ'oN0Nh
%-IDmm0RY(XT_OFCW!5llc<'A1e-oH"BGt@7U3W)q]p.Y6!Yq$F+7%r*0W<c6Gi[tb)f.mM/'gNe8j,ucNFfTN+`o-&R1t6DbUrmj
%<=P>H<d,c+K;B9[5C>odU4Zf@2_pH1bL2"p(/*_0)YPbIMQ#fur7OQSJ@7lPPa.r6;mK7hql=_[22U^]Z(AutP[pr@+;U?R^>?/R
%K0hGkQL'PP8l(>(VM.,kCEA6Y6P#Ijp%@L%-c;'"LaK4O+?(J'gHhS<2JMPJ@T>HYN@'Km_=YE8G>P&+#ecb0!.G=qc"`2;lO0gh
%[lEK$jJ)NkC-;WY(27=e31=&7#*,!`2!Nr&h*I&Zp]i^"i]t8)$QUg0nc^%.C"hu_8+/\@-Y&FVVr<!uf/\4+OQ@R=murLp!T`fM
%DKOd@'`KYsk(!49qY\I;`Ml0@?_]J,ULZ#(\Q"h3ot,g@T.2Ku!qo#^nc7cl57.3]mJBV/B`V^b9"?$C,jM$S+Xo4NA(c[Y<eEE4
%0]JV>SaE='1sOri8MdPA'+_5_d\P"?C+2'MM$Csg_)%O,<(qDrBe@0FNI<.'Io&m9N1,T06*nreICBi+-4rtU5nNGU*BJHD8btn:
%NGT?@nrX5^:=[t,guPcT#';0IF*<d4O:%E<WN72fd\d!laYf0ZFO[5_W+H13`)JbYbIDckEM6Z342LO5"6Xqd>mI_@@['Y4TC@>n
%rhCpR0LaNAhuET+4%r1QWcA-ViL]Ma;HRNj@FQMoo-E<!cR^csiX*M1U\fgT,k#*"!VdO\=L3*:Q7JLnN253#9LI?"ij9/T*&Zsj
%U#jLE<Y>c\f[fDI_:#2U6>2.N:r2^5.R>rVeu0m,a_%U?kNS:S!mW&D6H3@5>_[r,(mIug3YU1mfu7nVH_5s24OJmGV)VQt\/9;N
%WTssM@`pm-!7n)PA&jOFL#QI[!i7)!c)>;X*17l)AY&Q//5B*q^?j<>2:8N"<de\@F7f;!1<g'+1K:f76jI`CHI=coNK.4_'E`Z;
%1F#Yi$&Y$(<R7nq#1k-QEa>-!;0tca(OZK5iA5:(N[KY1l\L==7DU"-^sBuo.G2,V+bg]:a8c%-(c@FDRkBgafgOfPND!6<FTO@J
%="1;\F?B=g^/PrenpXmnG)NI(KC$)+FUZ"F$l,H(=lk_DH#o*>OsjiLWVj"`s)c>+BG-^/T;>r<b8ak`jt^,[k#c34hN-AKfb'U'
%hR=H'Z>Vp-F?^XGoqg'(=<Z+.qu!%\2bDWE,9rq$>)G)@S$"a"q-D\gpT.D")uKB"rH+bWM)3K*eP[\k)^;l!=-_rWqTQL0P6fb"
%=f2>R\TR"d$Z_j@T>Cc7^&E6q5L*+VS.@R=aVqC[#*hh>-!jRh,=m38OXKX.F;5E]]>i&IHG,L#L>g.HEP*4cI5,l'Yh')h/6Z+p
%\sg)=`KVp&ToW-;>b1St'flnRY`agbU\RLM04kt5bO6@,pd#Ra@71e+(;J-_>mGVa/@H$5D%]=E%+Qe_CTDU'HC-Yq]q:[n+Y7p'
%c*-":lS^AORW4VjTJ5M>QEiDQjfNekC\C6>k7@HKD6)eF[_1@f)j"nE*POm-:1DVSdjUs+QlmjY7_(0Qb37)>Pj,\?d#5,;MgLBd
%75"66IKq[#Y^2]k+n[!W(UaN?$oF+BEt)$2J#[9h>YEu*@\$2c)Ph#i;.9b(NRn_HiYthdXP;HJOO-*DAtSq!82Y\5F.#^EP==ad
%e-):Tb;*DGAd4?MN'gHV(9XN'.m4m"e)H@#BZG1aBJXd3&/I\?)YV,7LAYp1&),M`+>7XNr3B&A%,/-McD;6M!FQnq=\$<`hpUY'
%p?;hUno4nk%CU\ljO54F4Bm"X@:>SBW7u&D:+jAlZhD-[_N1SeJ`rj7L:\o2R-uk,,/5bMU(*unBo]9'GAGmC[i%5s6&'o+'QCAf
%P]I3_U))b2lQ=eU$aS)>[YAVm-8H-r/@<-/W)&t3EN9Sm,U(9fTGSnt],TF?jF$1SGRN=uAY)V]nl>cWqbikn<GKq2[ef@@e`W$p
%eo_c%WG]qR/)*jfbiJ]mgs\La`k^7!1Oi";nmnk`V>U^-Th3J(MUb8QkKs3;AQ(XMhVj>V+up*$.1$<Q9R9Dg0%L,h4BIE)THj^u
%2LLPAG#;R"IipRAl[f@EQ(_`:KrhRMU;=O[*1<AL?B#'TVbG)l)gk0(mi^d]Xq_eaBoBoXPqonCB[F1_Oq$DX@MBP[/h;q"4>od&
%_nqksd,%(SL1MMor0&]E68UL!oMA'mj1oGePmAYg"BC]YF(UN7!&2GY@3M+2#SZR><I,HLIu5<j)\cYLIa+Cj=-"^3LftTrp6R#K
%Kh*r&C>AU*&?:$GR2O&icRAo_U2p^6\0<IlZj>#ZJN];9h]/d6/EGqRC6C8]pL%L_/gOu$C\YPJ;(r=AVdteE>&tD:ZV!BYdMjN9
%/(fr9]nfB?jVTo_06tjQ]8i?.&8N/j*dns/Q<-3$0lZWBFO.Jl>(]Q`5-A`\3HY]B*);njSjkgc`3H4eb-tVABrbH3`*$@4"<iq<
%a!Q2Z\Zb*l#;:_JlVI1&bOdS%f4Tnuq]oeXCK,#WiP#KAImT8DKF@%>lt]2):t`kTru$,Z/V#9(ZJ*F5'D>;h2\?s03U^GL/'XTk
%Q?+5I^Ae!ETYr`.W@V4a^</>)eZ=nTLS3,\TX>jbD;<bgk6O%KeT$hqLSq%:Xs9^irnY(8dE/[\m@-J]H^9*`/&kb*8(j+?+Alb1
%;Z3-Tm(*cX0Q(3.7(JRH"*/jZPOs$%!At[5KdimM'a5bEF(>2o/V/qF^2e]ce]F_7pq_#</U-'YF9lpR*:>l;2\0&`H_IpIY<SM'
%Q9aleDNpj9iuc6gZgLfX??h9^,(q(?I%>o["k:,.!*8_[.%21Wb^p:b+/9c!M2qe>&I'uQ>M$:n%3[/bKmBGE<7KTaE[<j)8h`mZ
%PZ;&.3\X!l(=fW3ea't><M@:$IZWPsD,r$J=q5kV@ci>3=ihG;[DjjG<nKnJ8SZA^;c=FG1.s\,1+-RYoni?u+5Y7LcF^Vor:o7,
%qusd'#:_7M9Uu"%jd!XurFZjn]aO+b$\1Ulh7IjX/u??p.\iRE9D\joG@CV):,/M9]n/!,8'YUX]:$oB)<MAF2cP&>X$\99]_\e7
%ZU2n`D7dNOQmgKtOIe8e.Zp'_M/j2M(fqBh94V[.QAu[2>&hc@OtthP%[_gZ.8,=jKqgq]/#drg)hS[gU4"]Mg4sn"IHna4lG$Mj
%(/n(2iV"A+,I>agrknU*GPJ<sZJTH7.fsM<5E2Ui0kP%.+CMPX5sH4EW5ae*lD:;<M1q%`O1$\YiOfj[T1X.>ajYH]^NZ+jn`;c5
%.QInumP;$_9Kd)<^R`!EQRC"tGBk1#RuDZbQ;EZWOEV1\n=nb[nlnYcLfEh>J75;prCBNs:i^!O7"CMj<3fWH$J8hJEKLALJ^)/[
%go$u?%=fAj)kEX*SMq^2TE`XsGP1s_Ba5]VYLaj:h*6`so9"fHfh8`s&<fD;oNLAm1=h,gBaUM65tF?OY_6CGq0GnRJ`:S?Bs=/%
%ea3lD15`";*RJ&^4?@%O+$&p+Oko6TabsZ9QSMWL6"ts47i_TC#M3spEqM,G]qt1]Rl!11X_JuKF&7`Rl``fjc!8o,Pb4$;L!`ia
%PObf+ri-,`+jbQ>$Si+<G7`UnXhIpaR<2O6JKU2SBT>G5=3<u>[^A3^Ui^`2atbN;eHBaGJoFf&)TXTPAu-==T]s$<lKX\rDGkQ3
%3o+P-cYValdf@(j<+i3f[aO)10:u.9*^j\L29f4OeS6:!>#Rqo9b2D.3?DNqqsrLnhiGRsIok4?*quWl"EoI\":O,W#<!`X0;2th
%#J;(F<!=ZsIiu6-1LgAWNku9.&M\dS?cWu'91_,g+g;GM;\.O#%:h?]CuZ%B=+0Cf,@OmO_S?'OX/lpNGmtpgprcQ([0Csh8Yk,G
%XJ@MD]N5[KDpbW]nt?Zj<*7WD3/B6fC'X:CJ,dD/r],W+O<aahHe\;VKV.,M?2ERiJn\4@!858(0Pb5:33$02kj'HY92T`P$!n4D
%n-<Z^W0b+8V;iR:!\f)H@@"UK%i=;$=41ufFtcU)rtR"m9*6\>#uGpNGuDple\VH"H.Eka3V7:e*A#2r$-]c`fZ,:/dR7]b4>8t.
%5Lo+:Q;C)?FD$BeZ&RjX+#KdOTDdd8YAZ%BEr#"lc[U4]oBHkD>^ubKMjpoRrprph^:B9G2I67I?`l'N+8)+)f3c2&I/E?pDgm3-
%_'=I*k0)fF('u9R:N>gt(Y<T^?,->D*)"T18jj13qqH,I5*E9+T0)UFf<9Z'e[mfF+7e_Vn*V4dlSl$(]t1lPk<E:%q=aC(]0#1<
%J#E>GlH=BY`Grl)MfXZ5?2SpQrmo-&I.dL8Mm"c5^bB'.]mTe'OGu4\_3%r@mjGl]I.QIEp"Ou/I/VE+G81JQY-nicVshe:0prV.
%;_qG1Pi?q)F0thFbLjpF:&MQ%dCE*'h_+h\Q,T:uXFSe!j].C/dC.`PP!`f+.W[FkRXA+BNqiG#0&%W"q"Crd33TpREMFS1EO8^J
%0JF#)N_gMqPb7ZGViKZ4me3[PM[cJ]q4HE1Wuj:2KA^-?P#R%00'1L3_q<J@"dcn[IUu2VO@4,l?I7.e]K/9c+2I,hg06[RX$p&5
%k__VL0KOZNWuA+(]:Wk;;_&+UYmGOt5lF8!+dApMq7p9e(QEPk<kiP0W2-7l1s*%5"B6O:MZfbkdjbPtIi?#p5Y[M`d(M#0n`A\U
%cl(tCS*Y>lmE.44]+EsXX?0#"*(U^$PKRT&Gk$bZLJ/Xl[,h`j"Yq9bN7%822,kPXq/XaAXKs-sotUhto./XSCOX.Bkqhl\V%DYs
%``h.;B4F@73J/O-:4m7QC4(dk3:Cd<=r#V**=NXT;\io2A2N(13[74[A.'loI3c:)lq/368dPhI2mTRNm+d1@#@io($cVe6[X$NS
%KON8?(DKCH9[0<F&h7DcIreZL7YIr!_1toXBsX+W3d]%78A_31S2Uj7dBl&L`phB3m0R*&K:/TtA0P/NpShNR!-[MC%OkKi\=A5.
%Ui<:bjl)m],pfXlEf0B)<k&$=H-[i:!!EE3XP:&R./giZm&1"X7ue8@WBm^!-eRFR<uFmi=>^b#gt^u1^1Wn(QoWXt=d9XK+F?mO
%BNrdtcm6?mJpP'`\DkMc'23k5_X+kN.,tO'GTSZm=^pfndAj*U=e>=u'j$m(h!GZPH(+C&XiNiO(q`.I?Gt@r0Bd[GA!h;'WqVX`
%lje+JBOd-'!SXV,p+uFt-aAQ:(;&X\-S8TrD20NDW`tc&-.5c[,BjA*S3hso0[ss8l)9&89C<3@<pUI)cUlEjoHl9c,n@sU01!2u
%ICQA(,+A0&":4^<;nPt=7!uc*g#\3nV,p=%GOO+1UdD)0X.Fk&B"/J#r9(2nRAriFgQ[X[2iq)O%.H'f;9cDGq)c[`?q^X`-oF.P
%U<.pAr,Tk^l1p#*a10-\.M9dJFD0i8NLlGap6GnV;IiiIcHU4Y)7GP0QXPIMDAa-Cf[Yq`2+9pE^0ChKTF\VGIH<^QeOh*[qNAig
%$IVk`D64IMe+TN7V<H;Rea5"P%/h('"DTKK'-uU&[=YN$+(Z)d"a@0W6?6r`Y9"P<B7?PQg/R=c&-=W(I\ES5A#BL*i4E=Vod9-m
%>!Od)K94F7NOt.;e6k4Y\8GCH;=>1BXDM`dY\BP^$@q6;%Y5U3<70ugh9=*U2^)50I2[q&QUu3aqcobG@le9<d@SFU1nD".82$kF
%Bf<u!4EZY.ZOPM\pRgh?ODj[&Op56g*[L:#`?T=WL<mK\!].![l%6p<MGgbaPGk1TA"0Yl&dWO4\u2a."=1XjJ%G53a>2^#?^mu/
%Bo2Di#M\5P@8A]>(T3e0(_ldI9A=\q,iHqQ&eq]2p(]9:lY=ZghE`6b+NP,6/m_W8$#`)a2LdetLmd;&r!K_FHp<j9)tEeV@7KQ6
%R@Y&G3f25d3*Gg<P33uQ"<5XLpA)Q`+AO/Kb((RZ&l%N5KVH.2?;ll>s6B694PM7\d(`reU*':(?SDHLb;WeB]_qL"mGZD$5Q8ph
%n#ucSgWNY]SGqkF^]3HerUn.kRl=U6q@EO#(VbHHrQVsXhd0Z;o@;HB_SVB-+8koS^\k!Zq!:NN+(rN4[f~>
%AI9_PrivateDataEnd
